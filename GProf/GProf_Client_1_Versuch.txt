Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  us/call  us/call  name    
 50.00      0.01     0.01   621551     0.02     0.02  std::_List_iterator<corner>::operator->() const
 50.00      0.02     0.01      148    67.57    67.57  fillEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3])
  0.00      0.02     0.00   672697     0.00     0.00  __gnu_cxx::__aligned_membuf<corner>::_M_ptr()
  0.00      0.02     0.00   672697     0.00     0.00  __gnu_cxx::__aligned_membuf<corner>::_M_addr()
  0.00      0.02     0.00   672697     0.00     0.00  std::_List_node<corner>::_M_valptr()
  0.00      0.02     0.00   456088     0.00     0.00  __gnu_cxx::__aligned_membuf<edge>::_M_ptr()
  0.00      0.02     0.00   456088     0.00     0.00  __gnu_cxx::__aligned_membuf<edge>::_M_addr()
  0.00      0.02     0.00   456088     0.00     0.00  std::_List_node<edge>::_M_valptr()
  0.00      0.02     0.00   428607     0.00     0.00  std::_List_iterator<edge>::operator->() const
  0.00      0.02     0.00   184775     0.00     0.00  std::_List_iterator<corner>::_List_iterator(std::__detail::_List_node_base*)
  0.00      0.02     0.00   170044     0.00     0.00  std::_List_iterator<edge>::_List_iterator(std::__detail::_List_node_base*)
  0.00      0.02     0.00   139922     0.00     0.00  std::__cxx11::list<corner, std::allocator<corner> >::end()
  0.00      0.02     0.00   132818     0.00     0.00  std::__cxx11::list<edge, std::allocator<edge> >::end()
  0.00      0.02     0.00   117398     0.00     0.00  std::_List_iterator<edge>::operator!=(std::_List_iterator<edge> const&) const
  0.00      0.02     0.00   113464     0.00     0.00  std::_List_iterator<corner>::operator!=(std::_List_iterator<corner> const&) const
  0.00      0.02     0.00   112705     0.00     0.00  std::_List_iterator<corner>::operator++(int)
  0.00      0.02     0.00   106530     0.00     0.00  std::_List_iterator<edge>::operator++(int)
  0.00      0.02     0.00   102312     0.00     0.00  corner const& std::forward<corner const&>(std::remove_reference<corner const&>::type&)
  0.00      0.02     0.00   102311     0.00     0.00  __gnu_cxx::__aligned_membuf<unsigned long>::_M_ptr()
  0.00      0.02     0.00   102311     0.00     0.00  __gnu_cxx::__aligned_membuf<unsigned long>::_M_addr()
  0.00      0.02     0.00   102311     0.00     0.00  std::_List_node<unsigned long>::_M_valptr()
  0.00      0.02     0.00    86280     0.00     0.00  std::_List_iterator<corner>::operator++()
  0.00      0.02     0.00    60188     0.00     0.00  int const& std::forward<int const&>(std::remove_reference<int const&>::type&)
  0.00      0.02     0.00    54988     0.00     0.00  edge const& std::forward<edge const&>(std::remove_reference<edge const&>::type&)
  0.00      0.02     0.00    54462     0.00     0.00  operator new(unsigned long, void*)
  0.00      0.02     0.00    51146     0.00     0.00  std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_get_Node_allocator()
  0.00      0.02     0.00    45141     0.00     0.00  __gnu_cxx::__aligned_membuf<int>::_M_ptr()
  0.00      0.02     0.00    45141     0.00     0.00  __gnu_cxx::__aligned_membuf<int>::_M_addr()
  0.00      0.02     0.00    45141     0.00     0.00  std::_List_node<int>::_M_valptr()
  0.00      0.02     0.00    45141     0.00     0.00  std::_List_iterator<int>::_List_iterator(std::__detail::_List_node_base*)
  0.00      0.02     0.00    41606     0.00     0.00  __gnu_cxx::__aligned_membuf<unsigned long>::_M_ptr() const
  0.00      0.02     0.00    41606     0.00     0.00  __gnu_cxx::__aligned_membuf<unsigned long>::_M_addr() const
  0.00      0.02     0.00    41606     0.00     0.00  std::_List_node<unsigned long>::_M_valptr() const
  0.00      0.02     0.00    30094     0.00     0.00  std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_Node_allocator()
  0.00      0.02     0.00    30094     0.00     0.00  std::__cxx11::list<int, std::allocator<int> >::end()
  0.00      0.02     0.00    28959     0.00     0.00  std::__cxx11::_List_base<int, std::allocator<int> >::_M_node_count() const
  0.00      0.02     0.00    28959     0.00     0.00  std::__cxx11::list<int, std::allocator<int> >::size() const
  0.00      0.02     0.00    27492     0.00     0.00  std::__cxx11::list<edge, std::allocator<edge> >::begin()
  0.00      0.02     0.00    27481     0.00     0.00  std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_get_Node_allocator()
  0.00      0.02     0.00    26244     0.00     0.00  std::_List_iterator<edge>::operator++()
  0.00      0.02     0.00    25578     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<corner> >::allocate(unsigned long, void const*)
  0.00      0.02     0.00    25578     0.00     0.00  void __gnu_cxx::new_allocator<std::_List_node<corner> >::construct<corner, corner const&>(corner*, corner const&)
  0.00      0.02     0.00    25578     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<corner> >::max_size() const
  0.00      0.02     0.00    25578     0.00     0.00  std::__allocated_ptr<std::allocator<std::_List_node<corner> > >::__allocated_ptr(std::allocator<std::_List_node<corner> >&, std::_List_node<corner>*)
  0.00      0.02     0.00    25578     0.00     0.00  std::__allocated_ptr<std::allocator<std::_List_node<corner> > >::~__allocated_ptr()
  0.00      0.02     0.00    25578     0.00     0.00  std::__allocated_ptr<std::allocator<std::_List_node<corner> > >::operator=(decltype(nullptr))
  0.00      0.02     0.00    25578     0.00     0.00  std::allocator_traits<std::allocator<std::_List_node<corner> > >::allocate(std::allocator<std::_List_node<corner> >&, unsigned long)
  0.00      0.02     0.00    25578     0.00     0.00  void std::allocator_traits<std::allocator<std::_List_node<corner> > >::construct<corner, corner const&>(std::allocator<std::_List_node<corner> >&, corner*, corner const&)
  0.00      0.02     0.00    25578     0.00     0.00  std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_get_node()
  0.00      0.02     0.00    25578     0.00     0.00  std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_inc_size(unsigned long)
  0.00      0.02     0.00    25578     0.00     0.00  std::_List_node<corner>* std::__cxx11::list<corner, std::allocator<corner> >::_M_create_node<corner const&>(corner const&)
  0.00      0.02     0.00    25578     0.00     0.00  void std::__cxx11::list<corner, std::allocator<corner> >::_M_insert<corner const&>(std::_List_iterator<corner>, corner const&)
  0.00      0.02     0.00    25578     0.00     0.00  std::__cxx11::list<corner, std::allocator<corner> >::push_back(corner const&)
  0.00      0.02     0.00    25578     0.00     0.00  std::allocator<std::_List_node<corner> >* std::__addressof<std::allocator<std::_List_node<corner> > >(std::allocator<std::_List_node<corner> >&)
  0.00      0.02     0.00    25568     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<corner> >::deallocate(std::_List_node<corner>*, unsigned long)
  0.00      0.02     0.00    25568     0.00     0.00  void __gnu_cxx::new_allocator<std::_List_node<corner> >::destroy<corner>(corner*)
  0.00      0.02     0.00    25568     0.00     0.00  std::allocator_traits<std::allocator<std::_List_node<corner> > >::deallocate(std::allocator<std::_List_node<corner> >&, std::_List_node<corner>*, unsigned long)
  0.00      0.02     0.00    25568     0.00     0.00  void std::allocator_traits<std::allocator<std::_List_node<corner> > >::destroy<corner>(std::allocator<std::_List_node<corner> >&, corner*)
  0.00      0.02     0.00    25568     0.00     0.00  std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_put_node(std::_List_node<corner>*)
  0.00      0.02     0.00    23579     0.00     0.00  std::__cxx11::list<corner, std::allocator<corner> >::begin()
  0.00      0.02     0.00    15047     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate(std::_List_node<int>*, unsigned long)
  0.00      0.02     0.00    15047     0.00     0.00  void __gnu_cxx::new_allocator<std::_List_node<int> >::destroy<int>(int*)
  0.00      0.02     0.00    15047     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned long, void const*)
  0.00      0.02     0.00    15047     0.00     0.00  void __gnu_cxx::new_allocator<std::_List_node<int> >::construct<int, int const&>(int*, int const&)
  0.00      0.02     0.00    15047     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::max_size() const
  0.00      0.02     0.00    15047     0.00     0.00  std::_List_iterator<int>::operator*() const
  0.00      0.02     0.00    15047     0.00     0.00  std::_List_iterator<int>::operator--()
  0.00      0.02     0.00    15047     0.00     0.00  std::__allocated_ptr<std::allocator<std::_List_node<int> > >::__allocated_ptr(std::allocator<std::_List_node<int> >&, std::_List_node<int>*)
  0.00      0.02     0.00    15047     0.00     0.00  std::__allocated_ptr<std::allocator<std::_List_node<int> > >::~__allocated_ptr()
  0.00      0.02     0.00    15047     0.00     0.00  std::__allocated_ptr<std::allocator<std::_List_node<int> > >::operator=(decltype(nullptr))
  0.00      0.02     0.00    15047     0.00     0.00  std::allocator_traits<std::allocator<std::_List_node<int> > >::deallocate(std::allocator<std::_List_node<int> >&, std::_List_node<int>*, unsigned long)
  0.00      0.02     0.00    15047     0.00     0.00  void std::allocator_traits<std::allocator<std::_List_node<int> > >::destroy<int>(std::allocator<std::_List_node<int> >&, int*)
  0.00      0.02     0.00    15047     0.00     0.00  std::allocator_traits<std::allocator<std::_List_node<int> > >::allocate(std::allocator<std::_List_node<int> >&, unsigned long)
  0.00      0.02     0.00    15047     0.00     0.00  void std::allocator_traits<std::allocator<std::_List_node<int> > >::construct<int, int const&>(std::allocator<std::_List_node<int> >&, int*, int const&)
  0.00      0.02     0.00    15047     0.00     0.00  std::__cxx11::_List_base<int, std::allocator<int> >::_M_dec_size(unsigned long)
  0.00      0.02     0.00    15047     0.00     0.00  std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_node()
  0.00      0.02     0.00    15047     0.00     0.00  std::__cxx11::_List_base<int, std::allocator<int> >::_M_inc_size(unsigned long)
  0.00      0.02     0.00    15047     0.00     0.00  std::__cxx11::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*)
  0.00      0.02     0.00    15047     0.00     0.00  std::_List_node<int>* std::__cxx11::list<int, std::allocator<int> >::_M_create_node<int const&>(int const&)
  0.00      0.02     0.00    15047     0.00     0.00  std::__cxx11::list<int, std::allocator<int> >::back()
  0.00      0.02     0.00    15047     0.00     0.00  std::__cxx11::list<int, std::allocator<int> >::_M_erase(std::_List_iterator<int>)
  0.00      0.02     0.00    15047     0.00     0.00  std::__cxx11::list<int, std::allocator<int> >::pop_back()
  0.00      0.02     0.00    15047     0.00     0.00  void std::__cxx11::list<int, std::allocator<int> >::_M_insert<int const&>(std::_List_iterator<int>, int const&)
  0.00      0.02     0.00    15047     0.00     0.00  std::__cxx11::list<int, std::allocator<int> >::push_back(int const&)
  0.00      0.02     0.00    15047     0.00     0.00  std::allocator<std::_List_node<int> >* std::__addressof<std::allocator<std::_List_node<int> > >(std::allocator<std::_List_node<int> >&)
  0.00      0.02     0.00    14534     0.00     0.00  __gnu_cxx::__aligned_membuf<middle>::_M_ptr()
  0.00      0.02     0.00    14534     0.00     0.00  __gnu_cxx::__aligned_membuf<middle>::_M_addr()
  0.00      0.02     0.00    14534     0.00     0.00  std::_List_node<middle>::_M_valptr()
  0.00      0.02     0.00    14354     0.00     0.00  std::_List_iterator<middle>::operator->() const
  0.00      0.02     0.00    13912     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator()
  0.00      0.02     0.00    13912     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator()
  0.00      0.02     0.00    13912     0.00     0.00  std::allocator<std::_List_node<int> >::allocator()
  0.00      0.02     0.00    13912     0.00     0.00  std::allocator<std::_List_node<int> >::~allocator()
  0.00      0.02     0.00    13912     0.00     0.00  std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl::_List_impl()
  0.00      0.02     0.00    13912     0.00     0.00  std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl()
  0.00      0.02     0.00    13912     0.00     0.00  std::__cxx11::_List_base<int, std::allocator<int> >::_M_set_size(unsigned long)
  0.00      0.02     0.00    13912     0.00     0.00  std::__cxx11::_List_base<int, std::allocator<int> >::_M_init()
  0.00      0.02     0.00    13912     0.00     0.00  std::__cxx11::_List_base<int, std::allocator<int> >::_M_clear()
  0.00      0.02     0.00    13912     0.00     0.00  std::__cxx11::_List_base<int, std::allocator<int> >::_List_base()
  0.00      0.02     0.00    13912     0.00     0.00  std::__cxx11::_List_base<int, std::allocator<int> >::~_List_base()
  0.00      0.02     0.00    13912     0.00     0.00  std::__cxx11::list<int, std::allocator<int> >::list()
  0.00      0.02     0.00    13912     0.00     0.00  std::__cxx11::list<int, std::allocator<int> >::~list()
  0.00      0.02     0.00    13747     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<edge> >::allocate(unsigned long, void const*)
  0.00      0.02     0.00    13747     0.00     0.00  void __gnu_cxx::new_allocator<std::_List_node<edge> >::construct<edge, edge const&>(edge*, edge const&)
  0.00      0.02     0.00    13747     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<edge> >::max_size() const
  0.00      0.02     0.00    13747     0.00     0.00  std::__allocated_ptr<std::allocator<std::_List_node<edge> > >::__allocated_ptr(std::allocator<std::_List_node<edge> >&, std::_List_node<edge>*)
  0.00      0.02     0.00    13747     0.00     0.00  std::__allocated_ptr<std::allocator<std::_List_node<edge> > >::~__allocated_ptr()
  0.00      0.02     0.00    13747     0.00     0.00  std::__allocated_ptr<std::allocator<std::_List_node<edge> > >::operator=(decltype(nullptr))
  0.00      0.02     0.00    13747     0.00     0.00  std::allocator_traits<std::allocator<std::_List_node<edge> > >::allocate(std::allocator<std::_List_node<edge> >&, unsigned long)
  0.00      0.02     0.00    13747     0.00     0.00  void std::allocator_traits<std::allocator<std::_List_node<edge> > >::construct<edge, edge const&>(std::allocator<std::_List_node<edge> >&, edge*, edge const&)
  0.00      0.02     0.00    13747     0.00     0.00  std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_get_node()
  0.00      0.02     0.00    13747     0.00     0.00  std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_inc_size(unsigned long)
  0.00      0.02     0.00    13747     0.00     0.00  std::_List_node<edge>* std::__cxx11::list<edge, std::allocator<edge> >::_M_create_node<edge const&>(edge const&)
  0.00      0.02     0.00    13747     0.00     0.00  void std::__cxx11::list<edge, std::allocator<edge> >::_M_insert<edge const&>(std::_List_iterator<edge>, edge const&)
  0.00      0.02     0.00    13747     0.00     0.00  std::__cxx11::list<edge, std::allocator<edge> >::push_back(edge const&)
  0.00      0.02     0.00    13747     0.00     0.00  std::allocator<std::_List_node<edge> >* std::__addressof<std::allocator<std::_List_node<edge> > >(std::allocator<std::_List_node<edge> >&)
  0.00      0.02     0.00    13734     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<edge> >::deallocate(std::_List_node<edge>*, unsigned long)
  0.00      0.02     0.00    13734     0.00     0.00  void __gnu_cxx::new_allocator<std::_List_node<edge> >::destroy<edge>(edge*)
  0.00      0.02     0.00    13734     0.00     0.00  std::allocator_traits<std::allocator<std::_List_node<edge> > >::deallocate(std::allocator<std::_List_node<edge> >&, std::_List_node<edge>*, unsigned long)
  0.00      0.02     0.00    13734     0.00     0.00  void std::allocator_traits<std::allocator<std::_List_node<edge> > >::destroy<edge>(std::allocator<std::_List_node<edge> >&, edge*)
  0.00      0.02     0.00    13734     0.00     0.00  std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_put_node(std::_List_node<edge>*)
  0.00      0.02     0.00    10637     0.00     0.00  std::_List_const_iterator<corner>::_M_const_cast() const
  0.00      0.02     0.00    10637     0.00     0.00  std::_List_const_iterator<corner>::_List_const_iterator(std::_List_iterator<corner> const&)
  0.00      0.02     0.00    10637     0.00     0.00  std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_dec_size(unsigned long)
  0.00      0.02     0.00    10637     0.00     0.00  std::__cxx11::list<corner, std::allocator<corner> >::erase(std::_List_const_iterator<corner>)
  0.00      0.02     0.00    10637     0.00     0.00  std::__cxx11::list<corner, std::allocator<corner> >::_M_erase(std::_List_iterator<corner>)
  0.00      0.02     0.00    10455     0.00     0.00  std::iterator_traits<std::_List_iterator<corner> >::iterator_category std::__iterator_category<std::_List_iterator<corner> >(std::_List_iterator<corner> const&)
  0.00      0.02     0.00    10455     0.00     0.00  void std::advance<std::_List_iterator<corner>, int>(std::_List_iterator<corner>&, int)
  0.00      0.02     0.00    10455     0.00     0.00  void std::__advance<std::_List_iterator<corner>, long>(std::_List_iterator<corner>&, long, std::bidirectional_iterator_tag)
  0.00      0.02     0.00     8043     0.00     0.00  std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_node_count() const
  0.00      0.02     0.00     8043     0.00     0.00  std::__cxx11::list<edge, std::allocator<edge> >::size() const
  0.00      0.02     0.00     6320     0.00     0.00  copyCube(int (*) [3][3])
  0.00      0.02     0.00     5831     0.00     0.00  std::_List_iterator<middle>::_List_iterator(std::__detail::_List_node_base*)
  0.00      0.02     0.00     5177     0.00     0.00  std::__cxx11::list<middle, std::allocator<middle> >::end()
  0.00      0.02     0.00     5113     0.00     0.00  std::remove_reference<int&>::type&& std::move<int&>(int&)
  0.00      0.02     0.00     4998     0.00     0.00  std::_List_iterator<middle>::operator!=(std::_List_iterator<middle> const&) const
  0.00      0.02     0.00     4867     0.00     0.00  std::_List_const_iterator<edge>::_M_const_cast() const
  0.00      0.02     0.00     4867     0.00     0.00  std::_List_const_iterator<edge>::_List_const_iterator(std::_List_iterator<edge> const&)
  0.00      0.02     0.00     4867     0.00     0.00  std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_dec_size(unsigned long)
  0.00      0.02     0.00     4867     0.00     0.00  std::__cxx11::list<edge, std::allocator<edge> >::erase(std::_List_const_iterator<edge>)
  0.00      0.02     0.00     4867     0.00     0.00  std::__cxx11::list<edge, std::allocator<edge> >::_M_erase(std::_List_iterator<edge>)
  0.00      0.02     0.00     4592     0.00     0.00  std::iterator_traits<std::_List_iterator<edge> >::iterator_category std::__iterator_category<std::_List_iterator<edge> >(std::_List_iterator<edge> const&)
  0.00      0.02     0.00     4592     0.00     0.00  void std::advance<std::_List_iterator<edge>, int>(std::_List_iterator<edge>&, int)
  0.00      0.02     0.00     4592     0.00     0.00  void std::__advance<std::_List_iterator<edge>, long>(std::_List_iterator<edge>&, long, std::bidirectional_iterator_tag)
  0.00      0.02     0.00     4584     0.00     0.00  std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_node_count() const
  0.00      0.02     0.00     4584     0.00     0.00  std::__cxx11::list<corner, std::allocator<corner> >::size() const
  0.00      0.02     0.00     4460     0.00     0.00  std::_List_iterator<middle>::operator++(int)
  0.00      0.02     0.00     3795     0.00     0.00  last[abi:cxx11]()
  0.00      0.02     0.00     3795     0.00     0.00  bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
  0.00      0.02     0.00     2970     0.00     0.00  printColor[abi:cxx11](int)
  0.00      0.02     0.00     2970     0.00     0.00  std::remove_reference<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>::type&& std::move<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
  0.00      0.02     0.00     2970     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00      0.02     0.00     2970     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
  0.00      0.02     0.00     2874     0.00     0.00  int* std::__niter_base<int*>(int*)
  0.00      0.02     0.00     2368     0.00     0.00  bool __gnu_cxx::__ops::_Iter_less_iter::operator()<int*, int*>(int*, int*) const
  0.00      0.02     0.00     1948     0.00     0.00  std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_set_size(unsigned long)
  0.00      0.02     0.00     1948     0.00     0.00  std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_init()
  0.00      0.02     0.00     1936     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<edge> >::new_allocator()
  0.00      0.02     0.00     1936     0.00     0.00  std::allocator<std::_List_node<edge> >::allocator()
  0.00      0.02     0.00     1936     0.00     0.00  std::__cxx11::_List_base<edge, std::allocator<edge> >::_List_impl::_List_impl()
  0.00      0.02     0.00     1936     0.00     0.00  std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_clear()
  0.00      0.02     0.00     1936     0.00     0.00  std::__cxx11::_List_base<edge, std::allocator<edge> >::_List_base()
  0.00      0.02     0.00     1936     0.00     0.00  std::__cxx11::list<edge, std::allocator<edge> >::list()
  0.00      0.02     0.00     1924     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<edge> >::~new_allocator()
  0.00      0.02     0.00     1924     0.00     0.00  std::allocator<std::_List_node<edge> >::~allocator()
  0.00      0.02     0.00     1924     0.00     0.00  std::__cxx11::_List_base<edge, std::allocator<edge> >::_List_impl::~_List_impl()
  0.00      0.02     0.00     1924     0.00     0.00  std::__cxx11::_List_base<edge, std::allocator<edge> >::~_List_base()
  0.00      0.02     0.00     1924     0.00     0.00  std::__cxx11::list<edge, std::allocator<edge> >::~list()
  0.00      0.02     0.00     1916     0.00     0.00  int* std::__miter_base<int*>(int*)
  0.00      0.02     0.00     1787     0.00     0.00  bool __gnu_cxx::__ops::_Val_less_iter::operator()<int, int*>(int&, int*) const
  0.00      0.02     0.00     1673     0.00     0.00  std::_List_iterator<edge>::operator==(std::_List_iterator<edge> const&) const
  0.00      0.02     0.00     1456     0.00     0.00  dRotate(int (*) [3][3])
  0.00      0.02     0.00     1410     0.00     0.00  __gnu_cxx::__ops::__val_comp_iter(__gnu_cxx::__ops::_Iter_less_iter)
  0.00      0.02     0.00     1410     0.00     0.00  void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_less_iter>(int*, __gnu_cxx::__ops::_Val_less_iter)
  0.00      0.02     0.00     1348     0.00     0.00  std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_set_size(unsigned long)
  0.00      0.02     0.00     1348     0.00     0.00  std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_init()
  0.00      0.02     0.00     1340     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<corner> >::new_allocator()
  0.00      0.02     0.00     1340     0.00     0.00  std::allocator<std::_List_node<corner> >::allocator()
  0.00      0.02     0.00     1340     0.00     0.00  std::__cxx11::_List_base<corner, std::allocator<corner> >::_List_impl::_List_impl()
  0.00      0.02     0.00     1340     0.00     0.00  std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_clear()
  0.00      0.02     0.00     1340     0.00     0.00  std::__cxx11::_List_base<corner, std::allocator<corner> >::_List_base()
  0.00      0.02     0.00     1340     0.00     0.00  std::__cxx11::list<corner, std::allocator<corner> >::list()
  0.00      0.02     0.00     1332     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<corner> >::~new_allocator()
  0.00      0.02     0.00     1332     0.00     0.00  std::allocator<std::_List_node<corner> >::~allocator()
  0.00      0.02     0.00     1332     0.00     0.00  std::__cxx11::_List_base<corner, std::allocator<corner> >::_List_impl::~_List_impl()
  0.00      0.02     0.00     1332     0.00     0.00  std::__cxx11::_List_base<corner, std::allocator<corner> >::~_List_base()
  0.00      0.02     0.00     1332     0.00     0.00  std::__cxx11::list<corner, std::allocator<corner> >::~list()
  0.00      0.02     0.00     1311     0.00     0.00  QuestionCube::accessData(int, int, int, int)
  0.00      0.02     0.00     1284     0.00     0.00  uRotate(int (*) [3][3])
  0.00      0.02     0.00     1184     0.00     0.00  __gnu_cxx::__ops::__iter_less_iter()
  0.00      0.02     0.00     1184     0.00     0.00  void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter)
  0.00      0.02     0.00     1184     0.00     0.00  void std::__introsort_loop<int*, long, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, long, __gnu_cxx::__ops::_Iter_less_iter)
  0.00      0.02     0.00     1184     0.00     0.00  void std::__final_insertion_sort<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter)
  0.00      0.02     0.00     1184     0.00     0.00  std::__lg(long)
  0.00      0.02     0.00     1184     0.00     0.00  void std::sort<int*>(int*, int*)
  0.00      0.02     0.00     1184     0.00     0.00  void std::__sort<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter)
  0.00      0.02     0.00     1008     0.00     0.00  sortAnswer(int*)
  0.00      0.02     0.00      958     0.00     0.00  int* std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<int>(int const*, int const*, int*)
  0.00      0.02     0.00      958     0.00     0.00  int* std::move_backward<int*, int*>(int*, int*, int*)
  0.00      0.02     0.00      958     0.00     0.00  int* std::__copy_move_backward_a<true, int*, int*>(int*, int*, int*)
  0.00      0.02     0.00      958     0.00     0.00  int* std::__copy_move_backward_a2<true, int*, int*>(int*, int*, int*)
  0.00      0.02     0.00      880     0.00     0.00  std::_List_iterator<corner>::operator==(std::_List_iterator<corner> const&) const
  0.00      0.02     0.00      788     0.00     0.00  uiRotate(int (*) [3][3])
  0.00      0.02     0.00      624     0.00     0.00  lRotate(int (*) [3][3])
  0.00      0.02     0.00      580     0.00     0.00  diRotate(int (*) [3][3])
  0.00      0.02     0.00      568     0.00     0.00  fRotate(int (*) [3][3])
  0.00      0.02     0.00      561     0.00     0.00  removeLast()
  0.00      0.02     0.00      476     0.00     0.00  std::__cxx11::list<middle, std::allocator<middle> >::begin()
  0.00      0.02     0.00      364     0.00     0.00  d(int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.02     0.00      360     0.00     0.00  middle const& std::forward<middle const&>(std::remove_reference<middle const&>::type&)
  0.00      0.02     0.00      321     0.00     0.00  u(int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.02     0.00      316     0.00     0.00  containsEdge(std::__cxx11::list<edge, std::allocator<edge> >&, int, int)
  0.00      0.02     0.00      296     0.00     0.00  getCorners(int (*) [3], int (*) [3][3])
  0.00      0.02     0.00      296     0.00     0.00  getEdges(int (*) [2], int (*) [3][3])
  0.00      0.02     0.00      288     0.00     0.00  rRotate(int (*) [3][3])
  0.00      0.02     0.00      268     0.00     0.00  riRotate(int (*) [3][3])
  0.00      0.02     0.00      252     0.00     0.13  containsCorner(std::__cxx11::list<corner, std::allocator<corner> >&, int, int)
  0.00      0.02     0.00      205     0.00     0.00  doTheClient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
  0.00      0.02     0.00      197     0.00     0.00  ui(int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.02     0.00      188     0.00     0.00  biRotate(int (*) [3][3])
  0.00      0.02     0.00      180     0.00     0.00  std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_get_Node_allocator()
  0.00      0.02     0.00      171     0.00     0.00  changeColor(int)
  0.00      0.02     0.00      171     0.00     0.00  answerConverter(int*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
  0.00      0.02     0.00      171     0.00     0.00  QuestionCube::makeQuestion[abi:cxx11]()
  0.00      0.02     0.00      156     0.00     0.00  l(int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.02     0.00      148     0.00     0.00  fillCenter(int*, int*)
  0.00      0.02     0.00      148     0.00     0.00  setCorners(int (*) [3], int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.02     0.00      148     0.00    51.97  fillCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3])
  0.00      0.02     0.00      148     0.00     0.00  CopyListEdges(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<edge, std::allocator<edge> >*)
  0.00      0.02     0.00      148     0.00     0.00  SortEdgesList(std::__cxx11::list<edge, std::allocator<edge> >*, int*, int)
  0.00      0.02     0.00      148     0.00     0.00  PlaceToBeEdges(int (*) [2], int (*) [3][3])
  0.00      0.02     0.00      148     0.00     0.00  SortCornerList(std::__cxx11::list<corner, std::allocator<corner> >*, int*, int)
  0.00      0.02     0.00      148     0.00     7.89  CopyListCorners(std::__cxx11::list<corner, std::allocator<corner> >*, std::__cxx11::list<corner, std::allocator<corner> >*)
  0.00      0.02     0.00      148     0.00     0.00  edgepartitytest(int (*) [3][3])
  0.00      0.02     0.00      148     0.00     0.00  checksolvability(int (*) [3][3])
  0.00      0.02     0.00      148     0.00     0.00  cornerparitytest(int (*) [3][3])
  0.00      0.02     0.00      148     0.00     0.00  permutationparitytestCorners(int (*) [3][3])
  0.00      0.02     0.00      148     0.00     0.00  setEdges(int (*) [2], int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.02     0.00      145     0.00     0.00  di(int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.02     0.00      144     0.00     0.00  bRotate(int (*) [3][3])
  0.00      0.02     0.00      142     0.00     0.00  f(int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.02     0.00      133     0.00     0.00  containsMiddle(std::__cxx11::list<middle, std::allocator<middle> >&, int, int)
  0.00      0.02     0.00       92     0.00     0.00  liRotate(int (*) [3][3])
  0.00      0.02     0.00       90     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<middle> >::deallocate(std::_List_node<middle>*, unsigned long)
  0.00      0.02     0.00       90     0.00     0.00  void __gnu_cxx::new_allocator<std::_List_node<middle> >::destroy<middle>(middle*)
  0.00      0.02     0.00       90     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<middle> >::allocate(unsigned long, void const*)
  0.00      0.02     0.00       90     0.00     0.00  void __gnu_cxx::new_allocator<std::_List_node<middle> >::construct<middle, middle const&>(middle*, middle const&)
  0.00      0.02     0.00       90     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<middle> >::max_size() const
  0.00      0.02     0.00       90     0.00     0.00  std::__allocated_ptr<std::allocator<std::_List_node<middle> > >::__allocated_ptr(std::allocator<std::_List_node<middle> >&, std::_List_node<middle>*)
  0.00      0.02     0.00       90     0.00     0.00  std::__allocated_ptr<std::allocator<std::_List_node<middle> > >::~__allocated_ptr()
  0.00      0.02     0.00       90     0.00     0.00  std::__allocated_ptr<std::allocator<std::_List_node<middle> > >::operator=(decltype(nullptr))
  0.00      0.02     0.00       90     0.00     0.00  std::allocator_traits<std::allocator<std::_List_node<middle> > >::deallocate(std::allocator<std::_List_node<middle> >&, std::_List_node<middle>*, unsigned long)
  0.00      0.02     0.00       90     0.00     0.00  void std::allocator_traits<std::allocator<std::_List_node<middle> > >::destroy<middle>(std::allocator<std::_List_node<middle> >&, middle*)
  0.00      0.02     0.00       90     0.00     0.00  std::allocator_traits<std::allocator<std::_List_node<middle> > >::allocate(std::allocator<std::_List_node<middle> >&, unsigned long)
  0.00      0.02     0.00       90     0.00     0.00  void std::allocator_traits<std::allocator<std::_List_node<middle> > >::construct<middle, middle const&>(std::allocator<std::_List_node<middle> >&, middle*, middle const&)
  0.00      0.02     0.00       90     0.00     0.00  std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_get_node()
  0.00      0.02     0.00       90     0.00     0.00  std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_inc_size(unsigned long)
  0.00      0.02     0.00       90     0.00     0.00  std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_put_node(std::_List_node<middle>*)
  0.00      0.02     0.00       90     0.00     0.00  std::_List_node<middle>* std::__cxx11::list<middle, std::allocator<middle> >::_M_create_node<middle const&>(middle const&)
  0.00      0.02     0.00       90     0.00     0.00  void std::__cxx11::list<middle, std::allocator<middle> >::_M_insert<middle const&>(std::_List_iterator<middle>, middle const&)
  0.00      0.02     0.00       90     0.00     0.00  std::__cxx11::list<middle, std::allocator<middle> >::push_back(middle const&)
  0.00      0.02     0.00       90     0.00     0.00  std::allocator<std::_List_node<middle> >* std::__addressof<std::allocator<std::_List_node<middle> > >(std::allocator<std::_List_node<middle> >&)
  0.00      0.02     0.00       89     0.00     0.00  std::_List_iterator<middle>::operator==(std::_List_iterator<middle> const&) const
  0.00      0.02     0.00       89     0.00     0.00  std::_List_const_iterator<middle>::_M_const_cast() const
  0.00      0.02     0.00       89     0.00     0.00  std::_List_const_iterator<middle>::_List_const_iterator(std::_List_iterator<middle> const&)
  0.00      0.02     0.00       89     0.00     0.00  std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_dec_size(unsigned long)
  0.00      0.02     0.00       89     0.00     0.00  std::__cxx11::list<middle, std::allocator<middle> >::erase(std::_List_const_iterator<middle>)
  0.00      0.02     0.00       89     0.00     0.00  std::__cxx11::list<middle, std::allocator<middle> >::_M_erase(std::_List_iterator<middle>)
  0.00      0.02     0.00       84     0.00     0.00  findNextTopEdge(int&, int&)
  0.00      0.02     0.00       72     0.00     0.00  r(int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.02     0.00       67     0.00     0.00  ri(int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.02     0.00       57     0.00     0.00  askTwo(int*, int*, int*, int*)
  0.00      0.02     0.00       57     0.00     0.00  QuestionCube::QuestionCube()
  0.00      0.02     0.00       55     0.00     0.00  printCubeColor(int (*) [3][3])
  0.00      0.02     0.00       47     0.00     0.00  bi(int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.02     0.00       42     0.00     0.00  print(int (*) [3][3])
  0.00      0.02     0.00       40     0.00     0.00  findNextTopCorner(int&, int&)
  0.00      0.02     0.00       40     0.00     0.00  fiRotate(int (*) [3][3])
  0.00      0.02     0.00       36     0.00     0.00  b(int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.02     0.00       34     0.00     0.00  clearMoves()
  0.00      0.02     0.00       34     0.00     0.00  translateMove()
  0.00      0.02     0.00       34     0.00     0.00  sendmoves()
  0.00      0.02     0.00       24     0.00     0.00  getNextEdgeQuestion(std::__cxx11::list<edge, std::allocator<edge> >&, int*, int*)
  0.00      0.02     0.00       24     0.00     0.00  sortOutImpossibleEdges(int*, std::__cxx11::list<edge, std::allocator<edge> >&, int*, int*)
  0.00      0.02     0.00       24     0.00     0.00  std::_List_iterator<edge>::_List_iterator()
  0.00      0.02     0.00       23     0.00     0.00  findBottomMatch(int)
  0.00      0.02     0.00       23     0.00    40.53  getNextCornerQuestion(std::__cxx11::list<corner, std::allocator<corner> >&, int*, int*)
  0.00      0.02     0.00       23     0.00     0.65  sortOutImpossibleCorners(int*, std::__cxx11::list<corner, std::allocator<corner> >&, int*, int*)
  0.00      0.02     0.00       23     0.00     0.00  li(int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.02     0.00       23     0.00     0.00  std::_List_iterator<corner>::_List_iterator()
  0.00      0.02     0.00       21     0.00    47.92  planAction(int, std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*, int*)
  0.00      0.02     0.00       21     0.00     0.00  mapforsolver(int (*) [3][3])
  0.00      0.02     0.00       21     0.00     0.00  moveTopEdges(int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.02     0.00       21     0.00     0.00  solveTopCross(int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.02     0.00       21     0.00   898.13  fillrandomcube(int*, int*, std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int (*) [3][3])
  0.00      0.02     0.00       21     0.00     0.00  failsafe(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*)
  0.00      0.02     0.00       21     0.00     6.37  printlist(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*)
  0.00      0.02     0.00       20     0.00     0.00  getCorner(int, int*)
  0.00      0.02     0.00       20     0.00     0.00  std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_node_count() const
  0.00      0.02     0.00       20     0.00     0.00  std::__cxx11::list<middle, std::allocator<middle> >::size() const
  0.00      0.02     0.00       12     0.00     0.00  std::__cxx11::list<edge, std::allocator<edge> >::clear()
  0.00      0.02     0.00       11     0.00     0.00  getEdgeInfo(int (*) [3], int)
  0.00      0.02     0.00       11     0.00     0.00  findEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int*, int)
  0.00      0.02     0.00       10     0.00     0.00  moveTopCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.02     0.00       10     0.00     0.00  getNextQuestion(std::__cxx11::list<middle, std::allocator<middle> >&, int*)
  0.00      0.02     0.00       10     0.00     0.00  solveTopCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.02     0.00       10     0.00     0.00  sortOutImpossibleCodes(int*, std::__cxx11::list<middle, std::allocator<middle> >&, int*)
  0.00      0.02     0.00       10     0.00     0.00  fi(int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.02     0.00       10     0.00     0.00  checkface(int)
  0.00      0.02     0.00       10     0.00     0.00  std::_List_iterator<middle>::_List_iterator()
  0.00      0.02     0.00        8     0.00     0.00  std::__cxx11::list<corner, std::allocator<corner> >::clear()
  0.00      0.02     0.00        7     0.00   143.75  findCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int*, int)
  0.00      0.02     0.00        7     0.00     0.00  getCornerInfo(int (*) [3], int)
  0.00      0.02     0.00        6     0.00     0.00  middleAlgorithm(int, int, int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.02     0.00        6     0.00     0.00  placeMiddleEdge(int, int, int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.02     0.00        5     0.00     0.00  numCorrectCorners()
  0.00      0.02     0.00        3     0.00     0.00  buildCombOfTwo(std::__cxx11::list<middle, std::allocator<middle> >&)
  0.00      0.02     0.00        3     0.00     0.00  eliminateFound(std::__cxx11::list<middle, std::allocator<middle> >&, int*)
  0.00      0.02     0.00        3     0.00     0.00  cornerOrientation()
  0.00      0.02     0.00        2     0.00     0.00  rotateEdges(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.02     0.00        2     0.00     0.00  findBestFace(int)
  0.00      0.02     0.00        2     0.00     0.00  twoCornerRotate(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.02     0.00        2     0.00     0.00  solveMiddleLayer(int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.02     0.00        2     0.00     0.00  numEdgesInCorrectPos()
  0.00      0.02     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z12DieWithErrorNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  0.00      0.02     0.00        1     0.00     0.00  findMiddle(int*)
  0.00      0.02     0.00        1     0.00     0.00  swapCorners(int, int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.02     0.00        1     0.00     0.00  twoEdgeRotate(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.02     0.00        1     0.00     0.00  buildCombOfEdge(std::__cxx11::list<edge, std::allocator<edge> >*, int*)
  0.00      0.02     0.00        1     0.00     0.00  solveBottomLayer(int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.02     0.00        1     0.00     0.00  buildCombOfCorner(std::__cxx11::list<corner, std::allocator<corner> >*, int*)
  0.00      0.02     0.00        1     0.00     0.00  correctBottomEdges(int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.02     0.00        1     0.00     0.00  positionBottomEdges(int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.02     0.00        1     0.00     0.00  correctBottomCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.02     0.00        1     0.00     0.00  positionBottomCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.02     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.02     0.00        1     0.00     0.00  cubesback()
  0.00      0.02     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<middle> >::new_allocator()
  0.00      0.02     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<middle> >::~new_allocator()
  0.00      0.02     0.00        1     0.00     0.00  std::allocator<std::_List_node<middle> >::allocator()
  0.00      0.02     0.00        1     0.00     0.00  std::allocator<std::_List_node<middle> >::~allocator()
  0.00      0.02     0.00        1     0.00     0.00  std::__cxx11::_List_base<middle, std::allocator<middle> >::_List_impl::_List_impl()
  0.00      0.02     0.00        1     0.00     0.00  std::__cxx11::_List_base<middle, std::allocator<middle> >::_List_impl::~_List_impl()
  0.00      0.02     0.00        1     0.00     0.00  std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_set_size(unsigned long)
  0.00      0.02     0.00        1     0.00     0.00  std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_init()
  0.00      0.02     0.00        1     0.00     0.00  std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_clear()
  0.00      0.02     0.00        1     0.00     0.00  std::__cxx11::_List_base<middle, std::allocator<middle> >::_List_base()
  0.00      0.02     0.00        1     0.00     0.00  std::__cxx11::_List_base<middle, std::allocator<middle> >::~_List_base()
  0.00      0.02     0.00        1     0.00     0.00  std::__cxx11::list<middle, std::allocator<middle> >::list()
  0.00      0.02     0.00        1     0.00     0.00  std::__cxx11::list<middle, std::allocator<middle> >::~list()

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2018 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 50.00% of 0.02 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]    100.0    0.00    0.02                 main [1]
                0.00    0.02      21/21          fillrandomcube(int*, int*, std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int (*) [3][3]) [2]
                0.00    0.00      21/21          planAction(int, std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*, int*) [7]
                0.00    0.00      21/21          printlist(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [10]
                0.00    0.00      54/55          printCubeColor(int (*) [3][3]) [287]
                0.00    0.00      42/42          print(int (*) [3][3]) [289]
                0.00    0.00      34/34          sendmoves() [295]
                0.00    0.00      21/21          failsafe(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [305]
                0.00    0.00      21/21          mapforsolver(int (*) [3][3]) [302]
                0.00    0.00      21/21          solveTopCross(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [304]
                0.00    0.00      12/1936        std::__cxx11::list<edge, std::allocator<edge> >::list() [179]
                0.00    0.00      12/12          std::__cxx11::list<edge, std::allocator<edge> >::clear() [309]
                0.00    0.00      10/10          solveTopCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [314]
                0.00    0.00      10/10          checkface(int) [317]
                0.00    0.00       8/1340        std::__cxx11::list<corner, std::allocator<corner> >::list() [198]
                0.00    0.00       8/8           std::__cxx11::list<corner, std::allocator<corner> >::clear() [319]
                0.00    0.00       2/2           solveMiddleLayer(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [330]
                0.00    0.00       1/34          clearMoves() [293]
                0.00    0.00       1/1           cubesback() [344]
                0.00    0.00       1/1           findMiddle(int*) [333]
                0.00    0.00       1/1           buildCombOfEdge(std::__cxx11::list<edge, std::allocator<edge> >*, int*) [336]
                0.00    0.00       1/1           buildCombOfCorner(std::__cxx11::list<corner, std::allocator<corner> >*, int*) [338]
                0.00    0.00       1/1           solveBottomLayer(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [337]
-----------------------------------------------
                0.00    0.02      21/21          main [1]
[2]     94.3    0.00    0.02      21         fillrandomcube(int*, int*, std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int (*) [3][3]) [2]
                0.01    0.00     148/148         fillEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [4]
                0.00    0.01     148/148         fillCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [5]
                0.00    0.00     148/148         CopyListCorners(std::__cxx11::list<corner, std::allocator<corner> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [6]
                0.00    0.00    1776/1936        std::__cxx11::list<edge, std::allocator<edge> >::list() [179]
                0.00    0.00    1776/1924        std::__cxx11::list<edge, std::allocator<edge> >::~list() [184]
                0.00    0.00    1184/1340        std::__cxx11::list<corner, std::allocator<corner> >::list() [198]
                0.00    0.00    1184/1332        std::__cxx11::list<corner, std::allocator<corner> >::~list() [203]
                0.00    0.00     148/148         CopyListEdges(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<edge, std::allocator<edge> >*) [243]
                0.00    0.00     148/148         fillCenter(int*, int*) [241]
                0.00    0.00     148/148         SortEdgesList(std::__cxx11::list<edge, std::allocator<edge> >*, int*, int) [244]
                0.00    0.00     148/148         SortCornerList(std::__cxx11::list<corner, std::allocator<corner> >*, int*, int) [246]
                0.00    0.00     148/148         checksolvability(int (*) [3][3]) [248]
-----------------------------------------------
                0.00    0.00     928/621551      sortOutImpossibleCorners(int*, std::__cxx11::list<corner, std::allocator<corner> >&, int*, int*) [12]
                0.00    0.00    2013/621551      containsCorner(std::__cxx11::list<corner, std::allocator<corner> >&, int, int) [11]
                0.00    0.00    3682/621551      findCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int*, int) [8]
                0.00    0.00    8316/621551      printlist(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [10]
                0.00    0.00   55918/621551      getNextCornerQuestion(std::__cxx11::list<corner, std::allocator<corner> >&, int*, int*) [9]
                0.00    0.00   72606/621551      CopyListCorners(std::__cxx11::list<corner, std::allocator<corner> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [6]
                0.01    0.00  478088/621551      fillCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [5]
[3]     50.0    0.01    0.00  621551         std::_List_iterator<corner>::operator->() const [3]
                0.00    0.00  621551/672697      std::_List_node<corner>::_M_valptr() [21]
-----------------------------------------------
                0.01    0.00     148/148         fillrandomcube(int*, int*, std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int (*) [3][3]) [2]
[4]     50.0    0.01    0.00     148         fillEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [4]
                0.00    0.00  338072/428607      std::_List_iterator<edge>::operator->() const [25]
                0.00    0.00   93489/132818      std::__cxx11::list<edge, std::allocator<edge> >::end() [29]
                0.00    0.00   93489/117398      std::_List_iterator<edge>::operator!=(std::_List_iterator<edge> const&) const [30]
                0.00    0.00   84563/106530      std::_List_iterator<edge>::operator++(int) [33]
                0.00    0.00   21464/27492       std::__cxx11::list<edge, std::allocator<edge> >::begin() [54]
                0.00    0.00   14360/28959       std::__cxx11::list<int, std::allocator<int> >::size() const [53]
                0.00    0.00    9768/13912       std::__cxx11::list<int, std::allocator<int> >::list() [117]
                0.00    0.00    9768/13912       std::__cxx11::list<int, std::allocator<int> >::~list() [118]
                0.00    0.00    4592/15047       std::__cxx11::list<int, std::allocator<int> >::push_back(int const&) [100]
                0.00    0.00    4592/15047       std::__cxx11::list<int, std::allocator<int> >::back() [96]
                0.00    0.00    4592/4592        void std::advance<std::_List_iterator<edge>, int>(std::_List_iterator<edge>&, int) [159]
                0.00    0.00    4592/15047       std::__cxx11::list<int, std::allocator<int> >::pop_back() [98]
                0.00    0.00    4592/4867        std::_List_const_iterator<edge>::_List_const_iterator(std::_List_iterator<edge> const&) [154]
                0.00    0.00    4592/4867        std::__cxx11::list<edge, std::allocator<edge> >::erase(std::_List_const_iterator<edge>) [156]
                0.00    0.00    1776/8043        std::__cxx11::list<edge, std::allocator<edge> >::size() const [147]
                0.00    0.00    1776/13747       std::__cxx11::list<edge, std::allocator<edge> >::push_back(edge const&) [131]
                0.00    0.00     148/1936        std::__cxx11::list<edge, std::allocator<edge> >::list() [179]
                0.00    0.00     148/148         setEdges(int (*) [2], int (*) [3][3], int (*) [3][3], int (*) [3][3]) [251]
                0.00    0.00     148/1924        std::__cxx11::list<edge, std::allocator<edge> >::~list() [184]
-----------------------------------------------
                0.00    0.01     148/148         fillrandomcube(int*, int*, std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int (*) [3][3]) [2]
[5]     38.5    0.00    0.01     148         fillCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [5]
                0.01    0.00  478088/621551      std::_List_iterator<corner>::operator->() const [3]
                0.00    0.00   77369/112705      std::_List_iterator<corner>::operator++(int) [32]
                0.00    0.00   76377/139922      std::__cxx11::list<corner, std::allocator<corner> >::end() [28]
                0.00    0.00   76377/113464      std::_List_iterator<corner>::operator!=(std::_List_iterator<corner> const&) const [31]
                0.00    0.00   19335/23579       std::__cxx11::list<corner, std::allocator<corner> >::begin() [76]
                0.00    0.00   14599/28959       std::__cxx11::list<int, std::allocator<int> >::size() const [53]
                0.00    0.00   10455/15047       std::__cxx11::list<int, std::allocator<int> >::push_back(int const&) [100]
                0.00    0.00   10455/15047       std::__cxx11::list<int, std::allocator<int> >::back() [96]
                0.00    0.00   10455/10455       void std::advance<std::_List_iterator<corner>, int>(std::_List_iterator<corner>&, int) [144]
                0.00    0.00   10455/15047       std::__cxx11::list<int, std::allocator<int> >::pop_back() [98]
                0.00    0.00   10455/10637       std::_List_const_iterator<corner>::_List_const_iterator(std::_List_iterator<corner> const&) [139]
                0.00    0.00   10455/10637       std::__cxx11::list<corner, std::allocator<corner> >::erase(std::_List_const_iterator<corner>) [141]
                0.00    0.00    4144/13912       std::__cxx11::list<int, std::allocator<int> >::list() [117]
                0.00    0.00    4144/13912       std::__cxx11::list<int, std::allocator<int> >::~list() [118]
                0.00    0.00    1184/4584        std::__cxx11::list<corner, std::allocator<corner> >::size() const [162]
                0.00    0.00    1184/25578       std::__cxx11::list<corner, std::allocator<corner> >::push_back(corner const&) [69]
                0.00    0.00     148/1340        std::__cxx11::list<corner, std::allocator<corner> >::list() [198]
                0.00    0.00     148/148         setCorners(int (*) [3], int (*) [3][3], int (*) [3][3], int (*) [3][3]) [242]
                0.00    0.00     148/1332        std::__cxx11::list<corner, std::allocator<corner> >::~list() [203]
-----------------------------------------------
                0.00    0.00     148/148         fillrandomcube(int*, int*, std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int (*) [3][3]) [2]
[6]      5.8    0.00    0.00     148         CopyListCorners(std::__cxx11::list<corner, std::allocator<corner> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [6]
                0.00    0.00   72606/621551      std::_List_iterator<corner>::operator->() const [3]
                0.00    0.00   25386/139922      std::__cxx11::list<corner, std::allocator<corner> >::end() [28]
                0.00    0.00   25386/113464      std::_List_iterator<corner>::operator!=(std::_List_iterator<corner> const&) const [31]
                0.00    0.00   24202/25578       std::__cxx11::list<corner, std::allocator<corner> >::push_back(corner const&) [69]
                0.00    0.00   24202/112705      std::_List_iterator<corner>::operator++(int) [32]
                0.00    0.00    1184/23579       std::__cxx11::list<corner, std::allocator<corner> >::begin() [76]
-----------------------------------------------
                0.00    0.00      21/21          main [1]
[7]      5.0    0.00    0.00      21         planAction(int, std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*, int*) [7]
                0.00    0.00       7/7           findCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int*, int) [8]
                0.00    0.00      42/8043        std::__cxx11::list<edge, std::allocator<edge> >::size() const [147]
                0.00    0.00      24/4584        std::__cxx11::list<corner, std::allocator<corner> >::size() const [162]
                0.00    0.00      11/11          findEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int*, int) [311]
-----------------------------------------------
                0.00    0.00       7/7           planAction(int, std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*, int*) [7]
[8]      5.0    0.00    0.00       7         findCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int*, int) [8]
                0.00    0.00      23/23          getNextCornerQuestion(std::__cxx11::list<corner, std::allocator<corner> >&, int*, int*) [9]
                0.00    0.00    3682/621551      std::_List_iterator<corner>::operator->() const [3]
                0.00    0.00      23/23          sortOutImpossibleCorners(int*, std::__cxx11::list<corner, std::allocator<corner> >&, int*, int*) [12]
                0.00    0.00    1904/23579       std::__cxx11::list<corner, std::allocator<corner> >::begin() [76]
                0.00    0.00     571/139922      std::__cxx11::list<corner, std::allocator<corner> >::end() [28]
                0.00    0.00     571/880         std::_List_iterator<corner>::operator==(std::_List_iterator<corner> const&) const [218]
                0.00    0.00     553/4584        std::__cxx11::list<corner, std::allocator<corner> >::size() const [162]
                0.00    0.00     438/112705      std::_List_iterator<corner>::operator++(int) [32]
                0.00    0.00      84/10637       std::_List_const_iterator<corner>::_List_const_iterator(std::_List_iterator<corner> const&) [139]
                0.00    0.00      84/10637       std::__cxx11::list<corner, std::allocator<corner> >::erase(std::_List_const_iterator<corner>) [141]
                0.00    0.00      23/57          askTwo(int*, int*, int*, int*) [285]
                0.00    0.00       7/7           getCornerInfo(int (*) [3], int) [320]
-----------------------------------------------
                0.00    0.00      23/23          findCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int*, int) [8]
[9]      4.7    0.00    0.00      23         getNextCornerQuestion(std::__cxx11::list<corner, std::allocator<corner> >&, int*, int*) [9]
                0.00    0.00   55918/621551      std::_List_iterator<corner>::operator->() const [3]
                0.00    0.00     252/252         containsCorner(std::__cxx11::list<corner, std::allocator<corner> >&, int, int) [11]
                0.00    0.00    6870/139922      std::__cxx11::list<corner, std::allocator<corner> >::end() [28]
                0.00    0.00    6870/113464      std::_List_iterator<corner>::operator!=(std::_List_iterator<corner> const&) const [31]
                0.00    0.00    6180/112705      std::_List_iterator<corner>::operator++(int) [32]
                0.00    0.00     713/23579       std::__cxx11::list<corner, std::allocator<corner> >::begin() [76]
-----------------------------------------------
                0.00    0.00      21/21          main [1]
[10]     0.7    0.00    0.00      21         printlist(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [10]
                0.00    0.00    8316/621551      std::_List_iterator<corner>::operator->() const [3]
                0.00    0.00    2940/139922      std::__cxx11::list<corner, std::allocator<corner> >::end() [28]
                0.00    0.00    2940/113464      std::_List_iterator<corner>::operator!=(std::_List_iterator<corner> const&) const [31]
                0.00    0.00    2772/112705      std::_List_iterator<corner>::operator++(int) [32]
                0.00    0.00    2416/428607      std::_List_iterator<edge>::operator->() const [25]
                0.00    0.00    1460/132818      std::__cxx11::list<edge, std::allocator<edge> >::end() [29]
                0.00    0.00    1460/117398      std::_List_iterator<edge>::operator!=(std::_List_iterator<edge> const&) const [30]
                0.00    0.00    1208/106530      std::_List_iterator<edge>::operator++(int) [33]
                0.00    0.00     252/27492       std::__cxx11::list<edge, std::allocator<edge> >::begin() [54]
                0.00    0.00     168/23579       std::__cxx11::list<corner, std::allocator<corner> >::begin() [76]
-----------------------------------------------
                0.00    0.00     252/252         getNextCornerQuestion(std::__cxx11::list<corner, std::allocator<corner> >&, int*, int*) [9]
[11]     0.2    0.00    0.00     252         containsCorner(std::__cxx11::list<corner, std::allocator<corner> >&, int, int) [11]
                0.00    0.00    2013/621551      std::_List_iterator<corner>::operator->() const [3]
                0.00    0.00    1891/139922      std::__cxx11::list<corner, std::allocator<corner> >::end() [28]
                0.00    0.00    1891/113464      std::_List_iterator<corner>::operator!=(std::_List_iterator<corner> const&) const [31]
                0.00    0.00    1639/112705      std::_List_iterator<corner>::operator++(int) [32]
                0.00    0.00     252/23579       std::__cxx11::list<corner, std::allocator<corner> >::begin() [76]
-----------------------------------------------
                0.00    0.00      23/23          findCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int*, int) [8]
[12]     0.1    0.00    0.00      23         sortOutImpossibleCorners(int*, std::__cxx11::list<corner, std::allocator<corner> >&, int*, int*) [12]
                0.00    0.00     928/621551      std::_List_iterator<corner>::operator->() const [3]
                0.00    0.00     406/1008        sortAnswer(int*) [213]
                0.00    0.00     309/139922      std::__cxx11::list<corner, std::allocator<corner> >::end() [28]
                0.00    0.00     309/880         std::_List_iterator<corner>::operator==(std::_List_iterator<corner> const&) const [218]
                0.00    0.00     205/4584        std::__cxx11::list<corner, std::allocator<corner> >::size() const [162]
                0.00    0.00     105/112705      std::_List_iterator<corner>::operator++(int) [32]
                0.00    0.00      98/10637       std::_List_const_iterator<corner>::_List_const_iterator(std::_List_iterator<corner> const&) [139]
                0.00    0.00      98/10637       std::__cxx11::list<corner, std::allocator<corner> >::erase(std::_List_const_iterator<corner>) [141]
                0.00    0.00      23/23          std::_List_iterator<corner>::_List_iterator() [301]
                0.00    0.00      23/23579       std::__cxx11::list<corner, std::allocator<corner> >::begin() [76]
-----------------------------------------------
                0.00    0.00  672697/672697      std::_List_node<corner>::_M_valptr() [21]
[19]     0.0    0.00    0.00  672697         __gnu_cxx::__aligned_membuf<corner>::_M_ptr() [19]
                0.00    0.00  672697/672697      __gnu_cxx::__aligned_membuf<corner>::_M_addr() [20]
-----------------------------------------------
                0.00    0.00  672697/672697      __gnu_cxx::__aligned_membuf<corner>::_M_ptr() [19]
[20]     0.0    0.00    0.00  672697         __gnu_cxx::__aligned_membuf<corner>::_M_addr() [20]
-----------------------------------------------
                0.00    0.00   10637/672697      std::__cxx11::list<corner, std::allocator<corner> >::_M_erase(std::_List_iterator<corner>) [142]
                0.00    0.00   14931/672697      std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_clear() [196]
                0.00    0.00   25578/672697      std::_List_node<corner>* std::__cxx11::list<corner, std::allocator<corner> >::_M_create_node<corner const&>(corner const&) [67]
                0.00    0.00  621551/672697      std::_List_iterator<corner>::operator->() const [3]
[21]     0.0    0.00    0.00  672697         std::_List_node<corner>::_M_valptr() [21]
                0.00    0.00  672697/672697      __gnu_cxx::__aligned_membuf<corner>::_M_ptr() [19]
-----------------------------------------------
                0.00    0.00  456088/456088      std::_List_node<edge>::_M_valptr() [24]
[22]     0.0    0.00    0.00  456088         __gnu_cxx::__aligned_membuf<edge>::_M_ptr() [22]
                0.00    0.00  456088/456088      __gnu_cxx::__aligned_membuf<edge>::_M_addr() [23]
-----------------------------------------------
                0.00    0.00  456088/456088      __gnu_cxx::__aligned_membuf<edge>::_M_ptr() [22]
[23]     0.0    0.00    0.00  456088         __gnu_cxx::__aligned_membuf<edge>::_M_addr() [23]
-----------------------------------------------
                0.00    0.00    4867/456088      std::__cxx11::list<edge, std::allocator<edge> >::_M_erase(std::_List_iterator<edge>) [157]
                0.00    0.00    8867/456088      std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_clear() [177]
                0.00    0.00   13747/456088      std::_List_node<edge>* std::__cxx11::list<edge, std::allocator<edge> >::_M_create_node<edge const&>(edge const&) [129]
                0.00    0.00  428607/456088      std::_List_iterator<edge>::operator->() const [25]
[24]     0.0    0.00    0.00  456088         std::_List_node<edge>::_M_valptr() [24]
                0.00    0.00  456088/456088      __gnu_cxx::__aligned_membuf<edge>::_M_ptr() [22]
-----------------------------------------------
                0.00    0.00     904/428607      sortOutImpossibleEdges(int*, std::__cxx11::list<edge, std::allocator<edge> >&, int*, int*) [297]
                0.00    0.00    2192/428607      containsEdge(std::__cxx11::list<edge, std::allocator<edge> >&, int, int) [228]
                0.00    0.00    2416/428607      printlist(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [10]
                0.00    0.00    5522/428607      findEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int*, int) [311]
                0.00    0.00   23366/428607      CopyListEdges(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<edge, std::allocator<edge> >*) [243]
                0.00    0.00   56135/428607      getNextEdgeQuestion(std::__cxx11::list<edge, std::allocator<edge> >&, int*, int*) [296]
                0.00    0.00  338072/428607      fillEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [4]
[25]     0.0    0.00    0.00  428607         std::_List_iterator<edge>::operator->() const [25]
                0.00    0.00  428607/456088      std::_List_node<edge>::_M_valptr() [24]
-----------------------------------------------
                0.00    0.00   10637/184775      std::__cxx11::list<corner, std::allocator<corner> >::erase(std::_List_const_iterator<corner>) [141]
                0.00    0.00   10637/184775      std::_List_const_iterator<corner>::_M_const_cast() const [138]
                0.00    0.00   23579/184775      std::__cxx11::list<corner, std::allocator<corner> >::begin() [76]
                0.00    0.00  139922/184775      std::__cxx11::list<corner, std::allocator<corner> >::end() [28]
[26]     0.0    0.00    0.00  184775         std::_List_iterator<corner>::_List_iterator(std::__detail::_List_node_base*) [26]
-----------------------------------------------
                0.00    0.00    4867/170044      std::__cxx11::list<edge, std::allocator<edge> >::erase(std::_List_const_iterator<edge>) [156]
                0.00    0.00    4867/170044      std::_List_const_iterator<edge>::_M_const_cast() const [153]
                0.00    0.00   27492/170044      std::__cxx11::list<edge, std::allocator<edge> >::begin() [54]
                0.00    0.00  132818/170044      std::__cxx11::list<edge, std::allocator<edge> >::end() [29]
[27]     0.0    0.00    0.00  170044         std::_List_iterator<edge>::_List_iterator(std::__detail::_List_node_base*) [27]
-----------------------------------------------
                0.00    0.00     309/139922      sortOutImpossibleCorners(int*, std::__cxx11::list<corner, std::allocator<corner> >&, int*, int*) [12]
                0.00    0.00     571/139922      findCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int*, int) [8]
                0.00    0.00    1891/139922      containsCorner(std::__cxx11::list<corner, std::allocator<corner> >&, int, int) [11]
                0.00    0.00    2940/139922      printlist(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [10]
                0.00    0.00    6870/139922      getNextCornerQuestion(std::__cxx11::list<corner, std::allocator<corner> >&, int*, int*) [9]
                0.00    0.00   25386/139922      CopyListCorners(std::__cxx11::list<corner, std::allocator<corner> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [6]
                0.00    0.00   25578/139922      std::__cxx11::list<corner, std::allocator<corner> >::push_back(corner const&) [69]
                0.00    0.00   76377/139922      fillCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [5]
[28]     0.0    0.00    0.00  139922         std::__cxx11::list<corner, std::allocator<corner> >::end() [28]
                0.00    0.00  139922/184775      std::_List_iterator<corner>::_List_iterator(std::__detail::_List_node_base*) [26]
-----------------------------------------------
                0.00    0.00     353/132818      sortOutImpossibleEdges(int*, std::__cxx11::list<edge, std::allocator<edge> >&, int*, int*) [297]
                0.00    0.00    1320/132818      findEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int*, int) [311]
                0.00    0.00    1460/132818      printlist(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [10]
                0.00    0.00    2060/132818      containsEdge(std::__cxx11::list<edge, std::allocator<edge> >&, int, int) [228]
                0.00    0.00    6930/132818      getNextEdgeQuestion(std::__cxx11::list<edge, std::allocator<edge> >&, int*, int*) [296]
                0.00    0.00   13459/132818      CopyListEdges(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<edge, std::allocator<edge> >*) [243]
                0.00    0.00   13747/132818      std::__cxx11::list<edge, std::allocator<edge> >::push_back(edge const&) [131]
                0.00    0.00   93489/132818      fillEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [4]
[29]     0.0    0.00    0.00  132818         std::__cxx11::list<edge, std::allocator<edge> >::end() [29]
                0.00    0.00  132818/170044      std::_List_iterator<edge>::_List_iterator(std::__detail::_List_node_base*) [27]
-----------------------------------------------
                0.00    0.00    1460/117398      printlist(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [10]
                0.00    0.00    2060/117398      containsEdge(std::__cxx11::list<edge, std::allocator<edge> >&, int, int) [228]
                0.00    0.00    6930/117398      getNextEdgeQuestion(std::__cxx11::list<edge, std::allocator<edge> >&, int*, int*) [296]
                0.00    0.00   13459/117398      CopyListEdges(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<edge, std::allocator<edge> >*) [243]
                0.00    0.00   93489/117398      fillEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [4]
[30]     0.0    0.00    0.00  117398         std::_List_iterator<edge>::operator!=(std::_List_iterator<edge> const&) const [30]
-----------------------------------------------
                0.00    0.00    1891/113464      containsCorner(std::__cxx11::list<corner, std::allocator<corner> >&, int, int) [11]
                0.00    0.00    2940/113464      printlist(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [10]
                0.00    0.00    6870/113464      getNextCornerQuestion(std::__cxx11::list<corner, std::allocator<corner> >&, int*, int*) [9]
                0.00    0.00   25386/113464      CopyListCorners(std::__cxx11::list<corner, std::allocator<corner> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [6]
                0.00    0.00   76377/113464      fillCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [5]
[31]     0.0    0.00    0.00  113464         std::_List_iterator<corner>::operator!=(std::_List_iterator<corner> const&) const [31]
-----------------------------------------------
                0.00    0.00     105/112705      sortOutImpossibleCorners(int*, std::__cxx11::list<corner, std::allocator<corner> >&, int*, int*) [12]
                0.00    0.00     438/112705      findCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int*, int) [8]
                0.00    0.00    1639/112705      containsCorner(std::__cxx11::list<corner, std::allocator<corner> >&, int, int) [11]
                0.00    0.00    2772/112705      printlist(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [10]
                0.00    0.00    6180/112705      getNextCornerQuestion(std::__cxx11::list<corner, std::allocator<corner> >&, int*, int*) [9]
                0.00    0.00   24202/112705      CopyListCorners(std::__cxx11::list<corner, std::allocator<corner> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [6]
                0.00    0.00   77369/112705      fillCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [5]
[32]     0.0    0.00    0.00  112705         std::_List_iterator<corner>::operator++(int) [32]
-----------------------------------------------
                0.00    0.00      55/106530      sortOutImpossibleEdges(int*, std::__cxx11::list<edge, std::allocator<edge> >&, int*, int*) [297]
                0.00    0.00    1067/106530      findEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int*, int) [311]
                0.00    0.00    1208/106530      printlist(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [10]
                0.00    0.00    1744/106530      containsEdge(std::__cxx11::list<edge, std::allocator<edge> >&, int, int) [228]
                0.00    0.00    6210/106530      getNextEdgeQuestion(std::__cxx11::list<edge, std::allocator<edge> >&, int*, int*) [296]
                0.00    0.00   11683/106530      CopyListEdges(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<edge, std::allocator<edge> >*) [243]
                0.00    0.00   84563/106530      fillEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [4]
[33]     0.0    0.00    0.00  106530         std::_List_iterator<edge>::operator++(int) [33]
-----------------------------------------------
                0.00    0.00   25578/102312      void std::__cxx11::list<corner, std::allocator<corner> >::_M_insert<corner const&>(std::_List_iterator<corner>, corner const&) [68]
                0.00    0.00   25578/102312      std::_List_node<corner>* std::__cxx11::list<corner, std::allocator<corner> >::_M_create_node<corner const&>(corner const&) [67]
                0.00    0.00   25578/102312      void std::allocator_traits<std::allocator<std::_List_node<corner> > >::construct<corner, corner const&>(std::allocator<std::_List_node<corner> >&, corner*, corner const&) [64]
                0.00    0.00   25578/102312      void __gnu_cxx::new_allocator<std::_List_node<corner> >::construct<corner, corner const&>(corner*, corner const&) [58]
[34]     0.0    0.00    0.00  102312         corner const& std::forward<corner const&>(std::remove_reference<corner const&>::type&) [34]
-----------------------------------------------
                0.00    0.00  102311/102311      std::_List_node<unsigned long>::_M_valptr() [37]
[35]     0.0    0.00    0.00  102311         __gnu_cxx::__aligned_membuf<unsigned long>::_M_ptr() [35]
                0.00    0.00  102311/102311      __gnu_cxx::__aligned_membuf<unsigned long>::_M_addr() [36]
-----------------------------------------------
                0.00    0.00  102311/102311      __gnu_cxx::__aligned_membuf<unsigned long>::_M_ptr() [35]
[36]     0.0    0.00    0.00  102311         __gnu_cxx::__aligned_membuf<unsigned long>::_M_addr() [36]
-----------------------------------------------
                0.00    0.00       1/102311      std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_set_size(unsigned long) [351]
                0.00    0.00      89/102311      std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_dec_size(unsigned long) [279]
                0.00    0.00      90/102311      std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_inc_size(unsigned long) [270]
                0.00    0.00    1348/102311      std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_set_size(unsigned long) [191]
                0.00    0.00    1948/102311      std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_set_size(unsigned long) [172]
                0.00    0.00    4867/102311      std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_dec_size(unsigned long) [155]
                0.00    0.00   10637/102311      std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_dec_size(unsigned long) [140]
                0.00    0.00   13747/102311      std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_inc_size(unsigned long) [128]
                0.00    0.00   13912/102311      std::__cxx11::_List_base<int, std::allocator<int> >::_M_set_size(unsigned long) [112]
                0.00    0.00   15047/102311      std::__cxx11::_List_base<int, std::allocator<int> >::_M_inc_size(unsigned long) [93]
                0.00    0.00   15047/102311      std::__cxx11::_List_base<int, std::allocator<int> >::_M_dec_size(unsigned long) [91]
                0.00    0.00   25578/102311      std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_inc_size(unsigned long) [66]
[37]     0.0    0.00    0.00  102311         std::_List_node<unsigned long>::_M_valptr() [37]
                0.00    0.00  102311/102311      __gnu_cxx::__aligned_membuf<unsigned long>::_M_ptr() [35]
-----------------------------------------------
                0.00    0.00   86280/86280       void std::__advance<std::_List_iterator<corner>, long>(std::_List_iterator<corner>&, long, std::bidirectional_iterator_tag) [145]
[38]     0.0    0.00    0.00   86280         std::_List_iterator<corner>::operator++() [38]
-----------------------------------------------
                0.00    0.00   15047/60188       void std::__cxx11::list<int, std::allocator<int> >::_M_insert<int const&>(std::_List_iterator<int>, int const&) [99]
                0.00    0.00   15047/60188       std::_List_node<int>* std::__cxx11::list<int, std::allocator<int> >::_M_create_node<int const&>(int const&) [95]
                0.00    0.00   15047/60188       void std::allocator_traits<std::allocator<std::_List_node<int> > >::construct<int, int const&>(std::allocator<std::_List_node<int> >&, int*, int const&) [90]
                0.00    0.00   15047/60188       void __gnu_cxx::new_allocator<std::_List_node<int> >::construct<int, int const&>(int*, int const&) [80]
[39]     0.0    0.00    0.00   60188         int const& std::forward<int const&>(std::remove_reference<int const&>::type&) [39]
-----------------------------------------------
                0.00    0.00   13747/54988       void std::__cxx11::list<edge, std::allocator<edge> >::_M_insert<edge const&>(std::_List_iterator<edge>, edge const&) [130]
                0.00    0.00   13747/54988       std::_List_node<edge>* std::__cxx11::list<edge, std::allocator<edge> >::_M_create_node<edge const&>(edge const&) [129]
                0.00    0.00   13747/54988       void std::allocator_traits<std::allocator<std::_List_node<edge> > >::construct<edge, edge const&>(std::allocator<std::_List_node<edge> >&, edge*, edge const&) [126]
                0.00    0.00   13747/54988       void __gnu_cxx::new_allocator<std::_List_node<edge> >::construct<edge, edge const&>(edge*, edge const&) [120]
[40]     0.0    0.00    0.00   54988         edge const& std::forward<edge const&>(std::remove_reference<edge const&>::type&) [40]
-----------------------------------------------
                0.00    0.00      90/54462       void __gnu_cxx::new_allocator<std::_List_node<middle> >::construct<middle, middle const&>(middle*, middle const&) [260]
                0.00    0.00   13747/54462       void __gnu_cxx::new_allocator<std::_List_node<edge> >::construct<edge, edge const&>(edge*, edge const&) [120]
                0.00    0.00   15047/54462       void __gnu_cxx::new_allocator<std::_List_node<int> >::construct<int, int const&>(int*, int const&) [80]
                0.00    0.00   25578/54462       void __gnu_cxx::new_allocator<std::_List_node<corner> >::construct<corner, corner const&>(corner*, corner const&) [58]
[41]     0.0    0.00    0.00   54462         operator new(unsigned long, void*) [41]
-----------------------------------------------
                0.00    0.00   10637/51146       std::__cxx11::list<corner, std::allocator<corner> >::_M_erase(std::_List_iterator<corner>) [142]
                0.00    0.00   14931/51146       std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_clear() [196]
                0.00    0.00   25578/51146       std::_List_node<corner>* std::__cxx11::list<corner, std::allocator<corner> >::_M_create_node<corner const&>(corner const&) [67]
[42]     0.0    0.00    0.00   51146         std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_get_Node_allocator() [42]
-----------------------------------------------
                0.00    0.00   45141/45141       std::_List_node<int>::_M_valptr() [45]
[43]     0.0    0.00    0.00   45141         __gnu_cxx::__aligned_membuf<int>::_M_ptr() [43]
                0.00    0.00   45141/45141       __gnu_cxx::__aligned_membuf<int>::_M_addr() [44]
-----------------------------------------------
                0.00    0.00   45141/45141       __gnu_cxx::__aligned_membuf<int>::_M_ptr() [43]
[44]     0.0    0.00    0.00   45141         __gnu_cxx::__aligned_membuf<int>::_M_addr() [44]
-----------------------------------------------
                0.00    0.00   15047/45141       std::_List_iterator<int>::operator*() const [82]
                0.00    0.00   15047/45141       std::__cxx11::list<int, std::allocator<int> >::_M_erase(std::_List_iterator<int>) [97]
                0.00    0.00   15047/45141       std::_List_node<int>* std::__cxx11::list<int, std::allocator<int> >::_M_create_node<int const&>(int const&) [95]
[45]     0.0    0.00    0.00   45141         std::_List_node<int>::_M_valptr() [45]
                0.00    0.00   45141/45141       __gnu_cxx::__aligned_membuf<int>::_M_ptr() [43]
-----------------------------------------------
                0.00    0.00   15047/45141       std::__cxx11::list<int, std::allocator<int> >::pop_back() [98]
                0.00    0.00   30094/45141       std::__cxx11::list<int, std::allocator<int> >::end() [51]
[46]     0.0    0.00    0.00   45141         std::_List_iterator<int>::_List_iterator(std::__detail::_List_node_base*) [46]
-----------------------------------------------
                0.00    0.00   41606/41606       std::_List_node<unsigned long>::_M_valptr() const [49]
[47]     0.0    0.00    0.00   41606         __gnu_cxx::__aligned_membuf<unsigned long>::_M_ptr() const [47]
                0.00    0.00   41606/41606       __gnu_cxx::__aligned_membuf<unsigned long>::_M_addr() const [48]
-----------------------------------------------
                0.00    0.00   41606/41606       __gnu_cxx::__aligned_membuf<unsigned long>::_M_ptr() const [47]
[48]     0.0    0.00    0.00   41606         __gnu_cxx::__aligned_membuf<unsigned long>::_M_addr() const [48]
-----------------------------------------------
                0.00    0.00      20/41606       std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_node_count() const [307]
                0.00    0.00    4584/41606       std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_node_count() const [161]
                0.00    0.00    8043/41606       std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_node_count() const [146]
                0.00    0.00   28959/41606       std::__cxx11::_List_base<int, std::allocator<int> >::_M_node_count() const [52]
[49]     0.0    0.00    0.00   41606         std::_List_node<unsigned long>::_M_valptr() const [49]
                0.00    0.00   41606/41606       __gnu_cxx::__aligned_membuf<unsigned long>::_M_ptr() const [47]
-----------------------------------------------
                0.00    0.00   15047/30094       std::__cxx11::list<int, std::allocator<int> >::_M_erase(std::_List_iterator<int>) [97]
                0.00    0.00   15047/30094       std::_List_node<int>* std::__cxx11::list<int, std::allocator<int> >::_M_create_node<int const&>(int const&) [95]
[50]     0.0    0.00    0.00   30094         std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() [50]
-----------------------------------------------
                0.00    0.00   15047/30094       std::__cxx11::list<int, std::allocator<int> >::push_back(int const&) [100]
                0.00    0.00   15047/30094       std::__cxx11::list<int, std::allocator<int> >::back() [96]
[51]     0.0    0.00    0.00   30094         std::__cxx11::list<int, std::allocator<int> >::end() [51]
                0.00    0.00   30094/45141       std::_List_iterator<int>::_List_iterator(std::__detail::_List_node_base*) [46]
-----------------------------------------------
                0.00    0.00   28959/28959       std::__cxx11::list<int, std::allocator<int> >::size() const [53]
[52]     0.0    0.00    0.00   28959         std::__cxx11::_List_base<int, std::allocator<int> >::_M_node_count() const [52]
                0.00    0.00   28959/41606       std::_List_node<unsigned long>::_M_valptr() const [49]
-----------------------------------------------
                0.00    0.00   14360/28959       fillEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [4]
                0.00    0.00   14599/28959       fillCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [5]
[53]     0.0    0.00    0.00   28959         std::__cxx11::list<int, std::allocator<int> >::size() const [53]
                0.00    0.00   28959/28959       std::__cxx11::_List_base<int, std::allocator<int> >::_M_node_count() const [52]
-----------------------------------------------
                0.00    0.00      12/27492       buildCombOfEdge(std::__cxx11::list<edge, std::allocator<edge> >*, int*) [336]
                0.00    0.00      24/27492       sortOutImpossibleEdges(int*, std::__cxx11::list<edge, std::allocator<edge> >&, int*, int*) [297]
                0.00    0.00     252/27492       printlist(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [10]
                0.00    0.00     316/27492       containsEdge(std::__cxx11::list<edge, std::allocator<edge> >&, int, int) [228]
                0.00    0.00     744/27492       getNextEdgeQuestion(std::__cxx11::list<edge, std::allocator<edge> >&, int*, int*) [296]
                0.00    0.00    1776/27492       CopyListEdges(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<edge, std::allocator<edge> >*) [243]
                0.00    0.00    2904/27492       findEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int*, int) [311]
                0.00    0.00   21464/27492       fillEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [4]
[54]     0.0    0.00    0.00   27492         std::__cxx11::list<edge, std::allocator<edge> >::begin() [54]
                0.00    0.00   27492/170044      std::_List_iterator<edge>::_List_iterator(std::__detail::_List_node_base*) [27]
-----------------------------------------------
                0.00    0.00    4867/27481       std::__cxx11::list<edge, std::allocator<edge> >::_M_erase(std::_List_iterator<edge>) [157]
                0.00    0.00    8867/27481       std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_clear() [177]
                0.00    0.00   13747/27481       std::_List_node<edge>* std::__cxx11::list<edge, std::allocator<edge> >::_M_create_node<edge const&>(edge const&) [129]
[55]     0.0    0.00    0.00   27481         std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_get_Node_allocator() [55]
-----------------------------------------------
                0.00    0.00   26244/26244       void std::__advance<std::_List_iterator<edge>, long>(std::_List_iterator<edge>&, long, std::bidirectional_iterator_tag) [160]
[56]     0.0    0.00    0.00   26244         std::_List_iterator<edge>::operator++() [56]
-----------------------------------------------
                0.00    0.00   25578/25578       std::allocator_traits<std::allocator<std::_List_node<corner> > >::allocate(std::allocator<std::_List_node<corner> >&, unsigned long) [63]
[57]     0.0    0.00    0.00   25578         __gnu_cxx::new_allocator<std::_List_node<corner> >::allocate(unsigned long, void const*) [57]
                0.00    0.00   25578/25578       __gnu_cxx::new_allocator<std::_List_node<corner> >::max_size() const [59]
-----------------------------------------------
                0.00    0.00   25578/25578       void std::allocator_traits<std::allocator<std::_List_node<corner> > >::construct<corner, corner const&>(std::allocator<std::_List_node<corner> >&, corner*, corner const&) [64]
[58]     0.0    0.00    0.00   25578         void __gnu_cxx::new_allocator<std::_List_node<corner> >::construct<corner, corner const&>(corner*, corner const&) [58]
                0.00    0.00   25578/102312      corner const& std::forward<corner const&>(std::remove_reference<corner const&>::type&) [34]
                0.00    0.00   25578/54462       operator new(unsigned long, void*) [41]
-----------------------------------------------
                0.00    0.00   25578/25578       __gnu_cxx::new_allocator<std::_List_node<corner> >::allocate(unsigned long, void const*) [57]
[59]     0.0    0.00    0.00   25578         __gnu_cxx::new_allocator<std::_List_node<corner> >::max_size() const [59]
-----------------------------------------------
                0.00    0.00   25578/25578       std::_List_node<corner>* std::__cxx11::list<corner, std::allocator<corner> >::_M_create_node<corner const&>(corner const&) [67]
[60]     0.0    0.00    0.00   25578         std::__allocated_ptr<std::allocator<std::_List_node<corner> > >::__allocated_ptr(std::allocator<std::_List_node<corner> >&, std::_List_node<corner>*) [60]
                0.00    0.00   25578/25578       std::allocator<std::_List_node<corner> >* std::__addressof<std::allocator<std::_List_node<corner> > >(std::allocator<std::_List_node<corner> >&) [70]
-----------------------------------------------
                0.00    0.00   25578/25578       std::_List_node<corner>* std::__cxx11::list<corner, std::allocator<corner> >::_M_create_node<corner const&>(corner const&) [67]
[61]     0.0    0.00    0.00   25578         std::__allocated_ptr<std::allocator<std::_List_node<corner> > >::~__allocated_ptr() [61]
-----------------------------------------------
                0.00    0.00   25578/25578       std::_List_node<corner>* std::__cxx11::list<corner, std::allocator<corner> >::_M_create_node<corner const&>(corner const&) [67]
[62]     0.0    0.00    0.00   25578         std::__allocated_ptr<std::allocator<std::_List_node<corner> > >::operator=(decltype(nullptr)) [62]
-----------------------------------------------
                0.00    0.00   25578/25578       std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_get_node() [65]
[63]     0.0    0.00    0.00   25578         std::allocator_traits<std::allocator<std::_List_node<corner> > >::allocate(std::allocator<std::_List_node<corner> >&, unsigned long) [63]
                0.00    0.00   25578/25578       __gnu_cxx::new_allocator<std::_List_node<corner> >::allocate(unsigned long, void const*) [57]
-----------------------------------------------
                0.00    0.00   25578/25578       std::_List_node<corner>* std::__cxx11::list<corner, std::allocator<corner> >::_M_create_node<corner const&>(corner const&) [67]
[64]     0.0    0.00    0.00   25578         void std::allocator_traits<std::allocator<std::_List_node<corner> > >::construct<corner, corner const&>(std::allocator<std::_List_node<corner> >&, corner*, corner const&) [64]
                0.00    0.00   25578/102312      corner const& std::forward<corner const&>(std::remove_reference<corner const&>::type&) [34]
                0.00    0.00   25578/25578       void __gnu_cxx::new_allocator<std::_List_node<corner> >::construct<corner, corner const&>(corner*, corner const&) [58]
-----------------------------------------------
                0.00    0.00   25578/25578       std::_List_node<corner>* std::__cxx11::list<corner, std::allocator<corner> >::_M_create_node<corner const&>(corner const&) [67]
[65]     0.0    0.00    0.00   25578         std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_get_node() [65]
                0.00    0.00   25578/25578       std::allocator_traits<std::allocator<std::_List_node<corner> > >::allocate(std::allocator<std::_List_node<corner> >&, unsigned long) [63]
-----------------------------------------------
                0.00    0.00   25578/25578       void std::__cxx11::list<corner, std::allocator<corner> >::_M_insert<corner const&>(std::_List_iterator<corner>, corner const&) [68]
[66]     0.0    0.00    0.00   25578         std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_inc_size(unsigned long) [66]
                0.00    0.00   25578/102311      std::_List_node<unsigned long>::_M_valptr() [37]
-----------------------------------------------
                0.00    0.00   25578/25578       void std::__cxx11::list<corner, std::allocator<corner> >::_M_insert<corner const&>(std::_List_iterator<corner>, corner const&) [68]
[67]     0.0    0.00    0.00   25578         std::_List_node<corner>* std::__cxx11::list<corner, std::allocator<corner> >::_M_create_node<corner const&>(corner const&) [67]
                0.00    0.00   25578/25578       std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_get_node() [65]
                0.00    0.00   25578/51146       std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_get_Node_allocator() [42]
                0.00    0.00   25578/25578       std::__allocated_ptr<std::allocator<std::_List_node<corner> > >::__allocated_ptr(std::allocator<std::_List_node<corner> >&, std::_List_node<corner>*) [60]
                0.00    0.00   25578/102312      corner const& std::forward<corner const&>(std::remove_reference<corner const&>::type&) [34]
                0.00    0.00   25578/672697      std::_List_node<corner>::_M_valptr() [21]
                0.00    0.00   25578/25578       void std::allocator_traits<std::allocator<std::_List_node<corner> > >::construct<corner, corner const&>(std::allocator<std::_List_node<corner> >&, corner*, corner const&) [64]
                0.00    0.00   25578/25578       std::__allocated_ptr<std::allocator<std::_List_node<corner> > >::operator=(decltype(nullptr)) [62]
                0.00    0.00   25578/25578       std::__allocated_ptr<std::allocator<std::_List_node<corner> > >::~__allocated_ptr() [61]
-----------------------------------------------
                0.00    0.00   25578/25578       std::__cxx11::list<corner, std::allocator<corner> >::push_back(corner const&) [69]
[68]     0.0    0.00    0.00   25578         void std::__cxx11::list<corner, std::allocator<corner> >::_M_insert<corner const&>(std::_List_iterator<corner>, corner const&) [68]
                0.00    0.00   25578/102312      corner const& std::forward<corner const&>(std::remove_reference<corner const&>::type&) [34]
                0.00    0.00   25578/25578       std::_List_node<corner>* std::__cxx11::list<corner, std::allocator<corner> >::_M_create_node<corner const&>(corner const&) [67]
                0.00    0.00   25578/25578       std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_inc_size(unsigned long) [66]
-----------------------------------------------
                0.00    0.00     192/25578       buildCombOfCorner(std::__cxx11::list<corner, std::allocator<corner> >*, int*) [338]
                0.00    0.00    1184/25578       fillCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [5]
                0.00    0.00   24202/25578       CopyListCorners(std::__cxx11::list<corner, std::allocator<corner> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [6]
[69]     0.0    0.00    0.00   25578         std::__cxx11::list<corner, std::allocator<corner> >::push_back(corner const&) [69]
                0.00    0.00   25578/139922      std::__cxx11::list<corner, std::allocator<corner> >::end() [28]
                0.00    0.00   25578/25578       void std::__cxx11::list<corner, std::allocator<corner> >::_M_insert<corner const&>(std::_List_iterator<corner>, corner const&) [68]
-----------------------------------------------
                0.00    0.00   25578/25578       std::__allocated_ptr<std::allocator<std::_List_node<corner> > >::__allocated_ptr(std::allocator<std::_List_node<corner> >&, std::_List_node<corner>*) [60]
[70]     0.0    0.00    0.00   25578         std::allocator<std::_List_node<corner> >* std::__addressof<std::allocator<std::_List_node<corner> > >(std::allocator<std::_List_node<corner> >&) [70]
-----------------------------------------------
                0.00    0.00   25568/25568       std::allocator_traits<std::allocator<std::_List_node<corner> > >::deallocate(std::allocator<std::_List_node<corner> >&, std::_List_node<corner>*, unsigned long) [73]
[71]     0.0    0.00    0.00   25568         __gnu_cxx::new_allocator<std::_List_node<corner> >::deallocate(std::_List_node<corner>*, unsigned long) [71]
-----------------------------------------------
                0.00    0.00   25568/25568       void std::allocator_traits<std::allocator<std::_List_node<corner> > >::destroy<corner>(std::allocator<std::_List_node<corner> >&, corner*) [74]
[72]     0.0    0.00    0.00   25568         void __gnu_cxx::new_allocator<std::_List_node<corner> >::destroy<corner>(corner*) [72]
-----------------------------------------------
                0.00    0.00   25568/25568       std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_put_node(std::_List_node<corner>*) [75]
[73]     0.0    0.00    0.00   25568         std::allocator_traits<std::allocator<std::_List_node<corner> > >::deallocate(std::allocator<std::_List_node<corner> >&, std::_List_node<corner>*, unsigned long) [73]
                0.00    0.00   25568/25568       __gnu_cxx::new_allocator<std::_List_node<corner> >::deallocate(std::_List_node<corner>*, unsigned long) [71]
-----------------------------------------------
                0.00    0.00   10637/25568       std::__cxx11::list<corner, std::allocator<corner> >::_M_erase(std::_List_iterator<corner>) [142]
                0.00    0.00   14931/25568       std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_clear() [196]
[74]     0.0    0.00    0.00   25568         void std::allocator_traits<std::allocator<std::_List_node<corner> > >::destroy<corner>(std::allocator<std::_List_node<corner> >&, corner*) [74]
                0.00    0.00   25568/25568       void __gnu_cxx::new_allocator<std::_List_node<corner> >::destroy<corner>(corner*) [72]
-----------------------------------------------
                0.00    0.00   10637/25568       std::__cxx11::list<corner, std::allocator<corner> >::_M_erase(std::_List_iterator<corner>) [142]
                0.00    0.00   14931/25568       std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_clear() [196]
[75]     0.0    0.00    0.00   25568         std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_put_node(std::_List_node<corner>*) [75]
                0.00    0.00   25568/25568       std::allocator_traits<std::allocator<std::_List_node<corner> > >::deallocate(std::allocator<std::_List_node<corner> >&, std::_List_node<corner>*, unsigned long) [73]
-----------------------------------------------
                0.00    0.00      23/23579       sortOutImpossibleCorners(int*, std::__cxx11::list<corner, std::allocator<corner> >&, int*, int*) [12]
                0.00    0.00     168/23579       printlist(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [10]
                0.00    0.00     252/23579       containsCorner(std::__cxx11::list<corner, std::allocator<corner> >&, int, int) [11]
                0.00    0.00     713/23579       getNextCornerQuestion(std::__cxx11::list<corner, std::allocator<corner> >&, int*, int*) [9]
                0.00    0.00    1184/23579       CopyListCorners(std::__cxx11::list<corner, std::allocator<corner> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [6]
                0.00    0.00    1904/23579       findCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int*, int) [8]
                0.00    0.00   19335/23579       fillCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [5]
[76]     0.0    0.00    0.00   23579         std::__cxx11::list<corner, std::allocator<corner> >::begin() [76]
                0.00    0.00   23579/184775      std::_List_iterator<corner>::_List_iterator(std::__detail::_List_node_base*) [26]
-----------------------------------------------
                0.00    0.00   15047/15047       std::allocator_traits<std::allocator<std::_List_node<int> > >::deallocate(std::allocator<std::_List_node<int> >&, std::_List_node<int>*, unsigned long) [87]
[77]     0.0    0.00    0.00   15047         __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate(std::_List_node<int>*, unsigned long) [77]
-----------------------------------------------
                0.00    0.00   15047/15047       void std::allocator_traits<std::allocator<std::_List_node<int> > >::destroy<int>(std::allocator<std::_List_node<int> >&, int*) [88]
[78]     0.0    0.00    0.00   15047         void __gnu_cxx::new_allocator<std::_List_node<int> >::destroy<int>(int*) [78]
-----------------------------------------------
                0.00    0.00   15047/15047       std::allocator_traits<std::allocator<std::_List_node<int> > >::allocate(std::allocator<std::_List_node<int> >&, unsigned long) [89]
[79]     0.0    0.00    0.00   15047         __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned long, void const*) [79]
                0.00    0.00   15047/15047       __gnu_cxx::new_allocator<std::_List_node<int> >::max_size() const [81]
-----------------------------------------------
                0.00    0.00   15047/15047       void std::allocator_traits<std::allocator<std::_List_node<int> > >::construct<int, int const&>(std::allocator<std::_List_node<int> >&, int*, int const&) [90]
[80]     0.0    0.00    0.00   15047         void __gnu_cxx::new_allocator<std::_List_node<int> >::construct<int, int const&>(int*, int const&) [80]
                0.00    0.00   15047/60188       int const& std::forward<int const&>(std::remove_reference<int const&>::type&) [39]
                0.00    0.00   15047/54462       operator new(unsigned long, void*) [41]
-----------------------------------------------
                0.00    0.00   15047/15047       __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned long, void const*) [79]
[81]     0.0    0.00    0.00   15047         __gnu_cxx::new_allocator<std::_List_node<int> >::max_size() const [81]
-----------------------------------------------
                0.00    0.00   15047/15047       std::__cxx11::list<int, std::allocator<int> >::back() [96]
[82]     0.0    0.00    0.00   15047         std::_List_iterator<int>::operator*() const [82]
                0.00    0.00   15047/45141       std::_List_node<int>::_M_valptr() [45]
-----------------------------------------------
                0.00    0.00   15047/15047       std::__cxx11::list<int, std::allocator<int> >::back() [96]
[83]     0.0    0.00    0.00   15047         std::_List_iterator<int>::operator--() [83]
-----------------------------------------------
                0.00    0.00   15047/15047       std::_List_node<int>* std::__cxx11::list<int, std::allocator<int> >::_M_create_node<int const&>(int const&) [95]
[84]     0.0    0.00    0.00   15047         std::__allocated_ptr<std::allocator<std::_List_node<int> > >::__allocated_ptr(std::allocator<std::_List_node<int> >&, std::_List_node<int>*) [84]
                0.00    0.00   15047/15047       std::allocator<std::_List_node<int> >* std::__addressof<std::allocator<std::_List_node<int> > >(std::allocator<std::_List_node<int> >&) [101]
-----------------------------------------------
                0.00    0.00   15047/15047       std::_List_node<int>* std::__cxx11::list<int, std::allocator<int> >::_M_create_node<int const&>(int const&) [95]
[85]     0.0    0.00    0.00   15047         std::__allocated_ptr<std::allocator<std::_List_node<int> > >::~__allocated_ptr() [85]
-----------------------------------------------
                0.00    0.00   15047/15047       std::_List_node<int>* std::__cxx11::list<int, std::allocator<int> >::_M_create_node<int const&>(int const&) [95]
[86]     0.0    0.00    0.00   15047         std::__allocated_ptr<std::allocator<std::_List_node<int> > >::operator=(decltype(nullptr)) [86]
-----------------------------------------------
                0.00    0.00   15047/15047       std::__cxx11::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*) [94]
[87]     0.0    0.00    0.00   15047         std::allocator_traits<std::allocator<std::_List_node<int> > >::deallocate(std::allocator<std::_List_node<int> >&, std::_List_node<int>*, unsigned long) [87]
                0.00    0.00   15047/15047       __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate(std::_List_node<int>*, unsigned long) [77]
-----------------------------------------------
                0.00    0.00   15047/15047       std::__cxx11::list<int, std::allocator<int> >::_M_erase(std::_List_iterator<int>) [97]
[88]     0.0    0.00    0.00   15047         void std::allocator_traits<std::allocator<std::_List_node<int> > >::destroy<int>(std::allocator<std::_List_node<int> >&, int*) [88]
                0.00    0.00   15047/15047       void __gnu_cxx::new_allocator<std::_List_node<int> >::destroy<int>(int*) [78]
-----------------------------------------------
                0.00    0.00   15047/15047       std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_node() [92]
[89]     0.0    0.00    0.00   15047         std::allocator_traits<std::allocator<std::_List_node<int> > >::allocate(std::allocator<std::_List_node<int> >&, unsigned long) [89]
                0.00    0.00   15047/15047       __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned long, void const*) [79]
-----------------------------------------------
                0.00    0.00   15047/15047       std::_List_node<int>* std::__cxx11::list<int, std::allocator<int> >::_M_create_node<int const&>(int const&) [95]
[90]     0.0    0.00    0.00   15047         void std::allocator_traits<std::allocator<std::_List_node<int> > >::construct<int, int const&>(std::allocator<std::_List_node<int> >&, int*, int const&) [90]
                0.00    0.00   15047/60188       int const& std::forward<int const&>(std::remove_reference<int const&>::type&) [39]
                0.00    0.00   15047/15047       void __gnu_cxx::new_allocator<std::_List_node<int> >::construct<int, int const&>(int*, int const&) [80]
-----------------------------------------------
                0.00    0.00   15047/15047       std::__cxx11::list<int, std::allocator<int> >::_M_erase(std::_List_iterator<int>) [97]
[91]     0.0    0.00    0.00   15047         std::__cxx11::_List_base<int, std::allocator<int> >::_M_dec_size(unsigned long) [91]
                0.00    0.00   15047/102311      std::_List_node<unsigned long>::_M_valptr() [37]
-----------------------------------------------
                0.00    0.00   15047/15047       std::_List_node<int>* std::__cxx11::list<int, std::allocator<int> >::_M_create_node<int const&>(int const&) [95]
[92]     0.0    0.00    0.00   15047         std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_node() [92]
                0.00    0.00   15047/15047       std::allocator_traits<std::allocator<std::_List_node<int> > >::allocate(std::allocator<std::_List_node<int> >&, unsigned long) [89]
-----------------------------------------------
                0.00    0.00   15047/15047       void std::__cxx11::list<int, std::allocator<int> >::_M_insert<int const&>(std::_List_iterator<int>, int const&) [99]
[93]     0.0    0.00    0.00   15047         std::__cxx11::_List_base<int, std::allocator<int> >::_M_inc_size(unsigned long) [93]
                0.00    0.00   15047/102311      std::_List_node<unsigned long>::_M_valptr() [37]
-----------------------------------------------
                0.00    0.00   15047/15047       std::__cxx11::list<int, std::allocator<int> >::_M_erase(std::_List_iterator<int>) [97]
[94]     0.0    0.00    0.00   15047         std::__cxx11::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*) [94]
                0.00    0.00   15047/15047       std::allocator_traits<std::allocator<std::_List_node<int> > >::deallocate(std::allocator<std::_List_node<int> >&, std::_List_node<int>*, unsigned long) [87]
-----------------------------------------------
                0.00    0.00   15047/15047       void std::__cxx11::list<int, std::allocator<int> >::_M_insert<int const&>(std::_List_iterator<int>, int const&) [99]
[95]     0.0    0.00    0.00   15047         std::_List_node<int>* std::__cxx11::list<int, std::allocator<int> >::_M_create_node<int const&>(int const&) [95]
                0.00    0.00   15047/15047       std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_node() [92]
                0.00    0.00   15047/30094       std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() [50]
                0.00    0.00   15047/15047       std::__allocated_ptr<std::allocator<std::_List_node<int> > >::__allocated_ptr(std::allocator<std::_List_node<int> >&, std::_List_node<int>*) [84]
                0.00    0.00   15047/60188       int const& std::forward<int const&>(std::remove_reference<int const&>::type&) [39]
                0.00    0.00   15047/45141       std::_List_node<int>::_M_valptr() [45]
                0.00    0.00   15047/15047       void std::allocator_traits<std::allocator<std::_List_node<int> > >::construct<int, int const&>(std::allocator<std::_List_node<int> >&, int*, int const&) [90]
                0.00    0.00   15047/15047       std::__allocated_ptr<std::allocator<std::_List_node<int> > >::operator=(decltype(nullptr)) [86]
                0.00    0.00   15047/15047       std::__allocated_ptr<std::allocator<std::_List_node<int> > >::~__allocated_ptr() [85]
-----------------------------------------------
                0.00    0.00    4592/15047       fillEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [4]
                0.00    0.00   10455/15047       fillCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [5]
[96]     0.0    0.00    0.00   15047         std::__cxx11::list<int, std::allocator<int> >::back() [96]
                0.00    0.00   15047/30094       std::__cxx11::list<int, std::allocator<int> >::end() [51]
                0.00    0.00   15047/15047       std::_List_iterator<int>::operator--() [83]
                0.00    0.00   15047/15047       std::_List_iterator<int>::operator*() const [82]
-----------------------------------------------
                0.00    0.00   15047/15047       std::__cxx11::list<int, std::allocator<int> >::pop_back() [98]
[97]     0.0    0.00    0.00   15047         std::__cxx11::list<int, std::allocator<int> >::_M_erase(std::_List_iterator<int>) [97]
                0.00    0.00   15047/15047       std::__cxx11::_List_base<int, std::allocator<int> >::_M_dec_size(unsigned long) [91]
                0.00    0.00   15047/45141       std::_List_node<int>::_M_valptr() [45]
                0.00    0.00   15047/15047       void std::allocator_traits<std::allocator<std::_List_node<int> > >::destroy<int>(std::allocator<std::_List_node<int> >&, int*) [88]
                0.00    0.00   15047/30094       std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() [50]
                0.00    0.00   15047/15047       std::__cxx11::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*) [94]
-----------------------------------------------
                0.00    0.00    4592/15047       fillEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [4]
                0.00    0.00   10455/15047       fillCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [5]
[98]     0.0    0.00    0.00   15047         std::__cxx11::list<int, std::allocator<int> >::pop_back() [98]
                0.00    0.00   15047/45141       std::_List_iterator<int>::_List_iterator(std::__detail::_List_node_base*) [46]
                0.00    0.00   15047/15047       std::__cxx11::list<int, std::allocator<int> >::_M_erase(std::_List_iterator<int>) [97]
-----------------------------------------------
                0.00    0.00   15047/15047       std::__cxx11::list<int, std::allocator<int> >::push_back(int const&) [100]
[99]     0.0    0.00    0.00   15047         void std::__cxx11::list<int, std::allocator<int> >::_M_insert<int const&>(std::_List_iterator<int>, int const&) [99]
                0.00    0.00   15047/60188       int const& std::forward<int const&>(std::remove_reference<int const&>::type&) [39]
                0.00    0.00   15047/15047       std::_List_node<int>* std::__cxx11::list<int, std::allocator<int> >::_M_create_node<int const&>(int const&) [95]
                0.00    0.00   15047/15047       std::__cxx11::_List_base<int, std::allocator<int> >::_M_inc_size(unsigned long) [93]
-----------------------------------------------
                0.00    0.00    4592/15047       fillEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [4]
                0.00    0.00   10455/15047       fillCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [5]
[100]    0.0    0.00    0.00   15047         std::__cxx11::list<int, std::allocator<int> >::push_back(int const&) [100]
                0.00    0.00   15047/30094       std::__cxx11::list<int, std::allocator<int> >::end() [51]
                0.00    0.00   15047/15047       void std::__cxx11::list<int, std::allocator<int> >::_M_insert<int const&>(std::_List_iterator<int>, int const&) [99]
-----------------------------------------------
                0.00    0.00   15047/15047       std::__allocated_ptr<std::allocator<std::_List_node<int> > >::__allocated_ptr(std::allocator<std::_List_node<int> >&, std::_List_node<int>*) [84]
[101]    0.0    0.00    0.00   15047         std::allocator<std::_List_node<int> >* std::__addressof<std::allocator<std::_List_node<int> > >(std::allocator<std::_List_node<int> >&) [101]
-----------------------------------------------
                0.00    0.00   14534/14534       std::_List_node<middle>::_M_valptr() [104]
[102]    0.0    0.00    0.00   14534         __gnu_cxx::__aligned_membuf<middle>::_M_ptr() [102]
                0.00    0.00   14534/14534       __gnu_cxx::__aligned_membuf<middle>::_M_addr() [103]
-----------------------------------------------
                0.00    0.00   14534/14534       __gnu_cxx::__aligned_membuf<middle>::_M_ptr() [102]
[103]    0.0    0.00    0.00   14534         __gnu_cxx::__aligned_membuf<middle>::_M_addr() [103]
-----------------------------------------------
                0.00    0.00       1/14534       std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_clear() [353]
                0.00    0.00      89/14534       std::__cxx11::list<middle, std::allocator<middle> >::_M_erase(std::_List_iterator<middle>) [281]
                0.00    0.00      90/14534       std::_List_node<middle>* std::__cxx11::list<middle, std::allocator<middle> >::_M_create_node<middle const&>(middle const&) [272]
                0.00    0.00   14354/14534       std::_List_iterator<middle>::operator->() const [105]
[104]    0.0    0.00    0.00   14534         std::_List_node<middle>::_M_valptr() [104]
                0.00    0.00   14534/14534       __gnu_cxx::__aligned_membuf<middle>::_M_ptr() [102]
-----------------------------------------------
                0.00    0.00       6/14354       findMiddle(int*) [333]
                0.00    0.00     206/14354       sortOutImpossibleCodes(int*, std::__cxx11::list<middle, std::allocator<middle> >&, int*) [315]
                0.00    0.00     665/14354       eliminateFound(std::__cxx11::list<middle, std::allocator<middle> >&, int*) [325]
                0.00    0.00    1323/14354       containsMiddle(std::__cxx11::list<middle, std::allocator<middle> >&, int, int) [255]
                0.00    0.00   12154/14354       getNextQuestion(std::__cxx11::list<middle, std::allocator<middle> >&, int*) [313]
[105]    0.0    0.00    0.00   14354         std::_List_iterator<middle>::operator->() const [105]
                0.00    0.00   14354/14534       std::_List_node<middle>::_M_valptr() [104]
-----------------------------------------------
                0.00    0.00   13912/13912       std::allocator<std::_List_node<int> >::allocator() [108]
[106]    0.0    0.00    0.00   13912         __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator() [106]
-----------------------------------------------
                0.00    0.00   13912/13912       std::allocator<std::_List_node<int> >::~allocator() [109]
[107]    0.0    0.00    0.00   13912         __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator() [107]
-----------------------------------------------
                0.00    0.00   13912/13912       std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl::_List_impl() [110]
[108]    0.0    0.00    0.00   13912         std::allocator<std::_List_node<int> >::allocator() [108]
                0.00    0.00   13912/13912       __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator() [106]
-----------------------------------------------
                0.00    0.00   13912/13912       std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl() [111]
[109]    0.0    0.00    0.00   13912         std::allocator<std::_List_node<int> >::~allocator() [109]
                0.00    0.00   13912/13912       __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator() [107]
-----------------------------------------------
                0.00    0.00   13912/13912       std::__cxx11::_List_base<int, std::allocator<int> >::_List_base() [115]
[110]    0.0    0.00    0.00   13912         std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl::_List_impl() [110]
                0.00    0.00   13912/13912       std::allocator<std::_List_node<int> >::allocator() [108]
-----------------------------------------------
                0.00    0.00   13912/13912       std::__cxx11::_List_base<int, std::allocator<int> >::~_List_base() [116]
[111]    0.0    0.00    0.00   13912         std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl() [111]
                0.00    0.00   13912/13912       std::allocator<std::_List_node<int> >::~allocator() [109]
-----------------------------------------------
                0.00    0.00   13912/13912       std::__cxx11::_List_base<int, std::allocator<int> >::_M_init() [113]
[112]    0.0    0.00    0.00   13912         std::__cxx11::_List_base<int, std::allocator<int> >::_M_set_size(unsigned long) [112]
                0.00    0.00   13912/102311      std::_List_node<unsigned long>::_M_valptr() [37]
-----------------------------------------------
                0.00    0.00   13912/13912       std::__cxx11::_List_base<int, std::allocator<int> >::_List_base() [115]
[113]    0.0    0.00    0.00   13912         std::__cxx11::_List_base<int, std::allocator<int> >::_M_init() [113]
                0.00    0.00   13912/13912       std::__cxx11::_List_base<int, std::allocator<int> >::_M_set_size(unsigned long) [112]
-----------------------------------------------
                0.00    0.00   13912/13912       std::__cxx11::_List_base<int, std::allocator<int> >::~_List_base() [116]
[114]    0.0    0.00    0.00   13912         std::__cxx11::_List_base<int, std::allocator<int> >::_M_clear() [114]
-----------------------------------------------
                0.00    0.00   13912/13912       std::__cxx11::list<int, std::allocator<int> >::list() [117]
[115]    0.0    0.00    0.00   13912         std::__cxx11::_List_base<int, std::allocator<int> >::_List_base() [115]
                0.00    0.00   13912/13912       std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl::_List_impl() [110]
                0.00    0.00   13912/13912       std::__cxx11::_List_base<int, std::allocator<int> >::_M_init() [113]
-----------------------------------------------
                0.00    0.00   13912/13912       std::__cxx11::list<int, std::allocator<int> >::~list() [118]
[116]    0.0    0.00    0.00   13912         std::__cxx11::_List_base<int, std::allocator<int> >::~_List_base() [116]
                0.00    0.00   13912/13912       std::__cxx11::_List_base<int, std::allocator<int> >::_M_clear() [114]
                0.00    0.00   13912/13912       std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl() [111]
-----------------------------------------------
                0.00    0.00    4144/13912       fillCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [5]
                0.00    0.00    9768/13912       fillEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [4]
[117]    0.0    0.00    0.00   13912         std::__cxx11::list<int, std::allocator<int> >::list() [117]
                0.00    0.00   13912/13912       std::__cxx11::_List_base<int, std::allocator<int> >::_List_base() [115]
-----------------------------------------------
                0.00    0.00    4144/13912       fillCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [5]
                0.00    0.00    9768/13912       fillEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [4]
[118]    0.0    0.00    0.00   13912         std::__cxx11::list<int, std::allocator<int> >::~list() [118]
                0.00    0.00   13912/13912       std::__cxx11::_List_base<int, std::allocator<int> >::~_List_base() [116]
-----------------------------------------------
                0.00    0.00   13747/13747       std::allocator_traits<std::allocator<std::_List_node<edge> > >::allocate(std::allocator<std::_List_node<edge> >&, unsigned long) [125]
[119]    0.0    0.00    0.00   13747         __gnu_cxx::new_allocator<std::_List_node<edge> >::allocate(unsigned long, void const*) [119]
                0.00    0.00   13747/13747       __gnu_cxx::new_allocator<std::_List_node<edge> >::max_size() const [121]
-----------------------------------------------
                0.00    0.00   13747/13747       void std::allocator_traits<std::allocator<std::_List_node<edge> > >::construct<edge, edge const&>(std::allocator<std::_List_node<edge> >&, edge*, edge const&) [126]
[120]    0.0    0.00    0.00   13747         void __gnu_cxx::new_allocator<std::_List_node<edge> >::construct<edge, edge const&>(edge*, edge const&) [120]
                0.00    0.00   13747/54988       edge const& std::forward<edge const&>(std::remove_reference<edge const&>::type&) [40]
                0.00    0.00   13747/54462       operator new(unsigned long, void*) [41]
-----------------------------------------------
                0.00    0.00   13747/13747       __gnu_cxx::new_allocator<std::_List_node<edge> >::allocate(unsigned long, void const*) [119]
[121]    0.0    0.00    0.00   13747         __gnu_cxx::new_allocator<std::_List_node<edge> >::max_size() const [121]
-----------------------------------------------
                0.00    0.00   13747/13747       std::_List_node<edge>* std::__cxx11::list<edge, std::allocator<edge> >::_M_create_node<edge const&>(edge const&) [129]
[122]    0.0    0.00    0.00   13747         std::__allocated_ptr<std::allocator<std::_List_node<edge> > >::__allocated_ptr(std::allocator<std::_List_node<edge> >&, std::_List_node<edge>*) [122]
                0.00    0.00   13747/13747       std::allocator<std::_List_node<edge> >* std::__addressof<std::allocator<std::_List_node<edge> > >(std::allocator<std::_List_node<edge> >&) [132]
-----------------------------------------------
                0.00    0.00   13747/13747       std::_List_node<edge>* std::__cxx11::list<edge, std::allocator<edge> >::_M_create_node<edge const&>(edge const&) [129]
[123]    0.0    0.00    0.00   13747         std::__allocated_ptr<std::allocator<std::_List_node<edge> > >::~__allocated_ptr() [123]
-----------------------------------------------
                0.00    0.00   13747/13747       std::_List_node<edge>* std::__cxx11::list<edge, std::allocator<edge> >::_M_create_node<edge const&>(edge const&) [129]
[124]    0.0    0.00    0.00   13747         std::__allocated_ptr<std::allocator<std::_List_node<edge> > >::operator=(decltype(nullptr)) [124]
-----------------------------------------------
                0.00    0.00   13747/13747       std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_get_node() [127]
[125]    0.0    0.00    0.00   13747         std::allocator_traits<std::allocator<std::_List_node<edge> > >::allocate(std::allocator<std::_List_node<edge> >&, unsigned long) [125]
                0.00    0.00   13747/13747       __gnu_cxx::new_allocator<std::_List_node<edge> >::allocate(unsigned long, void const*) [119]
-----------------------------------------------
                0.00    0.00   13747/13747       std::_List_node<edge>* std::__cxx11::list<edge, std::allocator<edge> >::_M_create_node<edge const&>(edge const&) [129]
[126]    0.0    0.00    0.00   13747         void std::allocator_traits<std::allocator<std::_List_node<edge> > >::construct<edge, edge const&>(std::allocator<std::_List_node<edge> >&, edge*, edge const&) [126]
                0.00    0.00   13747/54988       edge const& std::forward<edge const&>(std::remove_reference<edge const&>::type&) [40]
                0.00    0.00   13747/13747       void __gnu_cxx::new_allocator<std::_List_node<edge> >::construct<edge, edge const&>(edge*, edge const&) [120]
-----------------------------------------------
                0.00    0.00   13747/13747       std::_List_node<edge>* std::__cxx11::list<edge, std::allocator<edge> >::_M_create_node<edge const&>(edge const&) [129]
[127]    0.0    0.00    0.00   13747         std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_get_node() [127]
                0.00    0.00   13747/13747       std::allocator_traits<std::allocator<std::_List_node<edge> > >::allocate(std::allocator<std::_List_node<edge> >&, unsigned long) [125]
-----------------------------------------------
                0.00    0.00   13747/13747       void std::__cxx11::list<edge, std::allocator<edge> >::_M_insert<edge const&>(std::_List_iterator<edge>, edge const&) [130]
[128]    0.0    0.00    0.00   13747         std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_inc_size(unsigned long) [128]
                0.00    0.00   13747/102311      std::_List_node<unsigned long>::_M_valptr() [37]
-----------------------------------------------
                0.00    0.00   13747/13747       void std::__cxx11::list<edge, std::allocator<edge> >::_M_insert<edge const&>(std::_List_iterator<edge>, edge const&) [130]
[129]    0.0    0.00    0.00   13747         std::_List_node<edge>* std::__cxx11::list<edge, std::allocator<edge> >::_M_create_node<edge const&>(edge const&) [129]
                0.00    0.00   13747/13747       std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_get_node() [127]
                0.00    0.00   13747/27481       std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_get_Node_allocator() [55]
                0.00    0.00   13747/13747       std::__allocated_ptr<std::allocator<std::_List_node<edge> > >::__allocated_ptr(std::allocator<std::_List_node<edge> >&, std::_List_node<edge>*) [122]
                0.00    0.00   13747/54988       edge const& std::forward<edge const&>(std::remove_reference<edge const&>::type&) [40]
                0.00    0.00   13747/456088      std::_List_node<edge>::_M_valptr() [24]
                0.00    0.00   13747/13747       void std::allocator_traits<std::allocator<std::_List_node<edge> > >::construct<edge, edge const&>(std::allocator<std::_List_node<edge> >&, edge*, edge const&) [126]
                0.00    0.00   13747/13747       std::__allocated_ptr<std::allocator<std::_List_node<edge> > >::operator=(decltype(nullptr)) [124]
                0.00    0.00   13747/13747       std::__allocated_ptr<std::allocator<std::_List_node<edge> > >::~__allocated_ptr() [123]
-----------------------------------------------
                0.00    0.00   13747/13747       std::__cxx11::list<edge, std::allocator<edge> >::push_back(edge const&) [131]
[130]    0.0    0.00    0.00   13747         void std::__cxx11::list<edge, std::allocator<edge> >::_M_insert<edge const&>(std::_List_iterator<edge>, edge const&) [130]
                0.00    0.00   13747/54988       edge const& std::forward<edge const&>(std::remove_reference<edge const&>::type&) [40]
                0.00    0.00   13747/13747       std::_List_node<edge>* std::__cxx11::list<edge, std::allocator<edge> >::_M_create_node<edge const&>(edge const&) [129]
                0.00    0.00   13747/13747       std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_inc_size(unsigned long) [128]
-----------------------------------------------
                0.00    0.00     288/13747       buildCombOfEdge(std::__cxx11::list<edge, std::allocator<edge> >*, int*) [336]
                0.00    0.00    1776/13747       fillEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [4]
                0.00    0.00   11683/13747       CopyListEdges(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<edge, std::allocator<edge> >*) [243]
[131]    0.0    0.00    0.00   13747         std::__cxx11::list<edge, std::allocator<edge> >::push_back(edge const&) [131]
                0.00    0.00   13747/132818      std::__cxx11::list<edge, std::allocator<edge> >::end() [29]
                0.00    0.00   13747/13747       void std::__cxx11::list<edge, std::allocator<edge> >::_M_insert<edge const&>(std::_List_iterator<edge>, edge const&) [130]
-----------------------------------------------
                0.00    0.00   13747/13747       std::__allocated_ptr<std::allocator<std::_List_node<edge> > >::__allocated_ptr(std::allocator<std::_List_node<edge> >&, std::_List_node<edge>*) [122]
[132]    0.0    0.00    0.00   13747         std::allocator<std::_List_node<edge> >* std::__addressof<std::allocator<std::_List_node<edge> > >(std::allocator<std::_List_node<edge> >&) [132]
-----------------------------------------------
                0.00    0.00   13734/13734       std::allocator_traits<std::allocator<std::_List_node<edge> > >::deallocate(std::allocator<std::_List_node<edge> >&, std::_List_node<edge>*, unsigned long) [135]
[133]    0.0    0.00    0.00   13734         __gnu_cxx::new_allocator<std::_List_node<edge> >::deallocate(std::_List_node<edge>*, unsigned long) [133]
-----------------------------------------------
                0.00    0.00   13734/13734       void std::allocator_traits<std::allocator<std::_List_node<edge> > >::destroy<edge>(std::allocator<std::_List_node<edge> >&, edge*) [136]
[134]    0.0    0.00    0.00   13734         void __gnu_cxx::new_allocator<std::_List_node<edge> >::destroy<edge>(edge*) [134]
-----------------------------------------------
                0.00    0.00   13734/13734       std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_put_node(std::_List_node<edge>*) [137]
[135]    0.0    0.00    0.00   13734         std::allocator_traits<std::allocator<std::_List_node<edge> > >::deallocate(std::allocator<std::_List_node<edge> >&, std::_List_node<edge>*, unsigned long) [135]
                0.00    0.00   13734/13734       __gnu_cxx::new_allocator<std::_List_node<edge> >::deallocate(std::_List_node<edge>*, unsigned long) [133]
-----------------------------------------------
                0.00    0.00    4867/13734       std::__cxx11::list<edge, std::allocator<edge> >::_M_erase(std::_List_iterator<edge>) [157]
                0.00    0.00    8867/13734       std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_clear() [177]
[136]    0.0    0.00    0.00   13734         void std::allocator_traits<std::allocator<std::_List_node<edge> > >::destroy<edge>(std::allocator<std::_List_node<edge> >&, edge*) [136]
                0.00    0.00   13734/13734       void __gnu_cxx::new_allocator<std::_List_node<edge> >::destroy<edge>(edge*) [134]
-----------------------------------------------
                0.00    0.00    4867/13734       std::__cxx11::list<edge, std::allocator<edge> >::_M_erase(std::_List_iterator<edge>) [157]
                0.00    0.00    8867/13734       std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_clear() [177]
[137]    0.0    0.00    0.00   13734         std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_put_node(std::_List_node<edge>*) [137]
                0.00    0.00   13734/13734       std::allocator_traits<std::allocator<std::_List_node<edge> > >::deallocate(std::allocator<std::_List_node<edge> >&, std::_List_node<edge>*, unsigned long) [135]
-----------------------------------------------
                0.00    0.00   10637/10637       std::__cxx11::list<corner, std::allocator<corner> >::erase(std::_List_const_iterator<corner>) [141]
[138]    0.0    0.00    0.00   10637         std::_List_const_iterator<corner>::_M_const_cast() const [138]
                0.00    0.00   10637/184775      std::_List_iterator<corner>::_List_iterator(std::__detail::_List_node_base*) [26]
-----------------------------------------------
                0.00    0.00      84/10637       findCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int*, int) [8]
                0.00    0.00      98/10637       sortOutImpossibleCorners(int*, std::__cxx11::list<corner, std::allocator<corner> >&, int*, int*) [12]
                0.00    0.00   10455/10637       fillCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [5]
[139]    0.0    0.00    0.00   10637         std::_List_const_iterator<corner>::_List_const_iterator(std::_List_iterator<corner> const&) [139]
-----------------------------------------------
                0.00    0.00   10637/10637       std::__cxx11::list<corner, std::allocator<corner> >::_M_erase(std::_List_iterator<corner>) [142]
[140]    0.0    0.00    0.00   10637         std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_dec_size(unsigned long) [140]
                0.00    0.00   10637/102311      std::_List_node<unsigned long>::_M_valptr() [37]
-----------------------------------------------
                0.00    0.00      84/10637       findCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int*, int) [8]
                0.00    0.00      98/10637       sortOutImpossibleCorners(int*, std::__cxx11::list<corner, std::allocator<corner> >&, int*, int*) [12]
                0.00    0.00   10455/10637       fillCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [5]
[141]    0.0    0.00    0.00   10637         std::__cxx11::list<corner, std::allocator<corner> >::erase(std::_List_const_iterator<corner>) [141]
                0.00    0.00   10637/184775      std::_List_iterator<corner>::_List_iterator(std::__detail::_List_node_base*) [26]
                0.00    0.00   10637/10637       std::_List_const_iterator<corner>::_M_const_cast() const [138]
                0.00    0.00   10637/10637       std::__cxx11::list<corner, std::allocator<corner> >::_M_erase(std::_List_iterator<corner>) [142]
-----------------------------------------------
                0.00    0.00   10637/10637       std::__cxx11::list<corner, std::allocator<corner> >::erase(std::_List_const_iterator<corner>) [141]
[142]    0.0    0.00    0.00   10637         std::__cxx11::list<corner, std::allocator<corner> >::_M_erase(std::_List_iterator<corner>) [142]
                0.00    0.00   10637/10637       std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_dec_size(unsigned long) [140]
                0.00    0.00   10637/672697      std::_List_node<corner>::_M_valptr() [21]
                0.00    0.00   10637/51146       std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_get_Node_allocator() [42]
                0.00    0.00   10637/25568       void std::allocator_traits<std::allocator<std::_List_node<corner> > >::destroy<corner>(std::allocator<std::_List_node<corner> >&, corner*) [74]
                0.00    0.00   10637/25568       std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_put_node(std::_List_node<corner>*) [75]
-----------------------------------------------
                0.00    0.00   10455/10455       void std::advance<std::_List_iterator<corner>, int>(std::_List_iterator<corner>&, int) [144]
[143]    0.0    0.00    0.00   10455         std::iterator_traits<std::_List_iterator<corner> >::iterator_category std::__iterator_category<std::_List_iterator<corner> >(std::_List_iterator<corner> const&) [143]
-----------------------------------------------
                0.00    0.00   10455/10455       fillCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [5]
[144]    0.0    0.00    0.00   10455         void std::advance<std::_List_iterator<corner>, int>(std::_List_iterator<corner>&, int) [144]
                0.00    0.00   10455/10455       std::iterator_traits<std::_List_iterator<corner> >::iterator_category std::__iterator_category<std::_List_iterator<corner> >(std::_List_iterator<corner> const&) [143]
                0.00    0.00   10455/10455       void std::__advance<std::_List_iterator<corner>, long>(std::_List_iterator<corner>&, long, std::bidirectional_iterator_tag) [145]
-----------------------------------------------
                0.00    0.00   10455/10455       void std::advance<std::_List_iterator<corner>, int>(std::_List_iterator<corner>&, int) [144]
[145]    0.0    0.00    0.00   10455         void std::__advance<std::_List_iterator<corner>, long>(std::_List_iterator<corner>&, long, std::bidirectional_iterator_tag) [145]
                0.00    0.00   86280/86280       std::_List_iterator<corner>::operator++() [38]
-----------------------------------------------
                0.00    0.00    8043/8043        std::__cxx11::list<edge, std::allocator<edge> >::size() const [147]
[146]    0.0    0.00    0.00    8043         std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_node_count() const [146]
                0.00    0.00    8043/41606       std::_List_node<unsigned long>::_M_valptr() const [49]
-----------------------------------------------
                0.00    0.00      42/8043        planAction(int, std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*, int*) [7]
                0.00    0.00     207/8043        sortOutImpossibleEdges(int*, std::__cxx11::list<edge, std::allocator<edge> >&, int*, int*) [297]
                0.00    0.00     252/8043        failsafe(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [305]
                0.00    0.00    1234/8043        findEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int*, int) [311]
                0.00    0.00    1776/8043        fillEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [4]
                0.00    0.00    4532/8043        SortEdgesList(std::__cxx11::list<edge, std::allocator<edge> >*, int*, int) [244]
[147]    0.0    0.00    0.00    8043         std::__cxx11::list<edge, std::allocator<edge> >::size() const [147]
                0.00    0.00    8043/8043        std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_node_count() const [146]
-----------------------------------------------
                0.00    0.00      40/6320        fiRotate(int (*) [3][3]) [291]
                0.00    0.00      92/6320        liRotate(int (*) [3][3]) [256]
                0.00    0.00     144/6320        bRotate(int (*) [3][3]) [253]
                0.00    0.00     188/6320        biRotate(int (*) [3][3]) [235]
                0.00    0.00     268/6320        riRotate(int (*) [3][3]) [232]
                0.00    0.00     288/6320        rRotate(int (*) [3][3]) [231]
                0.00    0.00     568/6320        fRotate(int (*) [3][3]) [222]
                0.00    0.00     580/6320        diRotate(int (*) [3][3]) [221]
                0.00    0.00     624/6320        lRotate(int (*) [3][3]) [220]
                0.00    0.00     788/6320        uiRotate(int (*) [3][3]) [219]
                0.00    0.00    1284/6320        uRotate(int (*) [3][3]) [205]
                0.00    0.00    1456/6320        dRotate(int (*) [3][3]) [188]
[148]    0.0    0.00    0.00    6320         copyCube(int (*) [3][3]) [148]
-----------------------------------------------
                0.00    0.00      89/5831        std::__cxx11::list<middle, std::allocator<middle> >::erase(std::_List_const_iterator<middle>) [280]
                0.00    0.00      89/5831        std::_List_const_iterator<middle>::_M_const_cast() const [277]
                0.00    0.00     476/5831        std::__cxx11::list<middle, std::allocator<middle> >::begin() [224]
                0.00    0.00    5177/5831        std::__cxx11::list<middle, std::allocator<middle> >::end() [150]
[149]    0.0    0.00    0.00    5831         std::_List_iterator<middle>::_List_iterator(std::__detail::_List_node_base*) [149]
-----------------------------------------------
                0.00    0.00      90/5177        std::__cxx11::list<middle, std::allocator<middle> >::push_back(middle const&) [274]
                0.00    0.00     150/5177        sortOutImpossibleCodes(int*, std::__cxx11::list<middle, std::allocator<middle> >&, int*) [315]
                0.00    0.00     402/5177        eliminateFound(std::__cxx11::list<middle, std::allocator<middle> >&, int*) [325]
                0.00    0.00    1145/5177        containsMiddle(std::__cxx11::list<middle, std::allocator<middle> >&, int, int) [255]
                0.00    0.00    3390/5177        getNextQuestion(std::__cxx11::list<middle, std::allocator<middle> >&, int*) [313]
[150]    0.0    0.00    0.00    5177         std::__cxx11::list<middle, std::allocator<middle> >::end() [150]
                0.00    0.00    5177/5831        std::_List_iterator<middle>::_List_iterator(std::__detail::_List_node_base*) [149]
-----------------------------------------------
                0.00    0.00    1916/5113        void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter) [207]
                0.00    0.00    3197/5113        void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_less_iter>(int*, __gnu_cxx::__ops::_Val_less_iter) [190]
[151]    0.0    0.00    0.00    5113         std::remove_reference<int&>::type&& std::move<int&>(int&) [151]
-----------------------------------------------
                0.00    0.00     105/4998        sortOutImpossibleCodes(int*, std::__cxx11::list<middle, std::allocator<middle> >&, int*) [315]
                0.00    0.00     358/4998        eliminateFound(std::__cxx11::list<middle, std::allocator<middle> >&, int*) [325]
                0.00    0.00    1145/4998        containsMiddle(std::__cxx11::list<middle, std::allocator<middle> >&, int, int) [255]
                0.00    0.00    3390/4998        getNextQuestion(std::__cxx11::list<middle, std::allocator<middle> >&, int*) [313]
[152]    0.0    0.00    0.00    4998         std::_List_iterator<middle>::operator!=(std::_List_iterator<middle> const&) const [152]
-----------------------------------------------
                0.00    0.00    4867/4867        std::__cxx11::list<edge, std::allocator<edge> >::erase(std::_List_const_iterator<edge>) [156]
[153]    0.0    0.00    0.00    4867         std::_List_const_iterator<edge>::_M_const_cast() const [153]
                0.00    0.00    4867/170044      std::_List_iterator<edge>::_List_iterator(std::__detail::_List_node_base*) [27]
-----------------------------------------------
                0.00    0.00     132/4867        findEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int*, int) [311]
                0.00    0.00     143/4867        sortOutImpossibleEdges(int*, std::__cxx11::list<edge, std::allocator<edge> >&, int*, int*) [297]
                0.00    0.00    4592/4867        fillEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [4]
[154]    0.0    0.00    0.00    4867         std::_List_const_iterator<edge>::_List_const_iterator(std::_List_iterator<edge> const&) [154]
-----------------------------------------------
                0.00    0.00    4867/4867        std::__cxx11::list<edge, std::allocator<edge> >::_M_erase(std::_List_iterator<edge>) [157]
[155]    0.0    0.00    0.00    4867         std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_dec_size(unsigned long) [155]
                0.00    0.00    4867/102311      std::_List_node<unsigned long>::_M_valptr() [37]
-----------------------------------------------
                0.00    0.00     132/4867        findEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int*, int) [311]
                0.00    0.00     143/4867        sortOutImpossibleEdges(int*, std::__cxx11::list<edge, std::allocator<edge> >&, int*, int*) [297]
                0.00    0.00    4592/4867        fillEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [4]
[156]    0.0    0.00    0.00    4867         std::__cxx11::list<edge, std::allocator<edge> >::erase(std::_List_const_iterator<edge>) [156]
                0.00    0.00    4867/170044      std::_List_iterator<edge>::_List_iterator(std::__detail::_List_node_base*) [27]
                0.00    0.00    4867/4867        std::_List_const_iterator<edge>::_M_const_cast() const [153]
                0.00    0.00    4867/4867        std::__cxx11::list<edge, std::allocator<edge> >::_M_erase(std::_List_iterator<edge>) [157]
-----------------------------------------------
                0.00    0.00    4867/4867        std::__cxx11::list<edge, std::allocator<edge> >::erase(std::_List_const_iterator<edge>) [156]
[157]    0.0    0.00    0.00    4867         std::__cxx11::list<edge, std::allocator<edge> >::_M_erase(std::_List_iterator<edge>) [157]
                0.00    0.00    4867/4867        std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_dec_size(unsigned long) [155]
                0.00    0.00    4867/456088      std::_List_node<edge>::_M_valptr() [24]
                0.00    0.00    4867/27481       std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_get_Node_allocator() [55]
                0.00    0.00    4867/13734       void std::allocator_traits<std::allocator<std::_List_node<edge> > >::destroy<edge>(std::allocator<std::_List_node<edge> >&, edge*) [136]
                0.00    0.00    4867/13734       std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_put_node(std::_List_node<edge>*) [137]
-----------------------------------------------
                0.00    0.00    4592/4592        void std::advance<std::_List_iterator<edge>, int>(std::_List_iterator<edge>&, int) [159]
[158]    0.0    0.00    0.00    4592         std::iterator_traits<std::_List_iterator<edge> >::iterator_category std::__iterator_category<std::_List_iterator<edge> >(std::_List_iterator<edge> const&) [158]
-----------------------------------------------
                0.00    0.00    4592/4592        fillEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [4]
[159]    0.0    0.00    0.00    4592         void std::advance<std::_List_iterator<edge>, int>(std::_List_iterator<edge>&, int) [159]
                0.00    0.00    4592/4592        std::iterator_traits<std::_List_iterator<edge> >::iterator_category std::__iterator_category<std::_List_iterator<edge> >(std::_List_iterator<edge> const&) [158]
                0.00    0.00    4592/4592        void std::__advance<std::_List_iterator<edge>, long>(std::_List_iterator<edge>&, long, std::bidirectional_iterator_tag) [160]
-----------------------------------------------
                0.00    0.00    4592/4592        void std::advance<std::_List_iterator<edge>, int>(std::_List_iterator<edge>&, int) [159]
[160]    0.0    0.00    0.00    4592         void std::__advance<std::_List_iterator<edge>, long>(std::_List_iterator<edge>&, long, std::bidirectional_iterator_tag) [160]
                0.00    0.00   26244/26244       std::_List_iterator<edge>::operator++() [56]
-----------------------------------------------
                0.00    0.00    4584/4584        std::__cxx11::list<corner, std::allocator<corner> >::size() const [162]
[161]    0.0    0.00    0.00    4584         std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_node_count() const [161]
                0.00    0.00    4584/41606       std::_List_node<unsigned long>::_M_valptr() const [49]
-----------------------------------------------
                0.00    0.00      24/4584        planAction(int, std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*, int*) [7]
                0.00    0.00     168/4584        failsafe(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [305]
                0.00    0.00     205/4584        sortOutImpossibleCorners(int*, std::__cxx11::list<corner, std::allocator<corner> >&, int*, int*) [12]
                0.00    0.00     553/4584        findCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int*, int) [8]
                0.00    0.00    1184/4584        fillCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [5]
                0.00    0.00    2450/4584        SortCornerList(std::__cxx11::list<corner, std::allocator<corner> >*, int*, int) [246]
[162]    0.0    0.00    0.00    4584         std::__cxx11::list<corner, std::allocator<corner> >::size() const [162]
                0.00    0.00    4584/4584        std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_node_count() const [161]
-----------------------------------------------
                0.00    0.00      58/4460        sortOutImpossibleCodes(int*, std::__cxx11::list<middle, std::allocator<middle> >&, int*) [315]
                0.00    0.00     300/4460        eliminateFound(std::__cxx11::list<middle, std::allocator<middle> >&, int*) [325]
                0.00    0.00    1012/4460        containsMiddle(std::__cxx11::list<middle, std::allocator<middle> >&, int, int) [255]
                0.00    0.00    3090/4460        getNextQuestion(std::__cxx11::list<middle, std::allocator<middle> >&, int*) [313]
[163]    0.0    0.00    0.00    4460         std::_List_iterator<middle>::operator++(int) [163]
-----------------------------------------------
                0.00    0.00      30/3795        fi(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [316]
                0.00    0.00      69/3795        li(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [300]
                0.00    0.00     100/3795        b(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [292]
                0.00    0.00     141/3795        bi(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [288]
                0.00    0.00     201/3795        ri(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [284]
                0.00    0.00     210/3795        r(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [283]
                0.00    0.00     296/3795        f(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [254]
                0.00    0.00     336/3795        l(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [240]
                0.00    0.00     362/3795        di(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [252]
                0.00    0.00     424/3795        ui(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [234]
                0.00    0.00     774/3795        u(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [227]
                0.00    0.00     852/3795        d(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [225]
[164]    0.0    0.00    0.00    3795         last[abi:cxx11]() [164]
-----------------------------------------------
                0.00    0.00      30/3795        fi(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [316]
                0.00    0.00      69/3795        li(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [300]
                0.00    0.00     100/3795        b(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [292]
                0.00    0.00     141/3795        bi(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [288]
                0.00    0.00     201/3795        ri(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [284]
                0.00    0.00     210/3795        r(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [283]
                0.00    0.00     296/3795        f(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [254]
                0.00    0.00     336/3795        l(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [240]
                0.00    0.00     362/3795        di(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [252]
                0.00    0.00     424/3795        ui(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [234]
                0.00    0.00     774/3795        u(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [227]
                0.00    0.00     852/3795        d(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [225]
[165]    0.0    0.00    0.00    3795         bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [165]
-----------------------------------------------
                0.00    0.00    2970/2970        printCubeColor(int (*) [3][3]) [287]
[166]    0.0    0.00    0.00    2970         printColor[abi:cxx11](int) [166]
                0.00    0.00    2970/2970        std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [169]
                0.00    0.00    2970/2970        std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [168]
-----------------------------------------------
                0.00    0.00    2970/2970        std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [168]
[167]    0.0    0.00    0.00    2970         std::remove_reference<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>::type&& std::move<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) [167]
-----------------------------------------------
                0.00    0.00    2970/2970        printColor[abi:cxx11](int) [166]
[168]    0.0    0.00    0.00    2970         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [168]
                0.00    0.00    2970/2970        std::remove_reference<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>::type&& std::move<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) [167]
-----------------------------------------------
                0.00    0.00    2970/2970        printColor[abi:cxx11](int) [166]
[169]    0.0    0.00    0.00    2970         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [169]
-----------------------------------------------
                0.00    0.00    2874/2874        int* std::__copy_move_backward_a2<true, int*, int*>(int*, int*, int*) [217]
[170]    0.0    0.00    0.00    2874         int* std::__niter_base<int*>(int*) [170]
-----------------------------------------------
                0.00    0.00    2368/2368        void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter) [207]
[171]    0.0    0.00    0.00    2368         bool __gnu_cxx::__ops::_Iter_less_iter::operator()<int*, int*>(int*, int*) const [171]
-----------------------------------------------
                0.00    0.00    1948/1948        std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_init() [173]
[172]    0.0    0.00    0.00    1948         std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_set_size(unsigned long) [172]
                0.00    0.00    1948/102311      std::_List_node<unsigned long>::_M_valptr() [37]
-----------------------------------------------
                0.00    0.00      12/1948        std::__cxx11::list<edge, std::allocator<edge> >::clear() [309]
                0.00    0.00    1936/1948        std::__cxx11::_List_base<edge, std::allocator<edge> >::_List_base() [178]
[173]    0.0    0.00    0.00    1948         std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_init() [173]
                0.00    0.00    1948/1948        std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_set_size(unsigned long) [172]
-----------------------------------------------
                0.00    0.00    1936/1936        std::allocator<std::_List_node<edge> >::allocator() [175]
[174]    0.0    0.00    0.00    1936         __gnu_cxx::new_allocator<std::_List_node<edge> >::new_allocator() [174]
-----------------------------------------------
                0.00    0.00    1936/1936        std::__cxx11::_List_base<edge, std::allocator<edge> >::_List_impl::_List_impl() [176]
[175]    0.0    0.00    0.00    1936         std::allocator<std::_List_node<edge> >::allocator() [175]
                0.00    0.00    1936/1936        __gnu_cxx::new_allocator<std::_List_node<edge> >::new_allocator() [174]
-----------------------------------------------
                0.00    0.00    1936/1936        std::__cxx11::_List_base<edge, std::allocator<edge> >::_List_base() [178]
[176]    0.0    0.00    0.00    1936         std::__cxx11::_List_base<edge, std::allocator<edge> >::_List_impl::_List_impl() [176]
                0.00    0.00    1936/1936        std::allocator<std::_List_node<edge> >::allocator() [175]
-----------------------------------------------
                0.00    0.00      12/1936        std::__cxx11::list<edge, std::allocator<edge> >::clear() [309]
                0.00    0.00    1924/1936        std::__cxx11::_List_base<edge, std::allocator<edge> >::~_List_base() [183]
[177]    0.0    0.00    0.00    1936         std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_clear() [177]
                0.00    0.00    8867/456088      std::_List_node<edge>::_M_valptr() [24]
                0.00    0.00    8867/27481       std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_get_Node_allocator() [55]
                0.00    0.00    8867/13734       void std::allocator_traits<std::allocator<std::_List_node<edge> > >::destroy<edge>(std::allocator<std::_List_node<edge> >&, edge*) [136]
                0.00    0.00    8867/13734       std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_put_node(std::_List_node<edge>*) [137]
-----------------------------------------------
                0.00    0.00    1936/1936        std::__cxx11::list<edge, std::allocator<edge> >::list() [179]
[178]    0.0    0.00    0.00    1936         std::__cxx11::_List_base<edge, std::allocator<edge> >::_List_base() [178]
                0.00    0.00    1936/1936        std::__cxx11::_List_base<edge, std::allocator<edge> >::_List_impl::_List_impl() [176]
                0.00    0.00    1936/1948        std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_init() [173]
-----------------------------------------------
                0.00    0.00      12/1936        main [1]
                0.00    0.00     148/1936        fillEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [4]
                0.00    0.00    1776/1936        fillrandomcube(int*, int*, std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int (*) [3][3]) [2]
[179]    0.0    0.00    0.00    1936         std::__cxx11::list<edge, std::allocator<edge> >::list() [179]
                0.00    0.00    1936/1936        std::__cxx11::_List_base<edge, std::allocator<edge> >::_List_base() [178]
-----------------------------------------------
                0.00    0.00    1924/1924        std::allocator<std::_List_node<edge> >::~allocator() [181]
[180]    0.0    0.00    0.00    1924         __gnu_cxx::new_allocator<std::_List_node<edge> >::~new_allocator() [180]
-----------------------------------------------
                0.00    0.00    1924/1924        std::__cxx11::_List_base<edge, std::allocator<edge> >::_List_impl::~_List_impl() [182]
[181]    0.0    0.00    0.00    1924         std::allocator<std::_List_node<edge> >::~allocator() [181]
                0.00    0.00    1924/1924        __gnu_cxx::new_allocator<std::_List_node<edge> >::~new_allocator() [180]
-----------------------------------------------
                0.00    0.00    1924/1924        std::__cxx11::_List_base<edge, std::allocator<edge> >::~_List_base() [183]
[182]    0.0    0.00    0.00    1924         std::__cxx11::_List_base<edge, std::allocator<edge> >::_List_impl::~_List_impl() [182]
                0.00    0.00    1924/1924        std::allocator<std::_List_node<edge> >::~allocator() [181]
-----------------------------------------------
                0.00    0.00    1924/1924        std::__cxx11::list<edge, std::allocator<edge> >::~list() [184]
[183]    0.0    0.00    0.00    1924         std::__cxx11::_List_base<edge, std::allocator<edge> >::~_List_base() [183]
                0.00    0.00    1924/1936        std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_clear() [177]
                0.00    0.00    1924/1924        std::__cxx11::_List_base<edge, std::allocator<edge> >::_List_impl::~_List_impl() [182]
-----------------------------------------------
                0.00    0.00     148/1924        fillEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [4]
                0.00    0.00    1776/1924        fillrandomcube(int*, int*, std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int (*) [3][3]) [2]
[184]    0.0    0.00    0.00    1924         std::__cxx11::list<edge, std::allocator<edge> >::~list() [184]
                0.00    0.00    1924/1924        std::__cxx11::_List_base<edge, std::allocator<edge> >::~_List_base() [183]
-----------------------------------------------
                0.00    0.00    1916/1916        int* std::move_backward<int*, int*>(int*, int*, int*) [215]
[185]    0.0    0.00    0.00    1916         int* std::__miter_base<int*>(int*) [185]
-----------------------------------------------
                0.00    0.00    1787/1787        void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_less_iter>(int*, __gnu_cxx::__ops::_Val_less_iter) [190]
[186]    0.0    0.00    0.00    1787         bool __gnu_cxx::__ops::_Val_less_iter::operator()<int, int*>(int&, int*) const [186]
-----------------------------------------------
                0.00    0.00     353/1673        sortOutImpossibleEdges(int*, std::__cxx11::list<edge, std::allocator<edge> >&, int*, int*) [297]
                0.00    0.00    1320/1673        findEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int*, int) [311]
[187]    0.0    0.00    0.00    1673         std::_List_iterator<edge>::operator==(std::_List_iterator<edge> const&) const [187]
-----------------------------------------------
                0.00    0.00    1456/1456        d(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [225]
[188]    0.0    0.00    0.00    1456         dRotate(int (*) [3][3]) [188]
                0.00    0.00    1456/6320        copyCube(int (*) [3][3]) [148]
-----------------------------------------------
                0.00    0.00    1410/1410        void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter) [207]
[189]    0.0    0.00    0.00    1410         __gnu_cxx::__ops::__val_comp_iter(__gnu_cxx::__ops::_Iter_less_iter) [189]
-----------------------------------------------
                0.00    0.00    1410/1410        void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter) [207]
[190]    0.0    0.00    0.00    1410         void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_less_iter>(int*, __gnu_cxx::__ops::_Val_less_iter) [190]
                0.00    0.00    3197/5113        std::remove_reference<int&>::type&& std::move<int&>(int&) [151]
                0.00    0.00    1787/1787        bool __gnu_cxx::__ops::_Val_less_iter::operator()<int, int*>(int&, int*) const [186]
-----------------------------------------------
                0.00    0.00    1348/1348        std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_init() [192]
[191]    0.0    0.00    0.00    1348         std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_set_size(unsigned long) [191]
                0.00    0.00    1348/102311      std::_List_node<unsigned long>::_M_valptr() [37]
-----------------------------------------------
                0.00    0.00       8/1348        std::__cxx11::list<corner, std::allocator<corner> >::clear() [319]
                0.00    0.00    1340/1348        std::__cxx11::_List_base<corner, std::allocator<corner> >::_List_base() [197]
[192]    0.0    0.00    0.00    1348         std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_init() [192]
                0.00    0.00    1348/1348        std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_set_size(unsigned long) [191]
-----------------------------------------------
                0.00    0.00    1340/1340        std::allocator<std::_List_node<corner> >::allocator() [194]
[193]    0.0    0.00    0.00    1340         __gnu_cxx::new_allocator<std::_List_node<corner> >::new_allocator() [193]
-----------------------------------------------
                0.00    0.00    1340/1340        std::__cxx11::_List_base<corner, std::allocator<corner> >::_List_impl::_List_impl() [195]
[194]    0.0    0.00    0.00    1340         std::allocator<std::_List_node<corner> >::allocator() [194]
                0.00    0.00    1340/1340        __gnu_cxx::new_allocator<std::_List_node<corner> >::new_allocator() [193]
-----------------------------------------------
                0.00    0.00    1340/1340        std::__cxx11::_List_base<corner, std::allocator<corner> >::_List_base() [197]
[195]    0.0    0.00    0.00    1340         std::__cxx11::_List_base<corner, std::allocator<corner> >::_List_impl::_List_impl() [195]
                0.00    0.00    1340/1340        std::allocator<std::_List_node<corner> >::allocator() [194]
-----------------------------------------------
                0.00    0.00       8/1340        std::__cxx11::list<corner, std::allocator<corner> >::clear() [319]
                0.00    0.00    1332/1340        std::__cxx11::_List_base<corner, std::allocator<corner> >::~_List_base() [202]
[196]    0.0    0.00    0.00    1340         std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_clear() [196]
                0.00    0.00   14931/672697      std::_List_node<corner>::_M_valptr() [21]
                0.00    0.00   14931/51146       std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_get_Node_allocator() [42]
                0.00    0.00   14931/25568       void std::allocator_traits<std::allocator<std::_List_node<corner> > >::destroy<corner>(std::allocator<std::_List_node<corner> >&, corner*) [74]
                0.00    0.00   14931/25568       std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_put_node(std::_List_node<corner>*) [75]
-----------------------------------------------
                0.00    0.00    1340/1340        std::__cxx11::list<corner, std::allocator<corner> >::list() [198]
[197]    0.0    0.00    0.00    1340         std::__cxx11::_List_base<corner, std::allocator<corner> >::_List_base() [197]
                0.00    0.00    1340/1340        std::__cxx11::_List_base<corner, std::allocator<corner> >::_List_impl::_List_impl() [195]
                0.00    0.00    1340/1348        std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_init() [192]
-----------------------------------------------
                0.00    0.00       8/1340        main [1]
                0.00    0.00     148/1340        fillCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [5]
                0.00    0.00    1184/1340        fillrandomcube(int*, int*, std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int (*) [3][3]) [2]
[198]    0.0    0.00    0.00    1340         std::__cxx11::list<corner, std::allocator<corner> >::list() [198]
                0.00    0.00    1340/1340        std::__cxx11::_List_base<corner, std::allocator<corner> >::_List_base() [197]
-----------------------------------------------
                0.00    0.00    1332/1332        std::allocator<std::_List_node<corner> >::~allocator() [200]
[199]    0.0    0.00    0.00    1332         __gnu_cxx::new_allocator<std::_List_node<corner> >::~new_allocator() [199]
-----------------------------------------------
                0.00    0.00    1332/1332        std::__cxx11::_List_base<corner, std::allocator<corner> >::_List_impl::~_List_impl() [201]
[200]    0.0    0.00    0.00    1332         std::allocator<std::_List_node<corner> >::~allocator() [200]
                0.00    0.00    1332/1332        __gnu_cxx::new_allocator<std::_List_node<corner> >::~new_allocator() [199]
-----------------------------------------------
                0.00    0.00    1332/1332        std::__cxx11::_List_base<corner, std::allocator<corner> >::~_List_base() [202]
[201]    0.0    0.00    0.00    1332         std::__cxx11::_List_base<corner, std::allocator<corner> >::_List_impl::~_List_impl() [201]
                0.00    0.00    1332/1332        std::allocator<std::_List_node<corner> >::~allocator() [200]
-----------------------------------------------
                0.00    0.00    1332/1332        std::__cxx11::list<corner, std::allocator<corner> >::~list() [203]
[202]    0.0    0.00    0.00    1332         std::__cxx11::_List_base<corner, std::allocator<corner> >::~_List_base() [202]
                0.00    0.00    1332/1332        std::__cxx11::_List_base<corner, std::allocator<corner> >::_List_impl::~_List_impl() [201]
                0.00    0.00    1332/1340        std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_clear() [196]
-----------------------------------------------
                0.00    0.00     148/1332        fillCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [5]
                0.00    0.00    1184/1332        fillrandomcube(int*, int*, std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int (*) [3][3]) [2]
[203]    0.0    0.00    0.00    1332         std::__cxx11::list<corner, std::allocator<corner> >::~list() [203]
                0.00    0.00    1332/1332        std::__cxx11::_List_base<corner, std::allocator<corner> >::~_List_base() [202]
-----------------------------------------------
                0.00    0.00    1311/1311        askTwo(int*, int*, int*, int*) [285]
[204]    0.0    0.00    0.00    1311         QuestionCube::accessData(int, int, int, int) [204]
-----------------------------------------------
                0.00    0.00    1284/1284        u(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [227]
[205]    0.0    0.00    0.00    1284         uRotate(int (*) [3][3]) [205]
                0.00    0.00    1284/6320        copyCube(int (*) [3][3]) [148]
-----------------------------------------------
                0.00    0.00    1184/1184        void std::sort<int*>(int*, int*) [211]
[206]    0.0    0.00    0.00    1184         __gnu_cxx::__ops::__iter_less_iter() [206]
-----------------------------------------------
                0.00    0.00    1184/1184        void std::__final_insertion_sort<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter) [209]
[207]    0.0    0.00    0.00    1184         void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter) [207]
                0.00    0.00    2368/2368        bool __gnu_cxx::__ops::_Iter_less_iter::operator()<int*, int*>(int*, int*) const [171]
                0.00    0.00    1916/5113        std::remove_reference<int&>::type&& std::move<int&>(int&) [151]
                0.00    0.00    1410/1410        __gnu_cxx::__ops::__val_comp_iter(__gnu_cxx::__ops::_Iter_less_iter) [189]
                0.00    0.00    1410/1410        void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_less_iter>(int*, __gnu_cxx::__ops::_Val_less_iter) [190]
                0.00    0.00     958/958         int* std::move_backward<int*, int*>(int*, int*, int*) [215]
-----------------------------------------------
                0.00    0.00    1184/1184        void std::__sort<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter) [212]
[208]    0.0    0.00    0.00    1184         void std::__introsort_loop<int*, long, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, long, __gnu_cxx::__ops::_Iter_less_iter) [208]
-----------------------------------------------
                0.00    0.00    1184/1184        void std::__sort<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter) [212]
[209]    0.0    0.00    0.00    1184         void std::__final_insertion_sort<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter) [209]
                0.00    0.00    1184/1184        void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter) [207]
-----------------------------------------------
                0.00    0.00    1184/1184        void std::__sort<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter) [212]
[210]    0.0    0.00    0.00    1184         std::__lg(long) [210]
-----------------------------------------------
                0.00    0.00    1184/1184        permutationparitytestCorners(int (*) [3][3]) [250]
[211]    0.0    0.00    0.00    1184         void std::sort<int*>(int*, int*) [211]
                0.00    0.00    1184/1184        __gnu_cxx::__ops::__iter_less_iter() [206]
                0.00    0.00    1184/1184        void std::__sort<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter) [212]
-----------------------------------------------
                0.00    0.00    1184/1184        void std::sort<int*>(int*, int*) [211]
[212]    0.0    0.00    0.00    1184         void std::__sort<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter) [212]
                0.00    0.00    1184/1184        std::__lg(long) [210]
                0.00    0.00    1184/1184        void std::__introsort_loop<int*, long, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, long, __gnu_cxx::__ops::_Iter_less_iter) [208]
                0.00    0.00    1184/1184        void std::__final_insertion_sort<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter) [209]
-----------------------------------------------
                0.00    0.00     206/1008        sortOutImpossibleCodes(int*, std::__cxx11::list<middle, std::allocator<middle> >&, int*) [315]
                0.00    0.00     396/1008        sortOutImpossibleEdges(int*, std::__cxx11::list<edge, std::allocator<edge> >&, int*, int*) [297]
                0.00    0.00     406/1008        sortOutImpossibleCorners(int*, std::__cxx11::list<corner, std::allocator<corner> >&, int*, int*) [12]
[213]    0.0    0.00    0.00    1008         sortAnswer(int*) [213]
-----------------------------------------------
                0.00    0.00     958/958         int* std::__copy_move_backward_a<true, int*, int*>(int*, int*, int*) [216]
[214]    0.0    0.00    0.00     958         int* std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<int>(int const*, int const*, int*) [214]
-----------------------------------------------
                0.00    0.00     958/958         void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter) [207]
[215]    0.0    0.00    0.00     958         int* std::move_backward<int*, int*>(int*, int*, int*) [215]
                0.00    0.00    1916/1916        int* std::__miter_base<int*>(int*) [185]
                0.00    0.00     958/958         int* std::__copy_move_backward_a2<true, int*, int*>(int*, int*, int*) [217]
-----------------------------------------------
                0.00    0.00     958/958         int* std::__copy_move_backward_a2<true, int*, int*>(int*, int*, int*) [217]
[216]    0.0    0.00    0.00     958         int* std::__copy_move_backward_a<true, int*, int*>(int*, int*, int*) [216]
                0.00    0.00     958/958         int* std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<int>(int const*, int const*, int*) [214]
-----------------------------------------------
                0.00    0.00     958/958         int* std::move_backward<int*, int*>(int*, int*, int*) [215]
[217]    0.0    0.00    0.00     958         int* std::__copy_move_backward_a2<true, int*, int*>(int*, int*, int*) [217]
                0.00    0.00    2874/2874        int* std::__niter_base<int*>(int*) [170]
                0.00    0.00     958/958         int* std::__copy_move_backward_a<true, int*, int*>(int*, int*, int*) [216]
-----------------------------------------------
                0.00    0.00     309/880         sortOutImpossibleCorners(int*, std::__cxx11::list<corner, std::allocator<corner> >&, int*, int*) [12]
                0.00    0.00     571/880         findCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int*, int) [8]
[218]    0.0    0.00    0.00     880         std::_List_iterator<corner>::operator==(std::_List_iterator<corner> const&) const [218]
-----------------------------------------------
                0.00    0.00     788/788         ui(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [234]
[219]    0.0    0.00    0.00     788         uiRotate(int (*) [3][3]) [219]
                0.00    0.00     788/6320        copyCube(int (*) [3][3]) [148]
-----------------------------------------------
                0.00    0.00     624/624         l(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [240]
[220]    0.0    0.00    0.00     624         lRotate(int (*) [3][3]) [220]
                0.00    0.00     624/6320        copyCube(int (*) [3][3]) [148]
-----------------------------------------------
                0.00    0.00     580/580         di(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [252]
[221]    0.0    0.00    0.00     580         diRotate(int (*) [3][3]) [221]
                0.00    0.00     580/6320        copyCube(int (*) [3][3]) [148]
-----------------------------------------------
                0.00    0.00     568/568         f(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [254]
[222]    0.0    0.00    0.00     568         fRotate(int (*) [3][3]) [222]
                0.00    0.00     568/6320        copyCube(int (*) [3][3]) [148]
-----------------------------------------------
                0.00    0.00       3/561         r(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [283]
                0.00    0.00       4/561         b(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [292]
                0.00    0.00      48/561         di(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [252]
                0.00    0.00      65/561         f(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [254]
                0.00    0.00      66/561         l(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [240]
                0.00    0.00     100/561         ui(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [234]
                0.00    0.00     120/561         u(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [227]
                0.00    0.00     155/561         d(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [225]
[223]    0.0    0.00    0.00     561         removeLast() [223]
-----------------------------------------------
                0.00    0.00       6/476         findMiddle(int*) [333]
                0.00    0.00      10/476         sortOutImpossibleCodes(int*, std::__cxx11::list<middle, std::allocator<middle> >&, int*) [315]
                0.00    0.00      17/476         eliminateFound(std::__cxx11::list<middle, std::allocator<middle> >&, int*) [325]
                0.00    0.00     133/476         containsMiddle(std::__cxx11::list<middle, std::allocator<middle> >&, int, int) [255]
                0.00    0.00     310/476         getNextQuestion(std::__cxx11::list<middle, std::allocator<middle> >&, int*) [313]
[224]    0.0    0.00    0.00     476         std::__cxx11::list<middle, std::allocator<middle> >::begin() [224]
                0.00    0.00     476/5831        std::_List_iterator<middle>::_List_iterator(std::__detail::_List_node_base*) [149]
-----------------------------------------------
                0.00    0.00       2/364         swapCorners(int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [334]
                0.00    0.00       2/364         twoCornerRotate(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [329]
                0.00    0.00       3/364         placeMiddleEdge(int, int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [322]
                0.00    0.00       4/364         rotateEdges(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [327]
                0.00    0.00       5/364         positionBottomCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [342]
                0.00    0.00      12/364         middleAlgorithm(int, int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [321]
                0.00    0.00      33/364         solveTopCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [314]
                0.00    0.00      45/364         moveTopEdges(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [303]
                0.00    0.00      50/364         moveTopCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [312]
                0.00    0.00     208/364         solveTopCross(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [304]
[225]    0.0    0.00    0.00     364         d(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [225]
                0.00    0.00    1456/1456        dRotate(int (*) [3][3]) [188]
                0.00    0.00     852/3795        last[abi:cxx11]() [164]
                0.00    0.00     852/3795        bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [165]
                0.00    0.00     155/561         removeLast() [223]
-----------------------------------------------
                0.00    0.00      90/360         void std::__cxx11::list<middle, std::allocator<middle> >::_M_insert<middle const&>(std::_List_iterator<middle>, middle const&) [273]
                0.00    0.00      90/360         std::_List_node<middle>* std::__cxx11::list<middle, std::allocator<middle> >::_M_create_node<middle const&>(middle const&) [272]
                0.00    0.00      90/360         void std::allocator_traits<std::allocator<std::_List_node<middle> > >::construct<middle, middle const&>(std::allocator<std::_List_node<middle> >&, middle*, middle const&) [268]
                0.00    0.00      90/360         void __gnu_cxx::new_allocator<std::_List_node<middle> >::construct<middle, middle const&>(middle*, middle const&) [260]
[226]    0.0    0.00    0.00     360         middle const& std::forward<middle const&>(std::remove_reference<middle const&>::type&) [226]
-----------------------------------------------
                0.00    0.00       4/321         twoCornerRotate(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [329]
                0.00    0.00      40/321         moveTopCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [312]
                0.00    0.00      60/321         solveTopCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [314]
                0.00    0.00      84/321         moveTopEdges(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [303]
                0.00    0.00     133/321         solveTopCross(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [304]
[227]    0.0    0.00    0.00     321         u(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [227]
                0.00    0.00    1284/1284        uRotate(int (*) [3][3]) [205]
                0.00    0.00     774/3795        last[abi:cxx11]() [164]
                0.00    0.00     774/3795        bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [165]
                0.00    0.00     120/561         removeLast() [223]
-----------------------------------------------
                0.00    0.00     316/316         getNextEdgeQuestion(std::__cxx11::list<edge, std::allocator<edge> >&, int*, int*) [296]
[228]    0.0    0.00    0.00     316         containsEdge(std::__cxx11::list<edge, std::allocator<edge> >&, int, int) [228]
                0.00    0.00    2192/428607      std::_List_iterator<edge>::operator->() const [25]
                0.00    0.00    2060/132818      std::__cxx11::list<edge, std::allocator<edge> >::end() [29]
                0.00    0.00    2060/117398      std::_List_iterator<edge>::operator!=(std::_List_iterator<edge> const&) const [30]
                0.00    0.00    1744/106530      std::_List_iterator<edge>::operator++(int) [33]
                0.00    0.00     316/27492       std::__cxx11::list<edge, std::allocator<edge> >::begin() [54]
-----------------------------------------------
                0.00    0.00     148/296         permutationparitytestCorners(int (*) [3][3]) [250]
                0.00    0.00     148/296         cornerparitytest(int (*) [3][3]) [249]
[229]    0.0    0.00    0.00     296         getCorners(int (*) [3], int (*) [3][3]) [229]
-----------------------------------------------
                0.00    0.00     148/296         permutationparitytestCorners(int (*) [3][3]) [250]
                0.00    0.00     148/296         edgepartitytest(int (*) [3][3]) [247]
[230]    0.0    0.00    0.00     296         getEdges(int (*) [2], int (*) [3][3]) [230]
-----------------------------------------------
                0.00    0.00     288/288         r(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [283]
[231]    0.0    0.00    0.00     288         rRotate(int (*) [3][3]) [231]
                0.00    0.00     288/6320        copyCube(int (*) [3][3]) [148]
-----------------------------------------------
                0.00    0.00     268/268         ri(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [284]
[232]    0.0    0.00    0.00     268         riRotate(int (*) [3][3]) [232]
                0.00    0.00     268/6320        copyCube(int (*) [3][3]) [148]
-----------------------------------------------
                0.00    0.00      34/205         sendmoves() [295]
                0.00    0.00     171/205         askTwo(int*, int*, int*, int*) [285]
[233]    0.0    0.00    0.00     205         doTheClient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [233]
-----------------------------------------------
                0.00    0.00       4/197         twoCornerRotate(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [329]
                0.00    0.00      60/197         solveTopCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [314]
                0.00    0.00     133/197         solveTopCross(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [304]
[234]    0.0    0.00    0.00     197         ui(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [234]
                0.00    0.00     788/788         uiRotate(int (*) [3][3]) [219]
                0.00    0.00     424/3795        last[abi:cxx11]() [164]
                0.00    0.00     424/3795        bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [165]
                0.00    0.00     100/561         removeLast() [223]
-----------------------------------------------
                0.00    0.00     188/188         bi(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [288]
[235]    0.0    0.00    0.00     188         biRotate(int (*) [3][3]) [235]
                0.00    0.00     188/6320        copyCube(int (*) [3][3]) [148]
-----------------------------------------------
                0.00    0.00       1/180         std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_clear() [353]
                0.00    0.00      89/180         std::__cxx11::list<middle, std::allocator<middle> >::_M_erase(std::_List_iterator<middle>) [281]
                0.00    0.00      90/180         std::_List_node<middle>* std::__cxx11::list<middle, std::allocator<middle> >::_M_create_node<middle const&>(middle const&) [272]
[236]    0.0    0.00    0.00     180         std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_get_Node_allocator() [236]
-----------------------------------------------
                0.00    0.00     171/171         askTwo(int*, int*, int*, int*) [285]
[237]    0.0    0.00    0.00     171         changeColor(int) [237]
-----------------------------------------------
                0.00    0.00     171/171         askTwo(int*, int*, int*, int*) [285]
[238]    0.0    0.00    0.00     171         answerConverter(int*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [238]
-----------------------------------------------
                0.00    0.00     171/171         askTwo(int*, int*, int*, int*) [285]
[239]    0.0    0.00    0.00     171         QuestionCube::makeQuestion[abi:cxx11]() [239]
-----------------------------------------------
                0.00    0.00       1/156         rotateEdges(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [327]
                0.00    0.00       2/156         middleAlgorithm(int, int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [321]
                0.00    0.00     153/156         solveTopCross(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [304]
[240]    0.0    0.00    0.00     156         l(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [240]
                0.00    0.00     624/624         lRotate(int (*) [3][3]) [220]
                0.00    0.00     336/3795        last[abi:cxx11]() [164]
                0.00    0.00     336/3795        bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [165]
                0.00    0.00      66/561         removeLast() [223]
-----------------------------------------------
                0.00    0.00     148/148         fillrandomcube(int*, int*, std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int (*) [3][3]) [2]
[241]    0.0    0.00    0.00     148         fillCenter(int*, int*) [241]
-----------------------------------------------
                0.00    0.00     148/148         fillCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [5]
[242]    0.0    0.00    0.00     148         setCorners(int (*) [3], int (*) [3][3], int (*) [3][3], int (*) [3][3]) [242]
-----------------------------------------------
                0.00    0.00     148/148         fillrandomcube(int*, int*, std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int (*) [3][3]) [2]
[243]    0.0    0.00    0.00     148         CopyListEdges(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<edge, std::allocator<edge> >*) [243]
                0.00    0.00   23366/428607      std::_List_iterator<edge>::operator->() const [25]
                0.00    0.00   13459/132818      std::__cxx11::list<edge, std::allocator<edge> >::end() [29]
                0.00    0.00   13459/117398      std::_List_iterator<edge>::operator!=(std::_List_iterator<edge> const&) const [30]
                0.00    0.00   11683/13747       std::__cxx11::list<edge, std::allocator<edge> >::push_back(edge const&) [131]
                0.00    0.00   11683/106530      std::_List_iterator<edge>::operator++(int) [33]
                0.00    0.00    1776/27492       std::__cxx11::list<edge, std::allocator<edge> >::begin() [54]
-----------------------------------------------
                0.00    0.00     148/148         fillrandomcube(int*, int*, std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int (*) [3][3]) [2]
[244]    0.0    0.00    0.00     148         SortEdgesList(std::__cxx11::list<edge, std::allocator<edge> >*, int*, int) [244]
                0.00    0.00    4532/8043        std::__cxx11::list<edge, std::allocator<edge> >::size() const [147]
-----------------------------------------------
                0.00    0.00     148/148         permutationparitytestCorners(int (*) [3][3]) [250]
[245]    0.0    0.00    0.00     148         PlaceToBeEdges(int (*) [2], int (*) [3][3]) [245]
-----------------------------------------------
                0.00    0.00     148/148         fillrandomcube(int*, int*, std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int (*) [3][3]) [2]
[246]    0.0    0.00    0.00     148         SortCornerList(std::__cxx11::list<corner, std::allocator<corner> >*, int*, int) [246]
                0.00    0.00    2450/4584        std::__cxx11::list<corner, std::allocator<corner> >::size() const [162]
-----------------------------------------------
                0.00    0.00     148/148         checksolvability(int (*) [3][3]) [248]
[247]    0.0    0.00    0.00     148         edgepartitytest(int (*) [3][3]) [247]
                0.00    0.00     148/296         getEdges(int (*) [2], int (*) [3][3]) [230]
-----------------------------------------------
                0.00    0.00     148/148         fillrandomcube(int*, int*, std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int (*) [3][3]) [2]
[248]    0.0    0.00    0.00     148         checksolvability(int (*) [3][3]) [248]
                0.00    0.00     148/148         edgepartitytest(int (*) [3][3]) [247]
                0.00    0.00     148/148         cornerparitytest(int (*) [3][3]) [249]
                0.00    0.00     148/148         permutationparitytestCorners(int (*) [3][3]) [250]
-----------------------------------------------
                0.00    0.00     148/148         checksolvability(int (*) [3][3]) [248]
[249]    0.0    0.00    0.00     148         cornerparitytest(int (*) [3][3]) [249]
                0.00    0.00     148/296         getCorners(int (*) [3], int (*) [3][3]) [229]
-----------------------------------------------
                0.00    0.00     148/148         checksolvability(int (*) [3][3]) [248]
[250]    0.0    0.00    0.00     148         permutationparitytestCorners(int (*) [3][3]) [250]
                0.00    0.00    1184/1184        void std::sort<int*>(int*, int*) [211]
                0.00    0.00     148/296         getCorners(int (*) [3], int (*) [3][3]) [229]
                0.00    0.00     148/148         PlaceToBeEdges(int (*) [2], int (*) [3][3]) [245]
                0.00    0.00     148/296         getEdges(int (*) [2], int (*) [3][3]) [230]
-----------------------------------------------
                0.00    0.00     148/148         fillEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [4]
[251]    0.0    0.00    0.00     148         setEdges(int (*) [2], int (*) [3][3], int (*) [3][3], int (*) [3][3]) [251]
-----------------------------------------------
                0.00    0.00       1/145         placeMiddleEdge(int, int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [322]
                0.00    0.00       2/145         twoCornerRotate(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [329]
                0.00    0.00       3/145         swapCorners(int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [334]
                0.00    0.00       8/145         solveTopCross(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [304]
                0.00    0.00      12/145         middleAlgorithm(int, int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [321]
                0.00    0.00     119/145         solveTopCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [314]
[252]    0.0    0.00    0.00     145         di(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [252]
                0.00    0.00     580/580         diRotate(int (*) [3][3]) [221]
                0.00    0.00     362/3795        last[abi:cxx11]() [164]
                0.00    0.00     362/3795        bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [165]
                0.00    0.00      48/561         removeLast() [223]
-----------------------------------------------
                0.00    0.00     144/144         b(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [292]
[253]    0.0    0.00    0.00     144         bRotate(int (*) [3][3]) [253]
                0.00    0.00     144/6320        copyCube(int (*) [3][3]) [148]
-----------------------------------------------
                0.00    0.00       1/142         swapCorners(int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [334]
                0.00    0.00       1/142         rotateEdges(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [327]
                0.00    0.00       3/142         middleAlgorithm(int, int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [321]
                0.00    0.00       4/142         twoCornerRotate(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [329]
                0.00    0.00       9/142         solveTopCross(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [304]
                0.00    0.00     124/142         moveTopEdges(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [303]
[254]    0.0    0.00    0.00     142         f(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [254]
                0.00    0.00     568/568         fRotate(int (*) [3][3]) [222]
                0.00    0.00     296/3795        last[abi:cxx11]() [164]
                0.00    0.00     296/3795        bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [165]
                0.00    0.00      65/561         removeLast() [223]
-----------------------------------------------
                0.00    0.00     133/133         getNextQuestion(std::__cxx11::list<middle, std::allocator<middle> >&, int*) [313]
[255]    0.0    0.00    0.00     133         containsMiddle(std::__cxx11::list<middle, std::allocator<middle> >&, int, int) [255]
                0.00    0.00    1323/14354       std::_List_iterator<middle>::operator->() const [105]
                0.00    0.00    1145/5177        std::__cxx11::list<middle, std::allocator<middle> >::end() [150]
                0.00    0.00    1145/4998        std::_List_iterator<middle>::operator!=(std::_List_iterator<middle> const&) const [152]
                0.00    0.00    1012/4460        std::_List_iterator<middle>::operator++(int) [163]
                0.00    0.00     133/476         std::__cxx11::list<middle, std::allocator<middle> >::begin() [224]
-----------------------------------------------
                0.00    0.00      92/92          li(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [300]
[256]    0.0    0.00    0.00      92         liRotate(int (*) [3][3]) [256]
                0.00    0.00      92/6320        copyCube(int (*) [3][3]) [148]
-----------------------------------------------
                0.00    0.00      90/90          std::allocator_traits<std::allocator<std::_List_node<middle> > >::deallocate(std::allocator<std::_List_node<middle> >&, std::_List_node<middle>*, unsigned long) [265]
[257]    0.0    0.00    0.00      90         __gnu_cxx::new_allocator<std::_List_node<middle> >::deallocate(std::_List_node<middle>*, unsigned long) [257]
-----------------------------------------------
                0.00    0.00      90/90          void std::allocator_traits<std::allocator<std::_List_node<middle> > >::destroy<middle>(std::allocator<std::_List_node<middle> >&, middle*) [266]
[258]    0.0    0.00    0.00      90         void __gnu_cxx::new_allocator<std::_List_node<middle> >::destroy<middle>(middle*) [258]
-----------------------------------------------
                0.00    0.00      90/90          std::allocator_traits<std::allocator<std::_List_node<middle> > >::allocate(std::allocator<std::_List_node<middle> >&, unsigned long) [267]
[259]    0.0    0.00    0.00      90         __gnu_cxx::new_allocator<std::_List_node<middle> >::allocate(unsigned long, void const*) [259]
                0.00    0.00      90/90          __gnu_cxx::new_allocator<std::_List_node<middle> >::max_size() const [261]
-----------------------------------------------
                0.00    0.00      90/90          void std::allocator_traits<std::allocator<std::_List_node<middle> > >::construct<middle, middle const&>(std::allocator<std::_List_node<middle> >&, middle*, middle const&) [268]
[260]    0.0    0.00    0.00      90         void __gnu_cxx::new_allocator<std::_List_node<middle> >::construct<middle, middle const&>(middle*, middle const&) [260]
                0.00    0.00      90/360         middle const& std::forward<middle const&>(std::remove_reference<middle const&>::type&) [226]
                0.00    0.00      90/54462       operator new(unsigned long, void*) [41]
-----------------------------------------------
                0.00    0.00      90/90          __gnu_cxx::new_allocator<std::_List_node<middle> >::allocate(unsigned long, void const*) [259]
[261]    0.0    0.00    0.00      90         __gnu_cxx::new_allocator<std::_List_node<middle> >::max_size() const [261]
-----------------------------------------------
                0.00    0.00      90/90          std::_List_node<middle>* std::__cxx11::list<middle, std::allocator<middle> >::_M_create_node<middle const&>(middle const&) [272]
[262]    0.0    0.00    0.00      90         std::__allocated_ptr<std::allocator<std::_List_node<middle> > >::__allocated_ptr(std::allocator<std::_List_node<middle> >&, std::_List_node<middle>*) [262]
                0.00    0.00      90/90          std::allocator<std::_List_node<middle> >* std::__addressof<std::allocator<std::_List_node<middle> > >(std::allocator<std::_List_node<middle> >&) [275]
-----------------------------------------------
                0.00    0.00      90/90          std::_List_node<middle>* std::__cxx11::list<middle, std::allocator<middle> >::_M_create_node<middle const&>(middle const&) [272]
[263]    0.0    0.00    0.00      90         std::__allocated_ptr<std::allocator<std::_List_node<middle> > >::~__allocated_ptr() [263]
-----------------------------------------------
                0.00    0.00      90/90          std::_List_node<middle>* std::__cxx11::list<middle, std::allocator<middle> >::_M_create_node<middle const&>(middle const&) [272]
[264]    0.0    0.00    0.00      90         std::__allocated_ptr<std::allocator<std::_List_node<middle> > >::operator=(decltype(nullptr)) [264]
-----------------------------------------------
                0.00    0.00      90/90          std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_put_node(std::_List_node<middle>*) [271]
[265]    0.0    0.00    0.00      90         std::allocator_traits<std::allocator<std::_List_node<middle> > >::deallocate(std::allocator<std::_List_node<middle> >&, std::_List_node<middle>*, unsigned long) [265]
                0.00    0.00      90/90          __gnu_cxx::new_allocator<std::_List_node<middle> >::deallocate(std::_List_node<middle>*, unsigned long) [257]
-----------------------------------------------
                0.00    0.00       1/90          std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_clear() [353]
                0.00    0.00      89/90          std::__cxx11::list<middle, std::allocator<middle> >::_M_erase(std::_List_iterator<middle>) [281]
[266]    0.0    0.00    0.00      90         void std::allocator_traits<std::allocator<std::_List_node<middle> > >::destroy<middle>(std::allocator<std::_List_node<middle> >&, middle*) [266]
                0.00    0.00      90/90          void __gnu_cxx::new_allocator<std::_List_node<middle> >::destroy<middle>(middle*) [258]
-----------------------------------------------
                0.00    0.00      90/90          std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_get_node() [269]
[267]    0.0    0.00    0.00      90         std::allocator_traits<std::allocator<std::_List_node<middle> > >::allocate(std::allocator<std::_List_node<middle> >&, unsigned long) [267]
                0.00    0.00      90/90          __gnu_cxx::new_allocator<std::_List_node<middle> >::allocate(unsigned long, void const*) [259]
-----------------------------------------------
                0.00    0.00      90/90          std::_List_node<middle>* std::__cxx11::list<middle, std::allocator<middle> >::_M_create_node<middle const&>(middle const&) [272]
[268]    0.0    0.00    0.00      90         void std::allocator_traits<std::allocator<std::_List_node<middle> > >::construct<middle, middle const&>(std::allocator<std::_List_node<middle> >&, middle*, middle const&) [268]
                0.00    0.00      90/360         middle const& std::forward<middle const&>(std::remove_reference<middle const&>::type&) [226]
                0.00    0.00      90/90          void __gnu_cxx::new_allocator<std::_List_node<middle> >::construct<middle, middle const&>(middle*, middle const&) [260]
-----------------------------------------------
                0.00    0.00      90/90          std::_List_node<middle>* std::__cxx11::list<middle, std::allocator<middle> >::_M_create_node<middle const&>(middle const&) [272]
[269]    0.0    0.00    0.00      90         std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_get_node() [269]
                0.00    0.00      90/90          std::allocator_traits<std::allocator<std::_List_node<middle> > >::allocate(std::allocator<std::_List_node<middle> >&, unsigned long) [267]
-----------------------------------------------
                0.00    0.00      90/90          void std::__cxx11::list<middle, std::allocator<middle> >::_M_insert<middle const&>(std::_List_iterator<middle>, middle const&) [273]
[270]    0.0    0.00    0.00      90         std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_inc_size(unsigned long) [270]
                0.00    0.00      90/102311      std::_List_node<unsigned long>::_M_valptr() [37]
-----------------------------------------------
                0.00    0.00       1/90          std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_clear() [353]
                0.00    0.00      89/90          std::__cxx11::list<middle, std::allocator<middle> >::_M_erase(std::_List_iterator<middle>) [281]
[271]    0.0    0.00    0.00      90         std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_put_node(std::_List_node<middle>*) [271]
                0.00    0.00      90/90          std::allocator_traits<std::allocator<std::_List_node<middle> > >::deallocate(std::allocator<std::_List_node<middle> >&, std::_List_node<middle>*, unsigned long) [265]
-----------------------------------------------
                0.00    0.00      90/90          void std::__cxx11::list<middle, std::allocator<middle> >::_M_insert<middle const&>(std::_List_iterator<middle>, middle const&) [273]
[272]    0.0    0.00    0.00      90         std::_List_node<middle>* std::__cxx11::list<middle, std::allocator<middle> >::_M_create_node<middle const&>(middle const&) [272]
                0.00    0.00      90/90          std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_get_node() [269]
                0.00    0.00      90/180         std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_get_Node_allocator() [236]
                0.00    0.00      90/360         middle const& std::forward<middle const&>(std::remove_reference<middle const&>::type&) [226]
                0.00    0.00      90/90          std::__allocated_ptr<std::allocator<std::_List_node<middle> > >::__allocated_ptr(std::allocator<std::_List_node<middle> >&, std::_List_node<middle>*) [262]
                0.00    0.00      90/14534       std::_List_node<middle>::_M_valptr() [104]
                0.00    0.00      90/90          void std::allocator_traits<std::allocator<std::_List_node<middle> > >::construct<middle, middle const&>(std::allocator<std::_List_node<middle> >&, middle*, middle const&) [268]
                0.00    0.00      90/90          std::__allocated_ptr<std::allocator<std::_List_node<middle> > >::operator=(decltype(nullptr)) [264]
                0.00    0.00      90/90          std::__allocated_ptr<std::allocator<std::_List_node<middle> > >::~__allocated_ptr() [263]
-----------------------------------------------
                0.00    0.00      90/90          std::__cxx11::list<middle, std::allocator<middle> >::push_back(middle const&) [274]
[273]    0.0    0.00    0.00      90         void std::__cxx11::list<middle, std::allocator<middle> >::_M_insert<middle const&>(std::_List_iterator<middle>, middle const&) [273]
                0.00    0.00      90/360         middle const& std::forward<middle const&>(std::remove_reference<middle const&>::type&) [226]
                0.00    0.00      90/90          std::_List_node<middle>* std::__cxx11::list<middle, std::allocator<middle> >::_M_create_node<middle const&>(middle const&) [272]
                0.00    0.00      90/90          std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_inc_size(unsigned long) [270]
-----------------------------------------------
                0.00    0.00      90/90          buildCombOfTwo(std::__cxx11::list<middle, std::allocator<middle> >&) [324]
[274]    0.0    0.00    0.00      90         std::__cxx11::list<middle, std::allocator<middle> >::push_back(middle const&) [274]
                0.00    0.00      90/5177        std::__cxx11::list<middle, std::allocator<middle> >::end() [150]
                0.00    0.00      90/90          void std::__cxx11::list<middle, std::allocator<middle> >::_M_insert<middle const&>(std::_List_iterator<middle>, middle const&) [273]
-----------------------------------------------
                0.00    0.00      90/90          std::__allocated_ptr<std::allocator<std::_List_node<middle> > >::__allocated_ptr(std::allocator<std::_List_node<middle> >&, std::_List_node<middle>*) [262]
[275]    0.0    0.00    0.00      90         std::allocator<std::_List_node<middle> >* std::__addressof<std::allocator<std::_List_node<middle> > >(std::allocator<std::_List_node<middle> >&) [275]
-----------------------------------------------
                0.00    0.00      44/89          eliminateFound(std::__cxx11::list<middle, std::allocator<middle> >&, int*) [325]
                0.00    0.00      45/89          sortOutImpossibleCodes(int*, std::__cxx11::list<middle, std::allocator<middle> >&, int*) [315]
[276]    0.0    0.00    0.00      89         std::_List_iterator<middle>::operator==(std::_List_iterator<middle> const&) const [276]
-----------------------------------------------
                0.00    0.00      89/89          std::__cxx11::list<middle, std::allocator<middle> >::erase(std::_List_const_iterator<middle>) [280]
[277]    0.0    0.00    0.00      89         std::_List_const_iterator<middle>::_M_const_cast() const [277]
                0.00    0.00      89/5831        std::_List_iterator<middle>::_List_iterator(std::__detail::_List_node_base*) [149]
-----------------------------------------------
                0.00    0.00      44/89          eliminateFound(std::__cxx11::list<middle, std::allocator<middle> >&, int*) [325]
                0.00    0.00      45/89          sortOutImpossibleCodes(int*, std::__cxx11::list<middle, std::allocator<middle> >&, int*) [315]
[278]    0.0    0.00    0.00      89         std::_List_const_iterator<middle>::_List_const_iterator(std::_List_iterator<middle> const&) [278]
-----------------------------------------------
                0.00    0.00      89/89          std::__cxx11::list<middle, std::allocator<middle> >::_M_erase(std::_List_iterator<middle>) [281]
[279]    0.0    0.00    0.00      89         std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_dec_size(unsigned long) [279]
                0.00    0.00      89/102311      std::_List_node<unsigned long>::_M_valptr() [37]
-----------------------------------------------
                0.00    0.00      44/89          eliminateFound(std::__cxx11::list<middle, std::allocator<middle> >&, int*) [325]
                0.00    0.00      45/89          sortOutImpossibleCodes(int*, std::__cxx11::list<middle, std::allocator<middle> >&, int*) [315]
[280]    0.0    0.00    0.00      89         std::__cxx11::list<middle, std::allocator<middle> >::erase(std::_List_const_iterator<middle>) [280]
                0.00    0.00      89/89          std::_List_const_iterator<middle>::_M_const_cast() const [277]
                0.00    0.00      89/5831        std::_List_iterator<middle>::_List_iterator(std::__detail::_List_node_base*) [149]
                0.00    0.00      89/89          std::__cxx11::list<middle, std::allocator<middle> >::_M_erase(std::_List_iterator<middle>) [281]
-----------------------------------------------
                0.00    0.00      89/89          std::__cxx11::list<middle, std::allocator<middle> >::erase(std::_List_const_iterator<middle>) [280]
[281]    0.0    0.00    0.00      89         std::__cxx11::list<middle, std::allocator<middle> >::_M_erase(std::_List_iterator<middle>) [281]
                0.00    0.00      89/89          std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_dec_size(unsigned long) [279]
                0.00    0.00      89/14534       std::_List_node<middle>::_M_valptr() [104]
                0.00    0.00      89/180         std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_get_Node_allocator() [236]
                0.00    0.00      89/90          void std::allocator_traits<std::allocator<std::_List_node<middle> > >::destroy<middle>(std::allocator<std::_List_node<middle> >&, middle*) [266]
                0.00    0.00      89/90          std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_put_node(std::_List_node<middle>*) [271]
-----------------------------------------------
                0.00    0.00      84/84          solveTopCross(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [304]
[282]    0.0    0.00    0.00      84         findNextTopEdge(int&, int&) [282]
-----------------------------------------------
                0.00    0.00       4/72          middleAlgorithm(int, int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [321]
                0.00    0.00       4/72          twoCornerRotate(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [329]
                0.00    0.00       7/72          rotateEdges(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [327]
                0.00    0.00      25/72          solveTopCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [314]
                0.00    0.00      32/72          moveTopCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [312]
[283]    0.0    0.00    0.00      72         r(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [283]
                0.00    0.00     288/288         rRotate(int (*) [3][3]) [231]
                0.00    0.00     210/3795        last[abi:cxx11]() [164]
                0.00    0.00     210/3795        bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [165]
                0.00    0.00       3/561         removeLast() [223]
-----------------------------------------------
                0.00    0.00       1/67          solveTopCross(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [304]
                0.00    0.00       1/67          rotateEdges(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [327]
                0.00    0.00       4/67          middleAlgorithm(int, int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [321]
                0.00    0.00       4/67          twoCornerRotate(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [329]
                0.00    0.00      25/67          solveTopCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [314]
                0.00    0.00      32/67          moveTopCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [312]
[284]    0.0    0.00    0.00      67         ri(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [284]
                0.00    0.00     268/268         riRotate(int (*) [3][3]) [232]
                0.00    0.00     201/3795        last[abi:cxx11]() [164]
                0.00    0.00     201/3795        bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [165]
-----------------------------------------------
                0.00    0.00      10/57          findMiddle(int*) [333]
                0.00    0.00      23/57          findCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int*, int) [8]
                0.00    0.00      24/57          findEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int*, int) [311]
[285]    0.0    0.00    0.00      57         askTwo(int*, int*, int*, int*) [285]
                0.00    0.00    1311/1311        QuestionCube::accessData(int, int, int, int) [204]
                0.00    0.00     171/171         changeColor(int) [237]
                0.00    0.00     171/171         QuestionCube::makeQuestion[abi:cxx11]() [239]
                0.00    0.00     171/205         doTheClient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [233]
                0.00    0.00     171/171         answerConverter(int*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [238]
                0.00    0.00      57/57          QuestionCube::QuestionCube() [286]
-----------------------------------------------
                0.00    0.00      57/57          askTwo(int*, int*, int*, int*) [285]
[286]    0.0    0.00    0.00      57         QuestionCube::QuestionCube() [286]
-----------------------------------------------
                0.00    0.00       1/55          sendmoves() [295]
                0.00    0.00      54/55          main [1]
[287]    0.0    0.00    0.00      55         printCubeColor(int (*) [3][3]) [287]
                0.00    0.00    2970/2970        printColor[abi:cxx11](int) [166]
-----------------------------------------------
                0.00    0.00       1/47          swapCorners(int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [334]
                0.00    0.00       1/47          rotateEdges(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [327]
                0.00    0.00       3/47          middleAlgorithm(int, int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [321]
                0.00    0.00      19/47          solveTopCross(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [304]
                0.00    0.00      23/47          solveTopCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [314]
[288]    0.0    0.00    0.00      47         bi(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [288]
                0.00    0.00     188/188         biRotate(int (*) [3][3]) [235]
                0.00    0.00     141/3795        last[abi:cxx11]() [164]
                0.00    0.00     141/3795        bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [165]
-----------------------------------------------
                0.00    0.00      42/42          main [1]
[289]    0.0    0.00    0.00      42         print(int (*) [3][3]) [289]
-----------------------------------------------
                0.00    0.00      40/40          solveTopCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [314]
[290]    0.0    0.00    0.00      40         findNextTopCorner(int&, int&) [290]
-----------------------------------------------
                0.00    0.00      40/40          fi(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [316]
[291]    0.0    0.00    0.00      40         fiRotate(int (*) [3][3]) [291]
                0.00    0.00      40/6320        copyCube(int (*) [3][3]) [148]
-----------------------------------------------
                0.00    0.00       1/36          swapCorners(int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [334]
                0.00    0.00       2/36          solveTopCross(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [304]
                0.00    0.00       3/36          middleAlgorithm(int, int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [321]
                0.00    0.00       7/36          rotateEdges(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [327]
                0.00    0.00      23/36          solveTopCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [314]
[292]    0.0    0.00    0.00      36         b(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [292]
                0.00    0.00     144/144         bRotate(int (*) [3][3]) [253]
                0.00    0.00     100/3795        last[abi:cxx11]() [164]
                0.00    0.00     100/3795        bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [165]
                0.00    0.00       4/561         removeLast() [223]
-----------------------------------------------
                0.00    0.00       1/34          main [1]
                0.00    0.00      33/34          sendmoves() [295]
[293]    0.0    0.00    0.00      34         clearMoves() [293]
-----------------------------------------------
                0.00    0.00      34/34          sendmoves() [295]
[294]    0.0    0.00    0.00      34         translateMove() [294]
-----------------------------------------------
                0.00    0.00      34/34          main [1]
[295]    0.0    0.00    0.00      34         sendmoves() [295]
                0.00    0.00      34/34          translateMove() [294]
                0.00    0.00      34/205         doTheClient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [233]
                0.00    0.00      33/34          clearMoves() [293]
                0.00    0.00       1/55          printCubeColor(int (*) [3][3]) [287]
-----------------------------------------------
                0.00    0.00      24/24          findEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int*, int) [311]
[296]    0.0    0.00    0.00      24         getNextEdgeQuestion(std::__cxx11::list<edge, std::allocator<edge> >&, int*, int*) [296]
                0.00    0.00   56135/428607      std::_List_iterator<edge>::operator->() const [25]
                0.00    0.00    6930/132818      std::__cxx11::list<edge, std::allocator<edge> >::end() [29]
                0.00    0.00    6930/117398      std::_List_iterator<edge>::operator!=(std::_List_iterator<edge> const&) const [30]
                0.00    0.00    6210/106530      std::_List_iterator<edge>::operator++(int) [33]
                0.00    0.00     744/27492       std::__cxx11::list<edge, std::allocator<edge> >::begin() [54]
                0.00    0.00     316/316         containsEdge(std::__cxx11::list<edge, std::allocator<edge> >&, int, int) [228]
-----------------------------------------------
                0.00    0.00      24/24          findEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int*, int) [311]
[297]    0.0    0.00    0.00      24         sortOutImpossibleEdges(int*, std::__cxx11::list<edge, std::allocator<edge> >&, int*, int*) [297]
                0.00    0.00     904/428607      std::_List_iterator<edge>::operator->() const [25]
                0.00    0.00     396/1008        sortAnswer(int*) [213]
                0.00    0.00     353/132818      std::__cxx11::list<edge, std::allocator<edge> >::end() [29]
                0.00    0.00     353/1673        std::_List_iterator<edge>::operator==(std::_List_iterator<edge> const&) const [187]
                0.00    0.00     207/8043        std::__cxx11::list<edge, std::allocator<edge> >::size() const [147]
                0.00    0.00     143/4867        std::_List_const_iterator<edge>::_List_const_iterator(std::_List_iterator<edge> const&) [154]
                0.00    0.00     143/4867        std::__cxx11::list<edge, std::allocator<edge> >::erase(std::_List_const_iterator<edge>) [156]
                0.00    0.00      55/106530      std::_List_iterator<edge>::operator++(int) [33]
                0.00    0.00      24/27492       std::__cxx11::list<edge, std::allocator<edge> >::begin() [54]
                0.00    0.00      24/24          std::_List_iterator<edge>::_List_iterator() [298]
-----------------------------------------------
                0.00    0.00      24/24          sortOutImpossibleEdges(int*, std::__cxx11::list<edge, std::allocator<edge> >&, int*, int*) [297]
[298]    0.0    0.00    0.00      24         std::_List_iterator<edge>::_List_iterator() [298]
-----------------------------------------------
                0.00    0.00      23/23          solveMiddleLayer(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [330]
[299]    0.0    0.00    0.00      23         findBottomMatch(int) [299]
-----------------------------------------------
                0.00    0.00       1/23          rotateEdges(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [327]
                0.00    0.00       2/23          middleAlgorithm(int, int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [321]
                0.00    0.00      20/23          solveTopCross(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [304]
[300]    0.0    0.00    0.00      23         li(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [300]
                0.00    0.00      92/92          liRotate(int (*) [3][3]) [256]
                0.00    0.00      69/3795        last[abi:cxx11]() [164]
                0.00    0.00      69/3795        bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [165]
-----------------------------------------------
                0.00    0.00      23/23          sortOutImpossibleCorners(int*, std::__cxx11::list<corner, std::allocator<corner> >&, int*, int*) [12]
[301]    0.0    0.00    0.00      23         std::_List_iterator<corner>::_List_iterator() [301]
-----------------------------------------------
                0.00    0.00      21/21          main [1]
[302]    0.0    0.00    0.00      21         mapforsolver(int (*) [3][3]) [302]
-----------------------------------------------
                0.00    0.00      21/21          solveTopCross(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [304]
[303]    0.0    0.00    0.00      21         moveTopEdges(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [303]
                0.00    0.00     124/142         f(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [254]
                0.00    0.00      84/321         u(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [227]
                0.00    0.00      45/364         d(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [225]
-----------------------------------------------
                0.00    0.00      21/21          main [1]
[304]    0.0    0.00    0.00      21         solveTopCross(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [304]
                0.00    0.00     208/364         d(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [225]
                0.00    0.00     153/156         l(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [240]
                0.00    0.00     133/321         u(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [227]
                0.00    0.00     133/197         ui(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [234]
                0.00    0.00      84/84          findNextTopEdge(int&, int&) [282]
                0.00    0.00      21/21          moveTopEdges(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [303]
                0.00    0.00      20/23          li(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [300]
                0.00    0.00      19/47          bi(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [288]
                0.00    0.00       9/142         f(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [254]
                0.00    0.00       8/145         di(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [252]
                0.00    0.00       2/36          b(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [292]
                0.00    0.00       1/10          fi(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [316]
                0.00    0.00       1/67          ri(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [284]
-----------------------------------------------
                0.00    0.00      21/21          main [1]
[305]    0.0    0.00    0.00      21         failsafe(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [305]
                0.00    0.00     252/8043        std::__cxx11::list<edge, std::allocator<edge> >::size() const [147]
                0.00    0.00     168/4584        std::__cxx11::list<corner, std::allocator<corner> >::size() const [162]
-----------------------------------------------
                0.00    0.00      20/20          numCorrectCorners() [323]
[306]    0.0    0.00    0.00      20         getCorner(int, int*) [306]
-----------------------------------------------
                0.00    0.00      20/20          std::__cxx11::list<middle, std::allocator<middle> >::size() const [308]
[307]    0.0    0.00    0.00      20         std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_node_count() const [307]
                0.00    0.00      20/41606       std::_List_node<unsigned long>::_M_valptr() const [49]
-----------------------------------------------
                0.00    0.00      20/20          findMiddle(int*) [333]
[308]    0.0    0.00    0.00      20         std::__cxx11::list<middle, std::allocator<middle> >::size() const [308]
                0.00    0.00      20/20          std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_node_count() const [307]
-----------------------------------------------
                0.00    0.00      12/12          main [1]
[309]    0.0    0.00    0.00      12         std::__cxx11::list<edge, std::allocator<edge> >::clear() [309]
                0.00    0.00      12/1948        std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_init() [173]
                0.00    0.00      12/1936        std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_clear() [177]
-----------------------------------------------
                0.00    0.00      11/11          findEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int*, int) [311]
[310]    0.0    0.00    0.00      11         getEdgeInfo(int (*) [3], int) [310]
-----------------------------------------------
                0.00    0.00      11/11          planAction(int, std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*, int*) [7]
[311]    0.0    0.00    0.00      11         findEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int*, int) [311]
                0.00    0.00    5522/428607      std::_List_iterator<edge>::operator->() const [25]
                0.00    0.00    2904/27492       std::__cxx11::list<edge, std::allocator<edge> >::begin() [54]
                0.00    0.00    1320/132818      std::__cxx11::list<edge, std::allocator<edge> >::end() [29]
                0.00    0.00    1320/1673        std::_List_iterator<edge>::operator==(std::_List_iterator<edge> const&) const [187]
                0.00    0.00    1234/8043        std::__cxx11::list<edge, std::allocator<edge> >::size() const [147]
                0.00    0.00    1067/106530      std::_List_iterator<edge>::operator++(int) [33]
                0.00    0.00     132/4867        std::_List_const_iterator<edge>::_List_const_iterator(std::_List_iterator<edge> const&) [154]
                0.00    0.00     132/4867        std::__cxx11::list<edge, std::allocator<edge> >::erase(std::_List_const_iterator<edge>) [156]
                0.00    0.00      24/24          getNextEdgeQuestion(std::__cxx11::list<edge, std::allocator<edge> >&, int*, int*) [296]
                0.00    0.00      24/57          askTwo(int*, int*, int*, int*) [285]
                0.00    0.00      24/24          sortOutImpossibleEdges(int*, std::__cxx11::list<edge, std::allocator<edge> >&, int*, int*) [297]
                0.00    0.00      11/11          getEdgeInfo(int (*) [3], int) [310]
-----------------------------------------------
                0.00    0.00      10/10          solveTopCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [314]
[312]    0.0    0.00    0.00      10         moveTopCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [312]
                0.00    0.00      50/364         d(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [225]
                0.00    0.00      40/321         u(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [227]
                0.00    0.00      32/67          ri(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [284]
                0.00    0.00      32/72          r(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [283]
-----------------------------------------------
                0.00    0.00      10/10          findMiddle(int*) [333]
[313]    0.0    0.00    0.00      10         getNextQuestion(std::__cxx11::list<middle, std::allocator<middle> >&, int*) [313]
                0.00    0.00   12154/14354       std::_List_iterator<middle>::operator->() const [105]
                0.00    0.00    3390/5177        std::__cxx11::list<middle, std::allocator<middle> >::end() [150]
                0.00    0.00    3390/4998        std::_List_iterator<middle>::operator!=(std::_List_iterator<middle> const&) const [152]
                0.00    0.00    3090/4460        std::_List_iterator<middle>::operator++(int) [163]
                0.00    0.00     310/476         std::__cxx11::list<middle, std::allocator<middle> >::begin() [224]
                0.00    0.00     133/133         containsMiddle(std::__cxx11::list<middle, std::allocator<middle> >&, int, int) [255]
-----------------------------------------------
                0.00    0.00      10/10          main [1]
[314]    0.0    0.00    0.00      10         solveTopCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [314]
                0.00    0.00     119/145         di(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [252]
                0.00    0.00      60/321         u(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [227]
                0.00    0.00      60/197         ui(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [234]
                0.00    0.00      40/40          findNextTopCorner(int&, int&) [290]
                0.00    0.00      33/364         d(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [225]
                0.00    0.00      25/72          r(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [283]
                0.00    0.00      25/67          ri(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [284]
                0.00    0.00      23/47          bi(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [288]
                0.00    0.00      23/36          b(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [292]
                0.00    0.00      10/10          moveTopCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [312]
-----------------------------------------------
                0.00    0.00      10/10          findMiddle(int*) [333]
[315]    0.0    0.00    0.00      10         sortOutImpossibleCodes(int*, std::__cxx11::list<middle, std::allocator<middle> >&, int*) [315]
                0.00    0.00     206/14354       std::_List_iterator<middle>::operator->() const [105]
                0.00    0.00     206/1008        sortAnswer(int*) [213]
                0.00    0.00     150/5177        std::__cxx11::list<middle, std::allocator<middle> >::end() [150]
                0.00    0.00     105/4998        std::_List_iterator<middle>::operator!=(std::_List_iterator<middle> const&) const [152]
                0.00    0.00      58/4460        std::_List_iterator<middle>::operator++(int) [163]
                0.00    0.00      45/89          std::_List_const_iterator<middle>::_List_const_iterator(std::_List_iterator<middle> const&) [278]
                0.00    0.00      45/89          std::__cxx11::list<middle, std::allocator<middle> >::erase(std::_List_const_iterator<middle>) [280]
                0.00    0.00      45/89          std::_List_iterator<middle>::operator==(std::_List_iterator<middle> const&) const [276]
                0.00    0.00      10/476         std::__cxx11::list<middle, std::allocator<middle> >::begin() [224]
                0.00    0.00      10/10          std::_List_iterator<middle>::_List_iterator() [318]
-----------------------------------------------
                0.00    0.00       1/10          solveTopCross(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [304]
                0.00    0.00       1/10          swapCorners(int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [334]
                0.00    0.00       1/10          rotateEdges(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [327]
                0.00    0.00       3/10          middleAlgorithm(int, int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [321]
                0.00    0.00       4/10          twoCornerRotate(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [329]
[316]    0.0    0.00    0.00      10         fi(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [316]
                0.00    0.00      40/40          fiRotate(int (*) [3][3]) [291]
                0.00    0.00      30/3795        last[abi:cxx11]() [164]
                0.00    0.00      30/3795        bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [165]
-----------------------------------------------
                0.00    0.00      10/10          main [1]
[317]    0.0    0.00    0.00      10         checkface(int) [317]
-----------------------------------------------
                0.00    0.00      10/10          sortOutImpossibleCodes(int*, std::__cxx11::list<middle, std::allocator<middle> >&, int*) [315]
[318]    0.0    0.00    0.00      10         std::_List_iterator<middle>::_List_iterator() [318]
-----------------------------------------------
                0.00    0.00       8/8           main [1]
[319]    0.0    0.00    0.00       8         std::__cxx11::list<corner, std::allocator<corner> >::clear() [319]
                0.00    0.00       8/1340        std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_clear() [196]
                0.00    0.00       8/1348        std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_init() [192]
-----------------------------------------------
                0.00    0.00       7/7           findCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int*, int) [8]
[320]    0.0    0.00    0.00       7         getCornerInfo(int (*) [3], int) [320]
-----------------------------------------------
                0.00    0.00       6/6           placeMiddleEdge(int, int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [322]
[321]    0.0    0.00    0.00       6         middleAlgorithm(int, int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [321]
                0.00    0.00      12/364         d(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [225]
                0.00    0.00      12/145         di(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [252]
                0.00    0.00       4/67          ri(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [284]
                0.00    0.00       4/72          r(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [283]
                0.00    0.00       3/36          b(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [292]
                0.00    0.00       3/47          bi(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [288]
                0.00    0.00       3/10          fi(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [316]
                0.00    0.00       3/142         f(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [254]
                0.00    0.00       2/23          li(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [300]
                0.00    0.00       2/156         l(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [240]
-----------------------------------------------
                0.00    0.00       6/6           solveMiddleLayer(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [330]
[322]    0.0    0.00    0.00       6         placeMiddleEdge(int, int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [322]
                0.00    0.00       6/6           middleAlgorithm(int, int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [321]
                0.00    0.00       3/364         d(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [225]
                0.00    0.00       1/145         di(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [252]
-----------------------------------------------
                0.00    0.00       5/5           positionBottomCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [342]
[323]    0.0    0.00    0.00       5         numCorrectCorners() [323]
                0.00    0.00      20/20          getCorner(int, int*) [306]
-----------------------------------------------
                0.00    0.00       3/3           findMiddle(int*) [333]
[324]    0.0    0.00    0.00       3         buildCombOfTwo(std::__cxx11::list<middle, std::allocator<middle> >&) [324]
                0.00    0.00      90/90          std::__cxx11::list<middle, std::allocator<middle> >::push_back(middle const&) [274]
-----------------------------------------------
                0.00    0.00       3/3           findMiddle(int*) [333]
[325]    0.0    0.00    0.00       3         eliminateFound(std::__cxx11::list<middle, std::allocator<middle> >&, int*) [325]
                0.00    0.00     665/14354       std::_List_iterator<middle>::operator->() const [105]
                0.00    0.00     402/5177        std::__cxx11::list<middle, std::allocator<middle> >::end() [150]
                0.00    0.00     358/4998        std::_List_iterator<middle>::operator!=(std::_List_iterator<middle> const&) const [152]
                0.00    0.00     300/4460        std::_List_iterator<middle>::operator++(int) [163]
                0.00    0.00      44/89          std::_List_const_iterator<middle>::_List_const_iterator(std::_List_iterator<middle> const&) [278]
                0.00    0.00      44/89          std::__cxx11::list<middle, std::allocator<middle> >::erase(std::_List_const_iterator<middle>) [280]
                0.00    0.00      44/89          std::_List_iterator<middle>::operator==(std::_List_iterator<middle> const&) const [276]
                0.00    0.00      17/476         std::__cxx11::list<middle, std::allocator<middle> >::begin() [224]
-----------------------------------------------
                0.00    0.00       3/3           correctBottomCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [341]
[326]    0.0    0.00    0.00       3         cornerOrientation() [326]
-----------------------------------------------
                0.00    0.00       2/2           positionBottomEdges(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [340]
[327]    0.0    0.00    0.00       2         rotateEdges(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [327]
                0.00    0.00       7/72          r(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [283]
                0.00    0.00       7/36          b(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [292]
                0.00    0.00       4/364         d(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [225]
                0.00    0.00       1/10          fi(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [316]
                0.00    0.00       1/142         f(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [254]
                0.00    0.00       1/47          bi(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [288]
                0.00    0.00       1/67          ri(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [284]
                0.00    0.00       1/156         l(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [240]
                0.00    0.00       1/23          li(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [300]
-----------------------------------------------
                0.00    0.00       2/2           correctBottomCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [341]
[328]    0.0    0.00    0.00       2         findBestFace(int) [328]
-----------------------------------------------
                0.00    0.00       2/2           correctBottomCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [341]
[329]    0.0    0.00    0.00       2         twoCornerRotate(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [329]
                0.00    0.00       4/10          fi(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [316]
                0.00    0.00       4/321         u(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [227]
                0.00    0.00       4/142         f(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [254]
                0.00    0.00       4/72          r(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [283]
                0.00    0.00       4/67          ri(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [284]
                0.00    0.00       4/197         ui(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [234]
                0.00    0.00       2/364         d(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [225]
                0.00    0.00       2/145         di(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [252]
-----------------------------------------------
                0.00    0.00       2/2           main [1]
[330]    0.0    0.00    0.00       2         solveMiddleLayer(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [330]
                0.00    0.00      23/23          findBottomMatch(int) [299]
                0.00    0.00       6/6           placeMiddleEdge(int, int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [322]
-----------------------------------------------
                0.00    0.00       2/2           positionBottomEdges(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [340]
[331]    0.0    0.00    0.00       2         numEdgesInCorrectPos() [331]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [394]
[332]    0.0    0.00    0.00       1         _GLOBAL__sub_I__Z12DieWithErrorNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE [332]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [343]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[333]    0.0    0.00    0.00       1         findMiddle(int*) [333]
                0.00    0.00      20/20          std::__cxx11::list<middle, std::allocator<middle> >::size() const [308]
                0.00    0.00      10/10          getNextQuestion(std::__cxx11::list<middle, std::allocator<middle> >&, int*) [313]
                0.00    0.00      10/57          askTwo(int*, int*, int*, int*) [285]
                0.00    0.00      10/10          sortOutImpossibleCodes(int*, std::__cxx11::list<middle, std::allocator<middle> >&, int*) [315]
                0.00    0.00       6/476         std::__cxx11::list<middle, std::allocator<middle> >::begin() [224]
                0.00    0.00       6/14354       std::_List_iterator<middle>::operator->() const [105]
                0.00    0.00       3/3           buildCombOfTwo(std::__cxx11::list<middle, std::allocator<middle> >&) [324]
                0.00    0.00       3/3           eliminateFound(std::__cxx11::list<middle, std::allocator<middle> >&, int*) [325]
                0.00    0.00       1/1           std::__cxx11::list<middle, std::allocator<middle> >::list() [356]
                0.00    0.00       1/1           std::__cxx11::list<middle, std::allocator<middle> >::~list() [357]
-----------------------------------------------
                0.00    0.00       1/1           positionBottomCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [342]
[334]    0.0    0.00    0.00       1         swapCorners(int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [334]
                0.00    0.00       3/145         di(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [252]
                0.00    0.00       2/364         d(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [225]
                0.00    0.00       1/47          bi(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [288]
                0.00    0.00       1/142         f(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [254]
                0.00    0.00       1/36          b(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [292]
                0.00    0.00       1/10          fi(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [316]
-----------------------------------------------
                0.00    0.00       1/1           correctBottomEdges(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [339]
[335]    0.0    0.00    0.00       1         twoEdgeRotate(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [335]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[336]    0.0    0.00    0.00       1         buildCombOfEdge(std::__cxx11::list<edge, std::allocator<edge> >*, int*) [336]
                0.00    0.00     288/13747       std::__cxx11::list<edge, std::allocator<edge> >::push_back(edge const&) [131]
                0.00    0.00      12/27492       std::__cxx11::list<edge, std::allocator<edge> >::begin() [54]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[337]    0.0    0.00    0.00       1         solveBottomLayer(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [337]
                0.00    0.00       1/1           positionBottomCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [342]
                0.00    0.00       1/1           positionBottomEdges(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [340]
                0.00    0.00       1/1           correctBottomCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [341]
                0.00    0.00       1/1           correctBottomEdges(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [339]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[338]    0.0    0.00    0.00       1         buildCombOfCorner(std::__cxx11::list<corner, std::allocator<corner> >*, int*) [338]
                0.00    0.00     192/25578       std::__cxx11::list<corner, std::allocator<corner> >::push_back(corner const&) [69]
-----------------------------------------------
                0.00    0.00       1/1           solveBottomLayer(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [337]
[339]    0.0    0.00    0.00       1         correctBottomEdges(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [339]
                0.00    0.00       1/1           twoEdgeRotate(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [335]
-----------------------------------------------
                                   1             positionBottomEdges(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [340]
                0.00    0.00       1/1           solveBottomLayer(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [337]
[340]    0.0    0.00    0.00       1+1       positionBottomEdges(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [340]
                0.00    0.00       2/2           numEdgesInCorrectPos() [331]
                0.00    0.00       2/2           rotateEdges(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [327]
                                   1             positionBottomEdges(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [340]
-----------------------------------------------
                0.00    0.00       1/1           solveBottomLayer(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [337]
[341]    0.0    0.00    0.00       1         correctBottomCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [341]
                0.00    0.00       3/3           cornerOrientation() [326]
                0.00    0.00       2/2           findBestFace(int) [328]
                0.00    0.00       2/2           twoCornerRotate(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [329]
-----------------------------------------------
                                   1             positionBottomCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [342]
                0.00    0.00       1/1           solveBottomLayer(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [337]
[342]    0.0    0.00    0.00       1+1       positionBottomCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [342]
                0.00    0.00       5/5           numCorrectCorners() [323]
                0.00    0.00       5/364         d(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [225]
                0.00    0.00       1/1           swapCorners(int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [334]
                                   1             positionBottomCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [342]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z12DieWithErrorNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE [332]
[343]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [343]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[344]    0.0    0.00    0.00       1         cubesback() [344]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<std::_List_node<middle> >::allocator() [347]
[345]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::_List_node<middle> >::new_allocator() [345]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<std::_List_node<middle> >::~allocator() [348]
[346]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::_List_node<middle> >::~new_allocator() [346]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::_List_base<middle, std::allocator<middle> >::_List_impl::_List_impl() [349]
[347]    0.0    0.00    0.00       1         std::allocator<std::_List_node<middle> >::allocator() [347]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::_List_node<middle> >::new_allocator() [345]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::_List_base<middle, std::allocator<middle> >::_List_impl::~_List_impl() [350]
[348]    0.0    0.00    0.00       1         std::allocator<std::_List_node<middle> >::~allocator() [348]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::_List_node<middle> >::~new_allocator() [346]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::_List_base<middle, std::allocator<middle> >::_List_base() [354]
[349]    0.0    0.00    0.00       1         std::__cxx11::_List_base<middle, std::allocator<middle> >::_List_impl::_List_impl() [349]
                0.00    0.00       1/1           std::allocator<std::_List_node<middle> >::allocator() [347]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::_List_base<middle, std::allocator<middle> >::~_List_base() [355]
[350]    0.0    0.00    0.00       1         std::__cxx11::_List_base<middle, std::allocator<middle> >::_List_impl::~_List_impl() [350]
                0.00    0.00       1/1           std::allocator<std::_List_node<middle> >::~allocator() [348]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_init() [352]
[351]    0.0    0.00    0.00       1         std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_set_size(unsigned long) [351]
                0.00    0.00       1/102311      std::_List_node<unsigned long>::_M_valptr() [37]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::_List_base<middle, std::allocator<middle> >::_List_base() [354]
[352]    0.0    0.00    0.00       1         std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_init() [352]
                0.00    0.00       1/1           std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_set_size(unsigned long) [351]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::_List_base<middle, std::allocator<middle> >::~_List_base() [355]
[353]    0.0    0.00    0.00       1         std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_clear() [353]
                0.00    0.00       1/14534       std::_List_node<middle>::_M_valptr() [104]
                0.00    0.00       1/180         std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_get_Node_allocator() [236]
                0.00    0.00       1/90          void std::allocator_traits<std::allocator<std::_List_node<middle> > >::destroy<middle>(std::allocator<std::_List_node<middle> >&, middle*) [266]
                0.00    0.00       1/90          std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_put_node(std::_List_node<middle>*) [271]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::list<middle, std::allocator<middle> >::list() [356]
[354]    0.0    0.00    0.00       1         std::__cxx11::_List_base<middle, std::allocator<middle> >::_List_base() [354]
                0.00    0.00       1/1           std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_init() [352]
                0.00    0.00       1/1           std::__cxx11::_List_base<middle, std::allocator<middle> >::_List_impl::_List_impl() [349]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::list<middle, std::allocator<middle> >::~list() [357]
[355]    0.0    0.00    0.00       1         std::__cxx11::_List_base<middle, std::allocator<middle> >::~_List_base() [355]
                0.00    0.00       1/1           std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_clear() [353]
                0.00    0.00       1/1           std::__cxx11::_List_base<middle, std::allocator<middle> >::_List_impl::~_List_impl() [350]
-----------------------------------------------
                0.00    0.00       1/1           findMiddle(int*) [333]
[356]    0.0    0.00    0.00       1         std::__cxx11::list<middle, std::allocator<middle> >::list() [356]
                0.00    0.00       1/1           std::__cxx11::_List_base<middle, std::allocator<middle> >::_List_base() [354]
-----------------------------------------------
                0.00    0.00       1/1           findMiddle(int*) [333]
[357]    0.0    0.00    0.00       1         std::__cxx11::list<middle, std::allocator<middle> >::~list() [357]
                0.00    0.00       1/1           std::__cxx11::_List_base<middle, std::allocator<middle> >::~_List_base() [355]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2018 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

 [332] _GLOBAL__sub_I__Z12DieWithErrorNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE [58] void __gnu_cxx::new_allocator<std::_List_node<corner> >::construct<corner, corner const&>(corner*, corner const&) [155] std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_dec_size(unsigned long)
 [293] clearMoves()          [193] __gnu_cxx::new_allocator<std::_List_node<corner> >::new_allocator() [127] std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_get_node()
 [241] fillCenter(int*, int*) [199] __gnu_cxx::new_allocator<std::_List_node<corner> >::~new_allocator() [128] std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_inc_size(unsigned long)
 [333] findMiddle(int*)      [257] __gnu_cxx::new_allocator<std::_List_node<middle> >::deallocate(std::_List_node<middle>*, unsigned long) [137] std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_put_node(std::_List_node<edge>*)
 [229] getCorners(int (*) [3], int (*) [3][3]) [258] void __gnu_cxx::new_allocator<std::_List_node<middle> >::destroy<middle>(middle*) [172] std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_set_size(unsigned long)
   [7] planAction(int, std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*, int*) [259] __gnu_cxx::new_allocator<std::_List_node<middle> >::allocate(unsigned long, void const*) [55] std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_get_Node_allocator()
 [166] printColor[abi:cxx11](int) [260] void __gnu_cxx::new_allocator<std::_List_node<middle> >::construct<middle, middle const&>(middle*, middle const&) [173] std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_init()
 [223] removeLast()          [345] __gnu_cxx::new_allocator<std::_List_node<middle> >::new_allocator() [177] std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_clear()
 [242] setCorners(int (*) [3], int (*) [3][3], int (*) [3][3], int (*) [3][3]) [346] __gnu_cxx::new_allocator<std::_List_node<middle> >::~new_allocator() [178] std::__cxx11::_List_base<edge, std::allocator<edge> >::_List_base()
 [213] sortAnswer(int*)       [77] __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate(std::_List_node<int>*, unsigned long) [183] std::__cxx11::_List_base<edge, std::allocator<edge> >::~_List_base()
 [237] changeColor(int)       [78] void __gnu_cxx::new_allocator<std::_List_node<int> >::destroy<int>(int*) [195] std::__cxx11::_List_base<corner, std::allocator<corner> >::_List_impl::_List_impl()
 [233] doTheClient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [79] __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned long, void const*) [201] std::__cxx11::_List_base<corner, std::allocator<corner> >::_List_impl::~_List_impl()
   [5] fillCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [80] void __gnu_cxx::new_allocator<std::_List_node<int> >::construct<int, int const&>(int*, int const&) [140] std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_dec_size(unsigned long)
   [8] findCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int*, int) [106] __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator() [65] std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_get_node()
 [310] getEdgeInfo(int (*) [3], int) [107] __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator() [66] std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_inc_size(unsigned long)
 [327] rotateEdges(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [22] __gnu_cxx::__aligned_membuf<edge>::_M_ptr() [75] std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_put_node(std::_List_node<corner>*)
 [334] swapCorners(int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [23] __gnu_cxx::__aligned_membuf<edge>::_M_addr() [191] std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_set_size(unsigned long)
 [228] containsEdge(std::__cxx11::list<edge, std::allocator<edge> >&, int, int) [19] __gnu_cxx::__aligned_membuf<corner>::_M_ptr() [42] std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_get_Node_allocator()
 [328] findBestFace(int)      [20] __gnu_cxx::__aligned_membuf<corner>::_M_addr() [192] std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_init()
 [302] mapforsolver(int (*) [3][3]) [102] __gnu_cxx::__aligned_membuf<middle>::_M_ptr() [196] std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_clear()
 [303] moveTopEdges(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [103] __gnu_cxx::__aligned_membuf<middle>::_M_addr() [197] std::__cxx11::_List_base<corner, std::allocator<corner> >::_List_base()
 [243] CopyListEdges(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<edge, std::allocator<edge> >*) [43] __gnu_cxx::__aligned_membuf<int>::_M_ptr() [202] std::__cxx11::_List_base<corner, std::allocator<corner> >::~_List_base()
 [244] SortEdgesList(std::__cxx11::list<edge, std::allocator<edge> >*, int*, int) [44] __gnu_cxx::__aligned_membuf<int>::_M_addr() [349] std::__cxx11::_List_base<middle, std::allocator<middle> >::_List_impl::_List_impl()
 [320] getCornerInfo(int (*) [3], int) [35] __gnu_cxx::__aligned_membuf<unsigned long>::_M_ptr() [350] std::__cxx11::_List_base<middle, std::allocator<middle> >::_List_impl::~_List_impl()
 [304] solveTopCross(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [36] __gnu_cxx::__aligned_membuf<unsigned long>::_M_addr() [279] std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_dec_size(unsigned long)
 [294] translateMove()       [189] __gnu_cxx::__ops::__val_comp_iter(__gnu_cxx::__ops::_Iter_less_iter) [269] std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_get_node()
 [335] twoEdgeRotate(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [206] __gnu_cxx::__ops::__iter_less_iter() [270] std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_inc_size(unsigned long)
 [245] PlaceToBeEdges(int (*) [2], int (*) [3][3]) [121] __gnu_cxx::new_allocator<std::_List_node<edge> >::max_size() const [271] std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_put_node(std::_List_node<middle>*)
 [246] SortCornerList(std::__cxx11::list<corner, std::allocator<corner> >*, int*, int) [59] __gnu_cxx::new_allocator<std::_List_node<corner> >::max_size() const [351] std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_set_size(unsigned long)
 [324] buildCombOfTwo(std::__cxx11::list<middle, std::allocator<middle> >&) [261] __gnu_cxx::new_allocator<std::_List_node<middle> >::max_size() const [236] std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_get_Node_allocator()
  [11] containsCorner(std::__cxx11::list<corner, std::allocator<corner> >&, int, int) [81] __gnu_cxx::new_allocator<std::_List_node<int> >::max_size() const [352] std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_init()
 [255] containsMiddle(std::__cxx11::list<middle, std::allocator<middle> >&, int, int) [47] __gnu_cxx::__aligned_membuf<unsigned long>::_M_ptr() const [353] std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_clear()
 [325] eliminateFound(std::__cxx11::list<middle, std::allocator<middle> >&, int*) [48] __gnu_cxx::__aligned_membuf<unsigned long>::_M_addr() const [354] std::__cxx11::_List_base<middle, std::allocator<middle> >::_List_base()
   [2] fillrandomcube(int*, int*, std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int (*) [3][3]) [186] bool __gnu_cxx::__ops::_Val_less_iter::operator()<int, int*>(int&, int*) const [355] std::__cxx11::_List_base<middle, std::allocator<middle> >::~_List_base()
 [312] moveTopCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [171] bool __gnu_cxx::__ops::_Iter_less_iter::operator()<int*, int*>(int*, int*) const [110] std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl::_List_impl()
 [287] printCubeColor(int (*) [3][3]) [49] std::_List_node<unsigned long>::_M_valptr() const [111] std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl()
   [6] CopyListCorners(std::__cxx11::list<corner, std::allocator<corner> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [187] std::_List_iterator<edge>::operator==(std::_List_iterator<edge> const&) const [91] std::__cxx11::_List_base<int, std::allocator<int> >::_M_dec_size(unsigned long)
 [238] answerConverter(int*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [30] std::_List_iterator<edge>::operator!=(std::_List_iterator<edge> const&) const [92] std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_node()
 [336] buildCombOfEdge(std::__cxx11::list<edge, std::allocator<edge> >*, int*) [25] std::_List_iterator<edge>::operator->() const [93] std::__cxx11::_List_base<int, std::allocator<int> >::_M_inc_size(unsigned long)
 [247] edgepartitytest(int (*) [3][3]) [218] std::_List_iterator<corner>::operator==(std::_List_iterator<corner> const&) const [94] std::__cxx11::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*)
 [299] findBottomMatch(int)   [31] std::_List_iterator<corner>::operator!=(std::_List_iterator<corner> const&) const [112] std::__cxx11::_List_base<int, std::allocator<int> >::_M_set_size(unsigned long)
 [282] findNextTopEdge(int&, int&) [3] std::_List_iterator<corner>::operator->() const [50] std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_Node_allocator()
 [313] getNextQuestion(std::__cxx11::list<middle, std::allocator<middle> >&, int*) [276] std::_List_iterator<middle>::operator==(std::_List_iterator<middle> const&) const [113] std::__cxx11::_List_base<int, std::allocator<int> >::_M_init()
 [321] middleAlgorithm(int, int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [152] std::_List_iterator<middle>::operator!=(std::_List_iterator<middle> const&) const [114] std::__cxx11::_List_base<int, std::allocator<int> >::_M_clear()
 [322] placeMiddleEdge(int, int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [105] std::_List_iterator<middle>::operator->() const [115] std::__cxx11::_List_base<int, std::allocator<int> >::_List_base()
 [314] solveTopCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [82] std::_List_iterator<int>::operator*() const [116] std::__cxx11::_List_base<int, std::allocator<int> >::~_List_base()
 [329] twoCornerRotate(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [153] std::_List_const_iterator<edge>::_M_const_cast() const [129] std::_List_node<edge>* std::__cxx11::list<edge, std::allocator<edge> >::_M_create_node<edge const&>(edge const&)
 [248] checksolvability(int (*) [3][3]) [138] std::_List_const_iterator<corner>::_M_const_cast() const [29] std::__cxx11::list<edge, std::allocator<edge> >::end()
 [249] cornerparitytest(int (*) [3][3]) [277] std::_List_const_iterator<middle>::_M_const_cast() const [54] std::__cxx11::list<edge, std::allocator<edge> >::begin()
 [337] solveBottomLayer(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [146] std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_node_count() const [309] std::__cxx11::list<edge, std::allocator<edge> >::clear()
 [330] solveMiddleLayer(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [161] std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_node_count() const [156] std::__cxx11::list<edge, std::allocator<edge> >::erase(std::_List_const_iterator<edge>)
 [338] buildCombOfCorner(std::__cxx11::list<corner, std::allocator<corner> >*, int*) [307] std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_node_count() const [157] std::__cxx11::list<edge, std::allocator<edge> >::_M_erase(std::_List_iterator<edge>)
 [326] cornerOrientation()    [52] std::__cxx11::_List_base<int, std::allocator<int> >::_M_node_count() const [130] void std::__cxx11::list<edge, std::allocator<edge> >::_M_insert<edge const&>(std::_List_iterator<edge>, edge const&)
 [290] findNextTopCorner(int&, int&) [147] std::__cxx11::list<edge, std::allocator<edge> >::size() const [131] std::__cxx11::list<edge, std::allocator<edge> >::push_back(edge const&)
 [323] numCorrectCorners()   [162] std::__cxx11::list<corner, std::allocator<corner> >::size() const [179] std::__cxx11::list<edge, std::allocator<edge> >::list()
 [339] correctBottomEdges(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [308] std::__cxx11::list<middle, std::allocator<middle> >::size() const [184] std::__cxx11::list<edge, std::allocator<edge> >::~list()
 [296] getNextEdgeQuestion(std::__cxx11::list<edge, std::allocator<edge> >&, int*, int*) [53] std::__cxx11::list<int, std::allocator<int> >::size() const [67] std::_List_node<corner>* std::__cxx11::list<corner, std::allocator<corner> >::_M_create_node<corner const&>(corner const&)
 [340] positionBottomEdges(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [175] std::allocator<std::_List_node<edge> >::allocator() [28] std::__cxx11::list<corner, std::allocator<corner> >::end()
 [292] b(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [181] std::allocator<std::_List_node<edge> >::~allocator() [76] std::__cxx11::list<corner, std::allocator<corner> >::begin()
 [225] d(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [194] std::allocator<std::_List_node<corner> >::allocator() [319] std::__cxx11::list<corner, std::allocator<corner> >::clear()
 [254] f(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [200] std::allocator<std::_List_node<corner> >::~allocator() [141] std::__cxx11::list<corner, std::allocator<corner> >::erase(std::_List_const_iterator<corner>)
 [240] l(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [347] std::allocator<std::_List_node<middle> >::allocator() [142] std::__cxx11::list<corner, std::allocator<corner> >::_M_erase(std::_List_iterator<corner>)
 [283] r(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [348] std::allocator<std::_List_node<middle> >::~allocator() [68] void std::__cxx11::list<corner, std::allocator<corner> >::_M_insert<corner const&>(std::_List_iterator<corner>, corner const&)
 [227] u(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [108] std::allocator<std::_List_node<int> >::allocator() [69] std::__cxx11::list<corner, std::allocator<corner> >::push_back(corner const&)
 [341] correctBottomCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [109] std::allocator<std::_List_node<int> >::~allocator() [198] std::__cxx11::list<corner, std::allocator<corner> >::list()
 [331] numEdgesInCorrectPos() [24] std::_List_node<edge>::_M_valptr() [203] std::__cxx11::list<corner, std::allocator<corner> >::~list()
   [9] getNextCornerQuestion(std::__cxx11::list<corner, std::allocator<corner> >&, int*, int*) [21] std::_List_node<corner>::_M_valptr() [272] std::_List_node<middle>* std::__cxx11::list<middle, std::allocator<middle> >::_M_create_node<middle const&>(middle const&)
 [342] positionBottomCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [104] std::_List_node<middle>::_M_valptr() [150] std::__cxx11::list<middle, std::allocator<middle> >::end()
 [315] sortOutImpossibleCodes(int*, std::__cxx11::list<middle, std::allocator<middle> >&, int*) [45] std::_List_node<int>::_M_valptr() [224] std::__cxx11::list<middle, std::allocator<middle> >::begin()
 [297] sortOutImpossibleEdges(int*, std::__cxx11::list<edge, std::allocator<edge> >&, int*, int*) [37] std::_List_node<unsigned long>::_M_valptr() [280] std::__cxx11::list<middle, std::allocator<middle> >::erase(std::_List_const_iterator<middle>)
  [12] sortOutImpossibleCorners(int*, std::__cxx11::list<corner, std::allocator<corner> >&, int*, int*) [27] std::_List_iterator<edge>::_List_iterator(std::__detail::_List_node_base*) [281] std::__cxx11::list<middle, std::allocator<middle> >::_M_erase(std::_List_iterator<middle>)
 [250] permutationparitytestCorners(int (*) [3][3]) [298] std::_List_iterator<edge>::_List_iterator() [273] void std::__cxx11::list<middle, std::allocator<middle> >::_M_insert<middle const&>(std::_List_iterator<middle>, middle const&)
 [288] bi(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [33] std::_List_iterator<edge>::operator++(int) [274] std::__cxx11::list<middle, std::allocator<middle> >::push_back(middle const&)
 [252] di(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [56] std::_List_iterator<edge>::operator++() [356] std::__cxx11::list<middle, std::allocator<middle> >::list()
 [316] fi(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [26] std::_List_iterator<corner>::_List_iterator(std::__detail::_List_node_base*) [357] std::__cxx11::list<middle, std::allocator<middle> >::~list()
 [300] li(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [301] std::_List_iterator<corner>::_List_iterator() [95] std::_List_node<int>* std::__cxx11::list<int, std::allocator<int> >::_M_create_node<int const&>(int const&)
 [284] ri(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [32] std::_List_iterator<corner>::operator++(int) [51] std::__cxx11::list<int, std::allocator<int> >::end()
 [234] ui(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [38] std::_List_iterator<corner>::operator++() [96] std::__cxx11::list<int, std::allocator<int> >::back()
 [343] __static_initialization_and_destruction_0(int, int) [149] std::_List_iterator<middle>::_List_iterator(std::__detail::_List_node_base*) [97] std::__cxx11::list<int, std::allocator<int> >::_M_erase(std::_List_iterator<int>)
 [164] last[abi:cxx11]()     [318] std::_List_iterator<middle>::_List_iterator() [98] std::__cxx11::list<int, std::allocator<int> >::pop_back()
 [289] print(int (*) [3][3]) [163] std::_List_iterator<middle>::operator++(int) [99] void std::__cxx11::list<int, std::allocator<int> >::_M_insert<int const&>(std::_List_iterator<int>, int const&)
 [285] askTwo(int*, int*, int*, int*) [46] std::_List_iterator<int>::_List_iterator(std::__detail::_List_node_base*) [100] std::__cxx11::list<int, std::allocator<int> >::push_back(int const&)
 [253] bRotate(int (*) [3][3]) [83] std::_List_iterator<int>::operator--() [117] std::__cxx11::list<int, std::allocator<int> >::list()
 [188] dRotate(int (*) [3][3]) [122] std::__allocated_ptr<std::allocator<std::_List_node<edge> > >::__allocated_ptr(std::allocator<std::_List_node<edge> >&, std::_List_node<edge>*) [118] std::__cxx11::list<int, std::allocator<int> >::~list()
 [222] fRotate(int (*) [3][3]) [123] std::__allocated_ptr<std::allocator<std::_List_node<edge> > >::~__allocated_ptr() [132] std::allocator<std::_List_node<edge> >* std::__addressof<std::allocator<std::_List_node<edge> > >(std::allocator<std::_List_node<edge> >&)
 [220] lRotate(int (*) [3][3]) [124] std::__allocated_ptr<std::allocator<std::_List_node<edge> > >::operator=(decltype(nullptr)) [70] std::allocator<std::_List_node<corner> >* std::__addressof<std::allocator<std::_List_node<corner> > >(std::allocator<std::_List_node<corner> >&)
 [231] rRotate(int (*) [3][3]) [60] std::__allocated_ptr<std::allocator<std::_List_node<corner> > >::__allocated_ptr(std::allocator<std::_List_node<corner> >&, std::_List_node<corner>*) [275] std::allocator<std::_List_node<middle> >* std::__addressof<std::allocator<std::_List_node<middle> > >(std::allocator<std::_List_node<middle> >&)
 [205] uRotate(int (*) [3][3]) [61] std::__allocated_ptr<std::allocator<std::_List_node<corner> > >::~__allocated_ptr() [101] std::allocator<std::_List_node<int> >* std::__addressof<std::allocator<std::_List_node<int> > >(std::allocator<std::_List_node<int> >&)
 [235] biRotate(int (*) [3][3]) [62] std::__allocated_ptr<std::allocator<std::_List_node<corner> > >::operator=(decltype(nullptr)) [185] int* std::__miter_base<int*>(int*)
 [148] copyCube(int (*) [3][3]) [262] std::__allocated_ptr<std::allocator<std::_List_node<middle> > >::__allocated_ptr(std::allocator<std::_List_node<middle> >&, std::_List_node<middle>*) [170] int* std::__niter_base<int*>(int*)
 [221] diRotate(int (*) [3][3]) [263] std::__allocated_ptr<std::allocator<std::_List_node<middle> > >::~__allocated_ptr() [215] int* std::move_backward<int*, int*>(int*, int*, int*)
 [305] failsafe(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [264] std::__allocated_ptr<std::allocator<std::_List_node<middle> > >::operator=(decltype(nullptr)) [207] void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter)
 [291] fiRotate(int (*) [3][3]) [84] std::__allocated_ptr<std::allocator<std::_List_node<int> > >::__allocated_ptr(std::allocator<std::_List_node<int> >&, std::_List_node<int>*) [208] void std::__introsort_loop<int*, long, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, long, __gnu_cxx::__ops::_Iter_less_iter)
 [230] getEdges(int (*) [2], int (*) [3][3]) [85] std::__allocated_ptr<std::allocator<std::_List_node<int> > >::~__allocated_ptr() [158] std::iterator_traits<std::_List_iterator<edge> >::iterator_category std::__iterator_category<std::_List_iterator<edge> >(std::_List_iterator<edge> const&)
 [256] liRotate(int (*) [3][3]) [86] std::__allocated_ptr<std::allocator<std::_List_node<int> > >::operator=(decltype(nullptr)) [143] std::iterator_traits<std::_List_iterator<corner> >::iterator_category std::__iterator_category<std::_List_iterator<corner> >(std::_List_iterator<corner> const&)
 [232] riRotate(int (*) [3][3]) [135] std::allocator_traits<std::allocator<std::_List_node<edge> > >::deallocate(std::allocator<std::_List_node<edge> >&, std::_List_node<edge>*, unsigned long) [216] int* std::__copy_move_backward_a<true, int*, int*>(int*, int*, int*)
 [251] setEdges(int (*) [2], int (*) [3][3], int (*) [3][3], int (*) [3][3]) [136] void std::allocator_traits<std::allocator<std::_List_node<edge> > >::destroy<edge>(std::allocator<std::_List_node<edge> >&, edge*) [209] void std::__final_insertion_sort<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter)
 [219] uiRotate(int (*) [3][3]) [125] std::allocator_traits<std::allocator<std::_List_node<edge> > >::allocate(std::allocator<std::_List_node<edge> >&, unsigned long) [217] int* std::__copy_move_backward_a2<true, int*, int*>(int*, int*, int*)
 [317] checkface(int)        [126] void std::allocator_traits<std::allocator<std::_List_node<edge> > >::construct<edge, edge const&>(std::allocator<std::_List_node<edge> >&, edge*, edge const&) [190] void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_less_iter>(int*, __gnu_cxx::__ops::_Val_less_iter)
 [344] cubesback()            [73] std::allocator_traits<std::allocator<std::_List_node<corner> > >::deallocate(std::allocator<std::_List_node<corner> >&, std::_List_node<corner>*, unsigned long) [210] std::__lg(long)
   [4] fillEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [74] void std::allocator_traits<std::allocator<std::_List_node<corner> > >::destroy<corner>(std::allocator<std::_List_node<corner> >&, corner*) [167] std::remove_reference<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>::type&& std::move<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
 [311] findEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int*, int) [63] std::allocator_traits<std::allocator<std::_List_node<corner> > >::allocate(std::allocator<std::_List_node<corner> >&, unsigned long) [151] std::remove_reference<int&>::type&& std::move<int&>(int&)
 [306] getCorner(int, int*)   [64] void std::allocator_traits<std::allocator<std::_List_node<corner> > >::construct<corner, corner const&>(std::allocator<std::_List_node<corner> >&, corner*, corner const&) [211] void std::sort<int*>(int*, int*)
  [10] printlist(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [265] std::allocator_traits<std::allocator<std::_List_node<middle> > >::deallocate(std::allocator<std::_List_node<middle> >&, std::_List_node<middle>*, unsigned long) [212] void std::__sort<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter)
 [295] sendmoves()           [266] void std::allocator_traits<std::allocator<std::_List_node<middle> > >::destroy<middle>(std::allocator<std::_List_node<middle> >&, middle*) [159] void std::advance<std::_List_iterator<edge>, int>(std::_List_iterator<edge>&, int)
 [204] QuestionCube::accessData(int, int, int, int) [267] std::allocator_traits<std::allocator<std::_List_node<middle> > >::allocate(std::allocator<std::_List_node<middle> >&, unsigned long) [144] void std::advance<std::_List_iterator<corner>, int>(std::_List_iterator<corner>&, int)
 [239] QuestionCube::makeQuestion[abi:cxx11]() [268] void std::allocator_traits<std::allocator<std::_List_node<middle> > >::construct<middle, middle const&>(std::allocator<std::_List_node<middle> >&, middle*, middle const&) [40] edge const& std::forward<edge const&>(std::remove_reference<edge const&>::type&)
 [286] QuestionCube::QuestionCube() [87] std::allocator_traits<std::allocator<std::_List_node<int> > >::deallocate(std::allocator<std::_List_node<int> >&, std::_List_node<int>*, unsigned long) [34] corner const& std::forward<corner const&>(std::remove_reference<corner const&>::type&)
 [133] __gnu_cxx::new_allocator<std::_List_node<edge> >::deallocate(std::_List_node<edge>*, unsigned long) [88] void std::allocator_traits<std::allocator<std::_List_node<int> > >::destroy<int>(std::allocator<std::_List_node<int> >&, int*) [226] middle const& std::forward<middle const&>(std::remove_reference<middle const&>::type&)
 [134] void __gnu_cxx::new_allocator<std::_List_node<edge> >::destroy<edge>(edge*) [89] std::allocator_traits<std::allocator<std::_List_node<int> > >::allocate(std::allocator<std::_List_node<int> >&, unsigned long) [39] int const& std::forward<int const&>(std::remove_reference<int const&>::type&)
 [119] __gnu_cxx::new_allocator<std::_List_node<edge> >::allocate(unsigned long, void const*) [90] void std::allocator_traits<std::allocator<std::_List_node<int> > >::construct<int, int const&>(std::allocator<std::_List_node<int> >&, int*, int const&) [160] void std::__advance<std::_List_iterator<edge>, long>(std::_List_iterator<edge>&, long, std::bidirectional_iterator_tag)
 [120] void __gnu_cxx::new_allocator<std::_List_node<edge> >::construct<edge, edge const&>(edge*, edge const&) [154] std::_List_const_iterator<edge>::_List_const_iterator(std::_List_iterator<edge> const&) [145] void std::__advance<std::_List_iterator<corner>, long>(std::_List_iterator<corner>&, long, std::bidirectional_iterator_tag)
 [174] __gnu_cxx::new_allocator<std::_List_node<edge> >::new_allocator() [139] std::_List_const_iterator<corner>::_List_const_iterator(std::_List_iterator<corner> const&) [165] bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
 [180] __gnu_cxx::new_allocator<std::_List_node<edge> >::~new_allocator() [278] std::_List_const_iterator<middle>::_List_const_iterator(std::_List_iterator<middle> const&) [168] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  [71] __gnu_cxx::new_allocator<std::_List_node<corner> >::deallocate(std::_List_node<corner>*, unsigned long) [214] int* std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<int>(int const*, int const*, int*) [169] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
  [72] void __gnu_cxx::new_allocator<std::_List_node<corner> >::destroy<corner>(corner*) [176] std::__cxx11::_List_base<edge, std::allocator<edge> >::_List_impl::_List_impl() [41] operator new(unsigned long, void*)
  [57] __gnu_cxx::new_allocator<std::_List_node<corner> >::allocate(unsigned long, void const*) [182] std::__cxx11::_List_base<edge, std::allocator<edge> >::_List_impl::~_List_impl()
