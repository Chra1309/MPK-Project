Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 33.33      0.01     0.01   954967     0.00     0.00  std::_List_node<corner>::_M_valptr()
 33.33      0.02     0.01   557525     0.00     0.00  std::_List_node<edge>::_M_valptr()
 33.33      0.03     0.01    20295     0.00     0.00  std::__cxx11::_List_base<int, std::allocator<int> >::_M_inc_size(unsigned long)
  0.00      0.03     0.00   954967     0.00     0.00  __gnu_cxx::__aligned_membuf<corner>::_M_ptr()
  0.00      0.03     0.00   954967     0.00     0.00  __gnu_cxx::__aligned_membuf<corner>::_M_addr()
  0.00      0.03     0.00   878913     0.00     0.00  std::_List_iterator<corner>::operator->() const
  0.00      0.03     0.00   557525     0.00     0.00  __gnu_cxx::__aligned_membuf<edge>::_M_ptr()
  0.00      0.03     0.00   557525     0.00     0.00  __gnu_cxx::__aligned_membuf<edge>::_M_addr()
  0.00      0.03     0.00   525569     0.00     0.00  std::_List_iterator<edge>::operator->() const
  0.00      0.03     0.00   265579     0.00     0.00  std::_List_iterator<corner>::_List_iterator(std::__detail::_List_node_base*)
  0.00      0.03     0.00   213638     0.00     0.00  std::_List_iterator<edge>::_List_iterator(std::__detail::_List_node_base*)
  0.00      0.03     0.00   200608     0.00     0.00  std::__cxx11::list<corner, std::allocator<corner> >::end()
  0.00      0.03     0.00   166943     0.00     0.00  std::__cxx11::list<edge, std::allocator<edge> >::end()
  0.00      0.03     0.00   161737     0.00     0.00  std::_List_iterator<corner>::operator!=(std::_List_iterator<corner> const&) const
  0.00      0.03     0.00   160675     0.00     0.00  std::_List_iterator<corner>::operator++(int)
  0.00      0.03     0.00   152128     0.00     0.00  corner const& std::forward<corner const&>(std::remove_reference<corner const&>::type&)
  0.00      0.03     0.00   149300     0.00     0.00  std::_List_iterator<edge>::operator!=(std::_List_iterator<edge> const&) const
  0.00      0.03     0.00   141096     0.00     0.00  __gnu_cxx::__aligned_membuf<unsigned long>::_M_ptr()
  0.00      0.03     0.00   141096     0.00     0.00  __gnu_cxx::__aligned_membuf<unsigned long>::_M_addr()
  0.00      0.03     0.00   141096     0.00     0.00  std::_List_node<unsigned long>::_M_valptr()
  0.00      0.03     0.00   132023     0.00     0.00  std::_List_iterator<edge>::operator++(int)
  0.00      0.03     0.00   123423     0.00     0.00  std::_List_iterator<corner>::operator++()
  0.00      0.03     0.00    81180     0.00     0.00  int const& std::forward<int const&>(std::remove_reference<int const&>::type&)
  0.00      0.03     0.00    76054     0.00     0.00  std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_get_Node_allocator()
  0.00      0.03     0.00    74404     0.00     0.00  operator new(unsigned long, void*)
  0.00      0.03     0.00    63948     0.00     0.00  edge const& std::forward<edge const&>(std::remove_reference<edge const&>::type&)
  0.00      0.03     0.00    60885     0.00     0.00  __gnu_cxx::__aligned_membuf<int>::_M_ptr()
  0.00      0.03     0.00    60885     0.00     0.00  __gnu_cxx::__aligned_membuf<int>::_M_addr()
  0.00      0.03     0.00    60885     0.00     0.00  std::_List_node<int>::_M_valptr()
  0.00      0.03     0.00    60885     0.00     0.00  std::_List_iterator<int>::_List_iterator(std::__detail::_List_node_base*)
  0.00      0.03     0.00    57740     0.00     0.00  __gnu_cxx::__aligned_membuf<unsigned long>::_M_ptr() const
  0.00      0.03     0.00    57740     0.00     0.00  __gnu_cxx::__aligned_membuf<unsigned long>::_M_addr() const
  0.00      0.03     0.00    57740     0.00     0.00  std::_List_node<unsigned long>::_M_valptr() const
  0.00      0.03     0.00    40975     0.00     0.00  std::__cxx11::_List_base<int, std::allocator<int> >::_M_node_count() const
  0.00      0.03     0.00    40975     0.00     0.00  std::__cxx11::list<int, std::allocator<int> >::size() const
  0.00      0.03     0.00    40590     0.00     0.00  std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_Node_allocator()
  0.00      0.03     0.00    40590     0.00     0.00  std::__cxx11::list<int, std::allocator<int> >::end()
  0.00      0.03     0.00    38032     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<corner> >::allocate(unsigned long, void const*)
  0.00      0.03     0.00    38032     0.00     0.00  void __gnu_cxx::new_allocator<std::_List_node<corner> >::construct<corner, corner const&>(corner*, corner const&)
  0.00      0.03     0.00    38032     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<corner> >::max_size() const
  0.00      0.03     0.00    38032     0.00     0.00  std::__allocated_ptr<std::allocator<std::_List_node<corner> > >::__allocated_ptr(std::allocator<std::_List_node<corner> >&, std::_List_node<corner>*)
  0.00      0.03     0.00    38032     0.00     0.00  std::__allocated_ptr<std::allocator<std::_List_node<corner> > >::~__allocated_ptr()
  0.00      0.03     0.00    38032     0.00     0.00  std::__allocated_ptr<std::allocator<std::_List_node<corner> > >::operator=(decltype(nullptr))
  0.00      0.03     0.00    38032     0.00     0.00  std::allocator_traits<std::allocator<std::_List_node<corner> > >::allocate(std::allocator<std::_List_node<corner> >&, unsigned long)
  0.00      0.03     0.00    38032     0.00     0.00  void std::allocator_traits<std::allocator<std::_List_node<corner> > >::construct<corner, corner const&>(std::allocator<std::_List_node<corner> >&, corner*, corner const&)
  0.00      0.03     0.00    38032     0.00     0.00  std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_get_node()
  0.00      0.03     0.00    38032     0.00     0.00  std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_inc_size(unsigned long)
  0.00      0.03     0.00    38032     0.00     0.00  std::_List_node<corner>* std::__cxx11::list<corner, std::allocator<corner> >::_M_create_node<corner const&>(corner const&)
  0.00      0.03     0.00    38032     0.00     0.00  void std::__cxx11::list<corner, std::allocator<corner> >::_M_insert<corner const&>(std::_List_iterator<corner>, corner const&)
  0.00      0.03     0.00    38032     0.00     0.00  std::__cxx11::list<corner, std::allocator<corner> >::push_back(corner const&)
  0.00      0.03     0.00    38032     0.00     0.00  std::allocator<std::_List_node<corner> >* std::__addressof<std::allocator<std::_List_node<corner> > >(std::allocator<std::_List_node<corner> >&)
  0.00      0.03     0.00    38022     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<corner> >::deallocate(std::_List_node<corner>*, unsigned long)
  0.00      0.03     0.00    38022     0.00     0.00  void __gnu_cxx::new_allocator<std::_List_node<corner> >::destroy<corner>(corner*)
  0.00      0.03     0.00    38022     0.00     0.00  std::allocator_traits<std::allocator<std::_List_node<corner> > >::deallocate(std::allocator<std::_List_node<corner> >&, std::_List_node<corner>*, unsigned long)
  0.00      0.03     0.00    38022     0.00     0.00  void std::allocator_traits<std::allocator<std::_List_node<corner> > >::destroy<corner>(std::allocator<std::_List_node<corner> >&, corner*)
  0.00      0.03     0.00    38022     0.00     0.00  std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_put_node(std::_List_node<corner>*)
  0.00      0.03     0.00    36735     0.00     0.00  std::__cxx11::list<edge, std::allocator<edge> >::begin()
  0.00      0.03     0.00    33437     0.00     0.00  std::__cxx11::list<corner, std::allocator<corner> >::begin()
  0.00      0.03     0.00    31956     0.00     0.00  std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_get_Node_allocator()
  0.00      0.03     0.00    21406     0.00     0.00  std::_List_iterator<edge>::operator++()
  0.00      0.03     0.00    20680     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator()
  0.00      0.03     0.00    20680     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator()
  0.00      0.03     0.00    20680     0.00     0.00  std::allocator<std::_List_node<int> >::allocator()
  0.00      0.03     0.00    20680     0.00     0.00  std::allocator<std::_List_node<int> >::~allocator()
  0.00      0.03     0.00    20680     0.00     0.00  std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl::_List_impl()
  0.00      0.03     0.00    20680     0.00     0.00  std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl()
  0.00      0.03     0.00    20680     0.00     0.00  std::__cxx11::_List_base<int, std::allocator<int> >::_M_set_size(unsigned long)
  0.00      0.03     0.00    20680     0.00     0.00  std::__cxx11::_List_base<int, std::allocator<int> >::_M_init()
  0.00      0.03     0.00    20680     0.00     0.00  std::__cxx11::_List_base<int, std::allocator<int> >::_M_clear()
  0.00      0.03     0.00    20680     0.00     0.00  std::__cxx11::_List_base<int, std::allocator<int> >::_List_base()
  0.00      0.03     0.00    20680     0.00     0.00  std::__cxx11::_List_base<int, std::allocator<int> >::~_List_base()
  0.00      0.03     0.00    20680     0.00     0.00  std::__cxx11::list<int, std::allocator<int> >::list()
  0.00      0.03     0.00    20680     0.00     0.00  std::__cxx11::list<int, std::allocator<int> >::~list()
  0.00      0.03     0.00    20295     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate(std::_List_node<int>*, unsigned long)
  0.00      0.03     0.00    20295     0.00     0.00  void __gnu_cxx::new_allocator<std::_List_node<int> >::destroy<int>(int*)
  0.00      0.03     0.00    20295     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned long, void const*)
  0.00      0.03     0.00    20295     0.00     0.00  void __gnu_cxx::new_allocator<std::_List_node<int> >::construct<int, int const&>(int*, int const&)
  0.00      0.03     0.00    20295     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::max_size() const
  0.00      0.03     0.00    20295     0.00     0.00  std::_List_iterator<int>::operator*() const
  0.00      0.03     0.00    20295     0.00     0.00  std::_List_iterator<int>::operator--()
  0.00      0.03     0.00    20295     0.00     0.00  std::__allocated_ptr<std::allocator<std::_List_node<int> > >::__allocated_ptr(std::allocator<std::_List_node<int> >&, std::_List_node<int>*)
  0.00      0.03     0.00    20295     0.00     0.00  std::__allocated_ptr<std::allocator<std::_List_node<int> > >::~__allocated_ptr()
  0.00      0.03     0.00    20295     0.00     0.00  std::__allocated_ptr<std::allocator<std::_List_node<int> > >::operator=(decltype(nullptr))
  0.00      0.03     0.00    20295     0.00     0.00  std::allocator_traits<std::allocator<std::_List_node<int> > >::deallocate(std::allocator<std::_List_node<int> >&, std::_List_node<int>*, unsigned long)
  0.00      0.03     0.00    20295     0.00     0.00  void std::allocator_traits<std::allocator<std::_List_node<int> > >::destroy<int>(std::allocator<std::_List_node<int> >&, int*)
  0.00      0.03     0.00    20295     0.00     0.00  std::allocator_traits<std::allocator<std::_List_node<int> > >::allocate(std::allocator<std::_List_node<int> >&, unsigned long)
  0.00      0.03     0.00    20295     0.00     0.00  void std::allocator_traits<std::allocator<std::_List_node<int> > >::construct<int, int const&>(std::allocator<std::_List_node<int> >&, int*, int const&)
  0.00      0.03     0.00    20295     0.00     0.00  std::__cxx11::_List_base<int, std::allocator<int> >::_M_dec_size(unsigned long)
  0.00      0.03     0.00    20295     0.00     0.00  std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_node()
  0.00      0.03     0.00    20295     0.00     0.00  std::__cxx11::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*)
  0.00      0.03     0.00    20295     0.00     0.00  std::_List_node<int>* std::__cxx11::list<int, std::allocator<int> >::_M_create_node<int const&>(int const&)
  0.00      0.03     0.00    20295     0.00     0.00  std::__cxx11::list<int, std::allocator<int> >::back()
  0.00      0.03     0.00    20295     0.00     0.00  std::__cxx11::list<int, std::allocator<int> >::_M_erase(std::_List_iterator<int>)
  0.00      0.03     0.00    20295     0.00     0.00  std::__cxx11::list<int, std::allocator<int> >::pop_back()
  0.00      0.03     0.00    20295     0.00     0.00  void std::__cxx11::list<int, std::allocator<int> >::_M_insert<int const&>(std::_List_iterator<int>, int const&)
  0.00      0.03     0.00    20295     0.00     0.00  std::__cxx11::list<int, std::allocator<int> >::push_back(int const&)
  0.00      0.03     0.00    20295     0.00     0.00  std::allocator<std::_List_node<int> >* std::__addressof<std::allocator<std::_List_node<int> > >(std::allocator<std::_List_node<int> >&)
  0.00      0.03     0.00    16763     0.00     0.00  __gnu_cxx::__aligned_membuf<middle>::_M_ptr()
  0.00      0.03     0.00    16763     0.00     0.00  __gnu_cxx::__aligned_membuf<middle>::_M_addr()
  0.00      0.03     0.00    16763     0.00     0.00  std::_List_node<middle>::_M_valptr()
  0.00      0.03     0.00    16583     0.00     0.00  std::_List_iterator<middle>::operator->() const
  0.00      0.03     0.00    15987     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<edge> >::allocate(unsigned long, void const*)
  0.00      0.03     0.00    15987     0.00     0.00  void __gnu_cxx::new_allocator<std::_List_node<edge> >::construct<edge, edge const&>(edge*, edge const&)
  0.00      0.03     0.00    15987     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<edge> >::max_size() const
  0.00      0.03     0.00    15987     0.00     0.00  std::__allocated_ptr<std::allocator<std::_List_node<edge> > >::__allocated_ptr(std::allocator<std::_List_node<edge> >&, std::_List_node<edge>*)
  0.00      0.03     0.00    15987     0.00     0.00  std::__allocated_ptr<std::allocator<std::_List_node<edge> > >::~__allocated_ptr()
  0.00      0.03     0.00    15987     0.00     0.00  std::__allocated_ptr<std::allocator<std::_List_node<edge> > >::operator=(decltype(nullptr))
  0.00      0.03     0.00    15987     0.00     0.00  std::allocator_traits<std::allocator<std::_List_node<edge> > >::allocate(std::allocator<std::_List_node<edge> >&, unsigned long)
  0.00      0.03     0.00    15987     0.00     0.00  void std::allocator_traits<std::allocator<std::_List_node<edge> > >::construct<edge, edge const&>(std::allocator<std::_List_node<edge> >&, edge*, edge const&)
  0.00      0.03     0.00    15987     0.00     0.00  std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_get_node()
  0.00      0.03     0.00    15987     0.00     0.00  std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_inc_size(unsigned long)
  0.00      0.03     0.00    15987     0.00     0.00  std::_List_node<edge>* std::__cxx11::list<edge, std::allocator<edge> >::_M_create_node<edge const&>(edge const&)
  0.00      0.03     0.00    15987     0.00     0.00  void std::__cxx11::list<edge, std::allocator<edge> >::_M_insert<edge const&>(std::_List_iterator<edge>, edge const&)
  0.00      0.03     0.00    15987     0.00     0.00  std::__cxx11::list<edge, std::allocator<edge> >::push_back(edge const&)
  0.00      0.03     0.00    15987     0.00     0.00  std::allocator<std::_List_node<edge> >* std::__addressof<std::allocator<std::_List_node<edge> > >(std::allocator<std::_List_node<edge> >&)
  0.00      0.03     0.00    15969     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<edge> >::deallocate(std::_List_node<edge>*, unsigned long)
  0.00      0.03     0.00    15969     0.00     0.00  void __gnu_cxx::new_allocator<std::_List_node<edge> >::destroy<edge>(edge*)
  0.00      0.03     0.00    15969     0.00     0.00  std::allocator_traits<std::allocator<std::_List_node<edge> > >::deallocate(std::allocator<std::_List_node<edge> >&, std::_List_node<edge>*, unsigned long)
  0.00      0.03     0.00    15969     0.00     0.00  void std::allocator_traits<std::allocator<std::_List_node<edge> > >::destroy<edge>(std::allocator<std::_List_node<edge> >&, edge*)
  0.00      0.03     0.00    15969     0.00     0.00  std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_put_node(std::_List_node<edge>*)
  0.00      0.03     0.00    15804     0.00     0.00  copyCube(int (*) [3][3])
  0.00      0.03     0.00    15767     0.00     0.00  std::_List_const_iterator<corner>::_M_const_cast() const
  0.00      0.03     0.00    15767     0.00     0.00  std::_List_const_iterator<corner>::_List_const_iterator(std::_List_iterator<corner> const&)
  0.00      0.03     0.00    15767     0.00     0.00  std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_dec_size(unsigned long)
  0.00      0.03     0.00    15767     0.00     0.00  std::__cxx11::list<corner, std::allocator<corner> >::erase(std::_List_const_iterator<corner>)
  0.00      0.03     0.00    15767     0.00     0.00  std::__cxx11::list<corner, std::allocator<corner> >::_M_erase(std::_List_iterator<corner>)
  0.00      0.03     0.00    15585     0.00     0.00  std::iterator_traits<std::_List_iterator<corner> >::iterator_category std::__iterator_category<std::_List_iterator<corner> >(std::_List_iterator<corner> const&)
  0.00      0.03     0.00    15585     0.00     0.00  void std::advance<std::_List_iterator<corner>, int>(std::_List_iterator<corner>&, int)
  0.00      0.03     0.00    15585     0.00     0.00  void std::__advance<std::_List_iterator<corner>, long>(std::_List_iterator<corner>&, long, std::bidirectional_iterator_tag)
  0.00      0.03     0.00    10698     0.00     0.00  std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_node_count() const
  0.00      0.03     0.00    10698     0.00     0.00  std::__cxx11::list<edge, std::allocator<edge> >::size() const
  0.00      0.03     0.00    10251     0.00     0.00  last[abi:cxx11]()
  0.00      0.03     0.00    10251     0.00     0.00  bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
  0.00      0.03     0.00     7609     0.00     0.00  std::remove_reference<int&>::type&& std::move<int&>(int&)
  0.00      0.03     0.00     6507     0.00     0.00  std::_List_iterator<middle>::_List_iterator(std::__detail::_List_node_base*)
  0.00      0.03     0.00     6045     0.00     0.00  std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_node_count() const
  0.00      0.03     0.00     6045     0.00     0.00  std::__cxx11::list<corner, std::allocator<corner> >::size() const
  0.00      0.03     0.00     5796     0.00     0.00  std::__cxx11::list<middle, std::allocator<middle> >::end()
  0.00      0.03     0.00     5617     0.00     0.00  std::_List_iterator<middle>::operator!=(std::_List_iterator<middle> const&) const
  0.00      0.03     0.00     5024     0.00     0.00  std::_List_iterator<middle>::operator++(int)
  0.00      0.03     0.00     4980     0.00     0.00  std::_List_const_iterator<edge>::_M_const_cast() const
  0.00      0.03     0.00     4980     0.00     0.00  std::_List_const_iterator<edge>::_List_const_iterator(std::_List_iterator<edge> const&)
  0.00      0.03     0.00     4980     0.00     0.00  std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_dec_size(unsigned long)
  0.00      0.03     0.00     4980     0.00     0.00  std::__cxx11::list<edge, std::allocator<edge> >::erase(std::_List_const_iterator<edge>)
  0.00      0.03     0.00     4980     0.00     0.00  std::__cxx11::list<edge, std::allocator<edge> >::_M_erase(std::_List_iterator<edge>)
  0.00      0.03     0.00     4932     0.00     0.00  bool __gnu_cxx::__is_null_pointer<char>(char*)
  0.00      0.03     0.00     4932     0.00     0.00  void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)
  0.00      0.03     0.00     4932     0.00     0.00  std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag)
  0.00      0.03     0.00     4932     0.00     0.00  std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&)
  0.00      0.03     0.00     4932     0.00     0.00  std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*)
  0.00      0.03     0.00     4860     0.00     0.00  printColor[abi:cxx11](int)
  0.00      0.03     0.00     4860     0.00     0.00  std::remove_reference<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>::type&& std::move<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
  0.00      0.03     0.00     4860     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00      0.03     0.00     4860     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
  0.00      0.03     0.00     4710     0.00     0.00  std::iterator_traits<std::_List_iterator<edge> >::iterator_category std::__iterator_category<std::_List_iterator<edge> >(std::_List_iterator<edge> const&)
  0.00      0.03     0.00     4710     0.00     0.00  void std::advance<std::_List_iterator<edge>, int>(std::_List_iterator<edge>&, int)
  0.00      0.03     0.00     4710     0.00     0.00  void std::__advance<std::_List_iterator<edge>, long>(std::_List_iterator<edge>&, long, std::bidirectional_iterator_tag)
  0.00      0.03     0.00     4542     0.00     0.00  int* std::__niter_base<int*>(int*)
  0.00      0.03     0.00     3524     0.00     0.00  dRotate(int (*) [3][3])
  0.00      0.03     0.00     3520     0.00     0.00  bool __gnu_cxx::__ops::_Iter_less_iter::operator()<int*, int*>(int*, int*) const
  0.00      0.03     0.00     3028     0.00     0.00  int* std::__miter_base<int*>(int*)
  0.00      0.03     0.00     2884     0.00     0.00  std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_set_size(unsigned long)
  0.00      0.03     0.00     2884     0.00     0.00  std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_init()
  0.00      0.03     0.00     2872     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<edge> >::new_allocator()
  0.00      0.03     0.00     2872     0.00     0.00  std::allocator<std::_List_node<edge> >::allocator()
  0.00      0.03     0.00     2872     0.00     0.00  std::__cxx11::_List_base<edge, std::allocator<edge> >::_List_impl::_List_impl()
  0.00      0.03     0.00     2872     0.00     0.00  std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_clear()
  0.00      0.03     0.00     2872     0.00     0.00  std::__cxx11::_List_base<edge, std::allocator<edge> >::_List_base()
  0.00      0.03     0.00     2872     0.00     0.00  std::__cxx11::list<edge, std::allocator<edge> >::list()
  0.00      0.03     0.00     2860     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<edge> >::~new_allocator()
  0.00      0.03     0.00     2860     0.00     0.00  std::allocator<std::_List_node<edge> >::~allocator()
  0.00      0.03     0.00     2860     0.00     0.00  std::__cxx11::_List_base<edge, std::allocator<edge> >::_List_impl::~_List_impl()
  0.00      0.03     0.00     2860     0.00     0.00  std::__cxx11::_List_base<edge, std::allocator<edge> >::~_List_base()
  0.00      0.03     0.00     2860     0.00     0.00  std::__cxx11::list<edge, std::allocator<edge> >::~list()
  0.00      0.03     0.00     2784     0.00     0.00  QuestionCube::accessData(int, int, int, int)
  0.00      0.03     0.00     2575     0.00     0.00  bool __gnu_cxx::__ops::_Val_less_iter::operator()<int, int*>(int&, int*) const
  0.00      0.03     0.00     2248     0.00     0.00  diRotate(int (*) [3][3])
  0.00      0.03     0.00     2164     0.00     0.00  uRotate(int (*) [3][3])
  0.00      0.03     0.00     2006     0.00     0.00  __gnu_cxx::__ops::__val_comp_iter(__gnu_cxx::__ops::_Iter_less_iter)
  0.00      0.03     0.00     2006     0.00     0.00  void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_less_iter>(int*, __gnu_cxx::__ops::_Val_less_iter)
  0.00      0.03     0.00     1996     0.00     0.00  std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_set_size(unsigned long)
  0.00      0.03     0.00     1996     0.00     0.00  std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_init()
  0.00      0.03     0.00     1988     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<corner> >::new_allocator()
  0.00      0.03     0.00     1988     0.00     0.00  std::allocator<std::_List_node<corner> >::allocator()
  0.00      0.03     0.00     1988     0.00     0.00  std::__cxx11::_List_base<corner, std::allocator<corner> >::_List_impl::_List_impl()
  0.00      0.03     0.00     1988     0.00     0.00  std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_clear()
  0.00      0.03     0.00     1988     0.00     0.00  std::__cxx11::_List_base<corner, std::allocator<corner> >::_List_base()
  0.00      0.03     0.00     1988     0.00     0.00  std::__cxx11::list<corner, std::allocator<corner> >::list()
  0.00      0.03     0.00     1980     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<corner> >::~new_allocator()
  0.00      0.03     0.00     1980     0.00     0.00  std::allocator<std::_List_node<corner> >::~allocator()
  0.00      0.03     0.00     1980     0.00     0.00  std::__cxx11::_List_base<corner, std::allocator<corner> >::_List_impl::~_List_impl()
  0.00      0.03     0.00     1980     0.00     0.00  std::__cxx11::_List_base<corner, std::allocator<corner> >::~_List_base()
  0.00      0.03     0.00     1980     0.00     0.00  std::__cxx11::list<corner, std::allocator<corner> >::~list()
  0.00      0.03     0.00     1760     0.00     0.00  __gnu_cxx::__ops::__iter_less_iter()
  0.00      0.03     0.00     1760     0.00     0.00  void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter)
  0.00      0.03     0.00     1760     0.00     0.00  void std::__introsort_loop<int*, long, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, long, __gnu_cxx::__ops::_Iter_less_iter)
  0.00      0.03     0.00     1760     0.00     0.00  void std::__final_insertion_sort<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter)
  0.00      0.03     0.00     1760     0.00     0.00  std::__lg(long)
  0.00      0.03     0.00     1760     0.00     0.00  void std::sort<int*>(int*, int*)
  0.00      0.03     0.00     1760     0.00     0.00  void std::__sort<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter)
  0.00      0.03     0.00     1656     0.00     0.00  std::_List_iterator<edge>::operator==(std::_List_iterator<edge> const&) const
  0.00      0.03     0.00     1514     0.00     0.00  int* std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<int>(int const*, int const*, int*)
  0.00      0.03     0.00     1514     0.00     0.00  int* std::move_backward<int*, int*>(int*, int*, int*)
  0.00      0.03     0.00     1514     0.00     0.00  int* std::__copy_move_backward_a<true, int*, int*>(int*, int*, int*)
  0.00      0.03     0.00     1514     0.00     0.00  int* std::__copy_move_backward_a2<true, int*, int*>(int*, int*, int*)
  0.00      0.03     0.00     1252     0.00     0.00  uiRotate(int (*) [3][3])
  0.00      0.03     0.00     1200     0.00     0.00  fRotate(int (*) [3][3])
  0.00      0.03     0.00     1132     0.00     0.00  lRotate(int (*) [3][3])
  0.00      0.03     0.00     1068     0.00     0.00  rRotate(int (*) [3][3])
  0.00      0.03     0.00      990     0.00     0.00  sortAnswer(int*)
  0.00      0.03     0.00      989     0.00     0.00  removeLast()
  0.00      0.03     0.00      881     0.00     0.00  d(int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.03     0.00      839     0.00     0.00  std::_List_iterator<corner>::operator==(std::_List_iterator<corner> const&) const
  0.00      0.03     0.00      788     0.00     0.00  riRotate(int (*) [3][3])
  0.00      0.03     0.00      776     0.00     0.00  bRotate(int (*) [3][3])
  0.00      0.03     0.00      728     0.00     0.00  biRotate(int (*) [3][3])
  0.00      0.03     0.00      562     0.00     0.00  di(int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.03     0.00      541     0.00     0.00  u(int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.03     0.00      533     0.00     0.00  std::__cxx11::list<middle, std::allocator<middle> >::begin()
  0.00      0.03     0.00      484     0.00     0.00  getCorner(int, int*)
  0.00      0.03     0.00      468     0.00     0.00  liRotate(int (*) [3][3])
  0.00      0.03     0.00      456     0.00     0.00  fiRotate(int (*) [3][3])
  0.00      0.03     0.00      440     0.00     0.00  getCorners(int (*) [3], int (*) [3][3])
  0.00      0.03     0.00      440     0.00     0.00  getEdges(int (*) [2], int (*) [3][3])
  0.00      0.03     0.00      360     0.00     0.00  middle const& std::forward<middle const&>(std::remove_reference<middle const&>::type&)
  0.00      0.03     0.00      324     0.00     0.00  containsEdge(std::__cxx11::list<edge, std::allocator<edge> >&, int, int)
  0.00      0.03     0.00      313     0.00     0.00  ui(int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.03     0.00      300     0.00     0.00  f(int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.03     0.00      283     0.00     0.00  l(int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.03     0.00      267     0.00     0.00  r(int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.03     0.00      246     0.00     0.00  doTheClient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
  0.00      0.03     0.00      237     0.00     0.00  findBottomMatch(int)
  0.00      0.03     0.00      231     0.00     0.00  containsCorner(std::__cxx11::list<corner, std::allocator<corner> >&, int, int)
  0.00      0.03     0.00      220     0.00     0.00  fillCenter(int*, int*)
  0.00      0.03     0.00      220     0.00     0.00  setCorners(int (*) [3], int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.03     0.00      220     0.00     0.07  fillCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3])
  0.00      0.03     0.00      220     0.00     0.00  CopyListEdges(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<edge, std::allocator<edge> >*)
  0.00      0.03     0.00      220     0.00     0.00  SortEdgesList(std::__cxx11::list<edge, std::allocator<edge> >*, int*, int)
  0.00      0.03     0.00      220     0.00     0.00  PlaceToBeEdges(int (*) [2], int (*) [3][3])
  0.00      0.03     0.00      220     0.00     0.00  SortCornerList(std::__cxx11::list<corner, std::allocator<corner> >*, int*, int)
  0.00      0.03     0.00      220     0.00     0.01  CopyListCorners(std::__cxx11::list<corner, std::allocator<corner> >*, std::__cxx11::list<corner, std::allocator<corner> >*)
  0.00      0.03     0.00      220     0.00     0.00  edgepartitytest(int (*) [3][3])
  0.00      0.03     0.00      220     0.00     0.00  checksolvability(int (*) [3][3])
  0.00      0.03     0.00      220     0.00     0.00  cornerparitytest(int (*) [3][3])
  0.00      0.03     0.00      220     0.00     0.00  permutationparitytestCorners(int (*) [3][3])
  0.00      0.03     0.00      220     0.00     0.00  setEdges(int (*) [2], int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.03     0.00      220     0.00     0.05  fillEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3])
  0.00      0.03     0.00      197     0.00     0.00  ri(int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.03     0.00      194     0.00     0.00  b(int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.03     0.00      182     0.00     0.00  bi(int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.03     0.00      180     0.00     0.00  std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_get_Node_allocator()
  0.00      0.03     0.00      174     0.00     0.00  changeColor(int)
  0.00      0.03     0.00      174     0.00     0.00  answerConverter(int*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
  0.00      0.03     0.00      174     0.00     0.00  QuestionCube::makeQuestion[abi:cxx11]()
  0.00      0.03     0.00      166     0.00     0.00  containsMiddle(std::__cxx11::list<middle, std::allocator<middle> >&, int, int)
  0.00      0.03     0.00      121     0.00     0.00  numCorrectCorners()
  0.00      0.03     0.00      117     0.00     0.00  li(int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.03     0.00      114     0.00     0.00  fi(int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.03     0.00       90     0.00     0.00  printCubeColor(int (*) [3][3])
  0.00      0.03     0.00       90     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<middle> >::deallocate(std::_List_node<middle>*, unsigned long)
  0.00      0.03     0.00       90     0.00     0.00  void __gnu_cxx::new_allocator<std::_List_node<middle> >::destroy<middle>(middle*)
  0.00      0.03     0.00       90     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<middle> >::allocate(unsigned long, void const*)
  0.00      0.03     0.00       90     0.00     0.00  void __gnu_cxx::new_allocator<std::_List_node<middle> >::construct<middle, middle const&>(middle*, middle const&)
  0.00      0.03     0.00       90     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<middle> >::max_size() const
  0.00      0.03     0.00       90     0.00     0.00  std::__allocated_ptr<std::allocator<std::_List_node<middle> > >::__allocated_ptr(std::allocator<std::_List_node<middle> >&, std::_List_node<middle>*)
  0.00      0.03     0.00       90     0.00     0.00  std::__allocated_ptr<std::allocator<std::_List_node<middle> > >::~__allocated_ptr()
  0.00      0.03     0.00       90     0.00     0.00  std::__allocated_ptr<std::allocator<std::_List_node<middle> > >::operator=(decltype(nullptr))
  0.00      0.03     0.00       90     0.00     0.00  std::allocator_traits<std::allocator<std::_List_node<middle> > >::deallocate(std::allocator<std::_List_node<middle> >&, std::_List_node<middle>*, unsigned long)
  0.00      0.03     0.00       90     0.00     0.00  void std::allocator_traits<std::allocator<std::_List_node<middle> > >::destroy<middle>(std::allocator<std::_List_node<middle> >&, middle*)
  0.00      0.03     0.00       90     0.00     0.00  std::allocator_traits<std::allocator<std::_List_node<middle> > >::allocate(std::allocator<std::_List_node<middle> >&, unsigned long)
  0.00      0.03     0.00       90     0.00     0.00  void std::allocator_traits<std::allocator<std::_List_node<middle> > >::construct<middle, middle const&>(std::allocator<std::_List_node<middle> >&, middle*, middle const&)
  0.00      0.03     0.00       90     0.00     0.00  std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_get_node()
  0.00      0.03     0.00       90     0.00     0.00  std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_inc_size(unsigned long)
  0.00      0.03     0.00       90     0.00     0.00  std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_put_node(std::_List_node<middle>*)
  0.00      0.03     0.00       90     0.00     0.00  std::_List_node<middle>* std::__cxx11::list<middle, std::allocator<middle> >::_M_create_node<middle const&>(middle const&)
  0.00      0.03     0.00       90     0.00     0.00  void std::__cxx11::list<middle, std::allocator<middle> >::_M_insert<middle const&>(std::_List_iterator<middle>, middle const&)
  0.00      0.03     0.00       90     0.00     0.00  std::__cxx11::list<middle, std::allocator<middle> >::push_back(middle const&)
  0.00      0.03     0.00       90     0.00     0.00  std::allocator<std::_List_node<middle> >* std::__addressof<std::allocator<std::_List_node<middle> > >(std::allocator<std::_List_node<middle> >&)
  0.00      0.03     0.00       89     0.00     0.00  std::_List_iterator<middle>::operator==(std::_List_iterator<middle> const&) const
  0.00      0.03     0.00       89     0.00     0.00  std::_List_const_iterator<middle>::_M_const_cast() const
  0.00      0.03     0.00       89     0.00     0.00  std::_List_const_iterator<middle>::_List_const_iterator(std::_List_iterator<middle> const&)
  0.00      0.03     0.00       89     0.00     0.00  std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_dec_size(unsigned long)
  0.00      0.03     0.00       89     0.00     0.00  std::__cxx11::list<middle, std::allocator<middle> >::erase(std::_List_const_iterator<middle>)
  0.00      0.03     0.00       89     0.00     0.00  std::__cxx11::list<middle, std::allocator<middle> >::_M_erase(std::_List_iterator<middle>)
  0.00      0.03     0.00       72     0.00     0.00  clearMoves()
  0.00      0.03     0.00       72     0.00     0.00  translateMove()
  0.00      0.03     0.00       72     0.00     0.00  findNextTopEdge(int&, int&)
  0.00      0.03     0.00       72     0.00     0.00  findNextTopCorner(int&, int&)
  0.00      0.03     0.00       72     0.00     0.00  sendmoves()
  0.00      0.03     0.00       60     0.00     0.00  middleAlgorithm(int, int, int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.03     0.00       58     0.00     0.00  cornerOrientation()
  0.00      0.03     0.00       58     0.00     0.00  askTwo(int*, int*, int*, int*)
  0.00      0.03     0.00       58     0.00     0.00  QuestionCube::QuestionCube()
  0.00      0.03     0.00       51     0.00     0.00  placeMiddleEdge(int, int, int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.03     0.00       40     0.00     0.00  findBestFace(int)
  0.00      0.03     0.00       40     0.00     0.00  twoCornerRotate(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.03     0.00       36     0.00     0.00  print(int (*) [3][3])
  0.00      0.03     0.00       28     0.00     0.00  swapCorners(int, int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.03     0.00       28     0.00     0.04  getNextEdgeQuestion(std::__cxx11::list<edge, std::allocator<edge> >&, int*, int*)
  0.00      0.03     0.00       28     0.00     0.00  sortOutImpossibleEdges(int*, std::__cxx11::list<edge, std::allocator<edge> >&, int*, int*)
  0.00      0.03     0.00       28     0.00     0.00  std::_List_iterator<edge>::_List_iterator()
  0.00      0.03     0.00       26     0.00     0.00  rotateEdges(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.03     0.00       26     0.00     0.00  numEdgesInCorrectPos()
  0.00      0.03     0.00       22     0.00     0.00  twoEdgeRotate(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.03     0.00       22     0.00     0.00  std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_node_count() const
  0.00      0.03     0.00       22     0.00     0.00  std::__cxx11::list<middle, std::allocator<middle> >::size() const
  0.00      0.03     0.00       19     0.00     0.03  getNextCornerQuestion(std::__cxx11::list<corner, std::allocator<corner> >&, int*, int*)
  0.00      0.03     0.00       19     0.00     0.00  sortOutImpossibleCorners(int*, std::__cxx11::list<corner, std::allocator<corner> >&, int*, int*)
  0.00      0.03     0.00       19     0.00     0.00  std::_List_iterator<corner>::_List_iterator()
  0.00      0.03     0.00       18     0.00     0.10  planAction(int, std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*, int*)
  0.00      0.03     0.00       18     0.00     0.00  mapforsolver(int (*) [3][3])
  0.00      0.03     0.00       18     0.00     0.00  moveTopEdges(int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.03     0.00       18     0.00     0.00  solveTopCross(int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.03     0.00       18     0.00     1.56  fillrandomcube(int*, int*, std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int (*) [3][3])
  0.00      0.03     0.00       18     0.00     0.00  moveTopCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.03     0.00       18     0.00     0.00  solveTopCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.03     0.00       18     0.00     0.00  solveBottomLayer(int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.03     0.00       18     0.00     0.00  solveMiddleLayer(int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.03     0.00       18     0.00     0.00  correctBottomEdges(int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.03     0.00       18     0.00     0.00  positionBottomEdges(int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.03     0.00       18     0.00     0.00  correctBottomCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.03     0.00       18     0.00     0.00  positionBottomCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3])
  0.00      0.03     0.00       18     0.00     0.00  failsafe(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*)
  0.00      0.03     0.00       18     0.00     0.00  checkface(int)
  0.00      0.03     0.00       18     0.00     0.01  printlist(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*)
  0.00      0.03     0.00       12     0.00     0.00  std::__cxx11::list<edge, std::allocator<edge> >::clear()
  0.00      0.03     0.00       11     0.00     0.00  getNextQuestion(std::__cxx11::list<middle, std::allocator<middle> >&, int*)
  0.00      0.03     0.00       11     0.00     0.00  sortOutImpossibleCodes(int*, std::__cxx11::list<middle, std::allocator<middle> >&, int*)
  0.00      0.03     0.00       11     0.00     0.00  std::_List_iterator<middle>::_List_iterator()
  0.00      0.03     0.00       10     0.00     0.00  getEdgeInfo(int (*) [3], int)
  0.00      0.03     0.00       10     0.00     0.12  findEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int*, int)
  0.00      0.03     0.00        8     0.00     0.00  std::__cxx11::list<corner, std::allocator<corner> >::clear()
  0.00      0.03     0.00        7     0.00     0.08  findCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int*, int)
  0.00      0.03     0.00        7     0.00     0.00  getCornerInfo(int (*) [3], int)
  0.00      0.03     0.00        3     0.00     0.00  buildCombOfTwo(std::__cxx11::list<middle, std::allocator<middle> >&)
  0.00      0.03     0.00        3     0.00     0.00  eliminateFound(std::__cxx11::list<middle, std::allocator<middle> >&, int*)
  0.00      0.03     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z12DieWithErrorNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  0.00      0.03     0.00        1     0.00     0.00  findMiddle(int*)
  0.00      0.03     0.00        1     0.00     0.01  buildCombOfEdge(std::__cxx11::list<edge, std::allocator<edge> >*, int*)
  0.00      0.03     0.00        1     0.00     0.00  buildCombOfCorner(std::__cxx11::list<corner, std::allocator<corner> >*, int*)
  0.00      0.03     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.03     0.00        1     0.00     0.00  cubesback()
  0.00      0.03     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<middle> >::new_allocator()
  0.00      0.03     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<middle> >::~new_allocator()
  0.00      0.03     0.00        1     0.00     0.00  std::allocator<std::_List_node<middle> >::allocator()
  0.00      0.03     0.00        1     0.00     0.00  std::allocator<std::_List_node<middle> >::~allocator()
  0.00      0.03     0.00        1     0.00     0.00  std::__cxx11::_List_base<middle, std::allocator<middle> >::_List_impl::_List_impl()
  0.00      0.03     0.00        1     0.00     0.00  std::__cxx11::_List_base<middle, std::allocator<middle> >::_List_impl::~_List_impl()
  0.00      0.03     0.00        1     0.00     0.00  std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_set_size(unsigned long)
  0.00      0.03     0.00        1     0.00     0.00  std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_init()
  0.00      0.03     0.00        1     0.00     0.00  std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_clear()
  0.00      0.03     0.00        1     0.00     0.00  std::__cxx11::_List_base<middle, std::allocator<middle> >::_List_base()
  0.00      0.03     0.00        1     0.00     0.00  std::__cxx11::_List_base<middle, std::allocator<middle> >::~_List_base()
  0.00      0.03     0.00        1     0.00     0.00  std::__cxx11::list<middle, std::allocator<middle> >::list()
  0.00      0.03     0.00        1     0.00     0.00  std::__cxx11::list<middle, std::allocator<middle> >::~list()
  0.00      0.03     0.00                             DieWithError(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
  0.00      0.03     0.00                             changeAnswer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int*)
  0.00      0.03     0.00                             clearEdgeList(std::__cxx11::list<edge, std::allocator<edge> >*)
  0.00      0.03     0.00                             numberToGerman(int)
  0.00      0.03     0.00                             permutationparitytestEdges(int (*) [3][3])
  0.00      0.03     0.00                             solve(bool*)
  0.00      0.03     0.00                             ClientCube::clearMoves()
  0.00      0.03     0.00                             ClientCube::removeLast()
  0.00      0.03     0.00                             ClientCube::shift8by2n(int&, int&, int&, int&, int&, int&, int&, int&, int&)
  0.00      0.03     0.00                             ClientCube::cubeToArray(int (*) [3][3])
  0.00      0.03     0.00                             ClientCube::rotateEdges(int, bool)
  0.00      0.03     0.00                             ClientCube::shift12by3n(int&, int&, int&, int&, int&, int&, int&, int&, int&, int&, int&, int&, int&)
  0.00      0.03     0.00                             ClientCube::swapCorners(int)
  0.00      0.03     0.00                             ClientCube::cubeToString[abi:cxx11]()
  0.00      0.03     0.00                             ClientCube::findBestFace(int)
  0.00      0.03     0.00                             ClientCube::mapForSolver()
  0.00      0.03     0.00                             ClientCube::moveTopEdges()
  0.00      0.03     0.00                             ClientCube::stringToCube(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
  0.00      0.03     0.00                             ClientCube::solveTopCross()
  0.00      0.03     0.00                             ClientCube::twoEdgeRotate(int, bool)
  0.00      0.03     0.00                             ClientCube::moveTopCorners()
  0.00      0.03     0.00                             ClientCube::findBottomMatch(int)
  0.00      0.03     0.00                             ClientCube::findNextTopEdge(int&, int&)
  0.00      0.03     0.00                             ClientCube::middleAlgorithm(int, int)
  0.00      0.03     0.00                             ClientCube::placeMiddleEdge(int, int)
  0.00      0.03     0.00                             ClientCube::solveTopCorners()
  0.00      0.03     0.00                             ClientCube::twoCornerRotate(int, bool)
  0.00      0.03     0.00                             ClientCube::solveBottomLayer()
  0.00      0.03     0.00                             ClientCube::solveMiddleLayer()
  0.00      0.03     0.00                             ClientCube::cornerOrientation()
  0.00      0.03     0.00                             ClientCube::findNextTopCorner(int&, int&)
  0.00      0.03     0.00                             ClientCube::mapForCustomColor()
  0.00      0.03     0.00                             ClientCube::numCorrectCorners()
  0.00      0.03     0.00                             ClientCube::correctBottomEdges()
  0.00      0.03     0.00                             ClientCube::positionBottomEdges()
  0.00      0.03     0.00                             ClientCube::correctBottomCorners()
  0.00      0.03     0.00                             ClientCube::numEdgesInCorrectPos()
  0.00      0.03     0.00                             ClientCube::positionBottomCorners()
  0.00      0.03     0.00                             ClientCube::last[abi:cxx11]()
  0.00      0.03     0.00                             ClientCube::print()
  0.00      0.03     0.00                             ClientCube::rotate(int, int)
  0.00      0.03     0.00                             ClientCube::getEdge(int&, int&, int&, int&)
  0.00      0.03     0.00                             ClientCube::getCorner(int&, int&, int&, int&, int&)
  0.00      0.03     0.00                             ClientCube::getCorner(int, int*)
  0.00      0.03     0.00                             ClientCube::inputCube()
  0.00      0.03     0.00                             ClientCube::randomize()
  0.00      0.03     0.00                             ClientCube::testSolve()
  0.00      0.03     0.00                             ClientCube::ClientCube(int)
  0.00      0.03     0.00                             QuestionCube::shift8by2n(int&, int&, int&, int&, int&, int&, int&, int&, int&)
  0.00      0.03     0.00                             QuestionCube::cubeToArray(int (*) [3][3])
  0.00      0.03     0.00                             QuestionCube::shift12by3n(int&, int&, int&, int&, int&, int&, int&, int&, int&, int&, int&, int&, int&)
  0.00      0.03     0.00                             QuestionCube::cubeToString[abi:cxx11]()
  0.00      0.03     0.00                             QuestionCube::stringToCube(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
  0.00      0.03     0.00                             QuestionCube::print()
  0.00      0.03     0.00                             QuestionCube::rotate(int, int)
  0.00      0.03     0.00                             QuestionCube::getColor(int, int, int)
  0.00      0.03     0.00                             std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned long, char const*, __va_list_tag*), unsigned long, char const*, ...)
  0.00      0.03     0.00                             __gnu_cxx::__ops::_Iter_less_val::_Iter_less_val(__gnu_cxx::__ops::_Iter_less_iter)
  0.00      0.03     0.00                             bool __gnu_cxx::__ops::_Iter_less_val::operator()<int*, int>(int*, int&) const
  0.00      0.03     0.00                             std::_List_iterator<edge>::operator--()
  0.00      0.03     0.00                             std::_List_iterator<corner>::operator--()
  0.00      0.03     0.00                             std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::~_Alloc_hider()
  0.00      0.03     0.00                             void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*)
  0.00      0.03     0.00                             void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type)
  0.00      0.03     0.00                             std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<char*, void>(char*, char*, std::allocator<char> const&)
  0.00      0.03     0.00                             std::__cxx11::to_string(int)
  0.00      0.03     0.00                             void std::__pop_heap<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, int*, __gnu_cxx::__ops::_Iter_less_iter&)
  0.00      0.03     0.00                             void std::__make_heap<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter&)
  0.00      0.03     0.00                             void std::__push_heap<int*, long, int, __gnu_cxx::__ops::_Iter_less_val>(int*, long, long, int, __gnu_cxx::__ops::_Iter_less_val&)
  0.00      0.03     0.00                             void std::__sort_heap<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter&)
  0.00      0.03     0.00                             void std::__adjust_heap<int*, long, int, __gnu_cxx::__ops::_Iter_less_iter>(int*, long, long, int, __gnu_cxx::__ops::_Iter_less_iter)
  0.00      0.03     0.00                             void std::__heap_select<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, int*, __gnu_cxx::__ops::_Iter_less_iter)
  0.00      0.03     0.00                             void std::__partial_sort<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, int*, __gnu_cxx::__ops::_Iter_less_iter)
  0.00      0.03     0.00                             int* std::__unguarded_partition<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, int*, __gnu_cxx::__ops::_Iter_less_iter)
  0.00      0.03     0.00                             void std::__move_median_to_first<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, int*, int*, __gnu_cxx::__ops::_Iter_less_iter)
  0.00      0.03     0.00                             void std::__unguarded_insertion_sort<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter)
  0.00      0.03     0.00                             int* std::__unguarded_partition_pivot<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter)
  0.00      0.03     0.00                             std::remove_reference<__gnu_cxx::__ops::_Iter_less_iter&>::type&& std::move<__gnu_cxx::__ops::_Iter_less_iter&>(__gnu_cxx::__ops::_Iter_less_iter&)
  0.00      0.03     0.00                             std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<int> >, std::is_move_constructible<int>, std::is_move_assignable<int> >::value, void>::type std::swap<int>(int&, int&)
  0.00      0.03     0.00                             void std::iter_swap<int*, int*>(int*, int*)
  0.00      0.03     0.00                             __do_global_dtors_aux
  0.00      0.03     0.00                             __do_global_dtors_aux_fini_array_entry
  0.00      0.03     0.00                             __frame_dummy_init_array_entry
  0.00      0.03     0.00                             __gmon_start__
  0.00      0.03     0.00                             __libc_csu_fini
  0.00      0.03     0.00                             __libc_csu_init
  0.00      0.03     0.00                             _dl_relocate_static_pie
  0.00      0.03     0.00                             _fini
  0.00      0.03     0.00                             _init
  0.00      0.03     0.00                             _start
  0.00      0.03     0.00                             atexit
  0.00      0.03     0.00                             data_start
  0.00      0.03     0.00                             deregister_tm_clones
  0.00      0.03     0.00                             etext
  0.00      0.03     0.00                             frame_dummy
  0.00      0.03     0.00                             main
  0.00      0.03     0.00                             register_tm_clones

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2018 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 33.33% of 0.03 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]    100.0    0.00    0.03                 main [1]
                0.00    0.03      18/18          fillrandomcube(int*, int*, std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int (*) [3][3]) [2]
                0.00    0.00      18/18          planAction(int, std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*, int*) [12]
                0.00    0.00      18/18          printlist(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [33]
                0.00    0.00       1/1           buildCombOfEdge(std::__cxx11::list<edge, std::allocator<edge> >*, int*) [40]
                0.00    0.00       1/1           buildCombOfCorner(std::__cxx11::list<corner, std::allocator<corner> >*, int*) [41]
                0.00    0.00       8/8           std::__cxx11::list<corner, std::allocator<corner> >::clear() [42]
                0.00    0.00      12/12          std::__cxx11::list<edge, std::allocator<edge> >::clear() [43]
                0.00    0.00      89/90          printCubeColor(int (*) [3][3]) [279]
                0.00    0.00      72/72          sendmoves() [309]
                0.00    0.00      36/36          print(int (*) [3][3]) [317]
                0.00    0.00      18/18          failsafe(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [337]
                0.00    0.00      18/18          mapforsolver(int (*) [3][3]) [326]
                0.00    0.00      18/18          solveTopCross(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [328]
                0.00    0.00      18/18          solveTopCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [330]
                0.00    0.00      18/18          checkface(int) [338]
                0.00    0.00      18/18          solveMiddleLayer(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [332]
                0.00    0.00      18/18          solveBottomLayer(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [331]
                0.00    0.00      12/2872        std::__cxx11::list<edge, std::allocator<edge> >::list() [200]
                0.00    0.00       8/1988        std::__cxx11::list<corner, std::allocator<corner> >::list() [216]
                0.00    0.00       1/72          clearMoves() [305]
                0.00    0.00       1/1           cubesback() [349]
                0.00    0.00       1/1           findMiddle(int*) [347]
-----------------------------------------------
                0.00    0.03      18/18          main [1]
[2]     93.8    0.00    0.03      18         fillrandomcube(int*, int*, std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int (*) [3][3]) [2]
                0.00    0.02     220/220         fillCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [3]
                0.00    0.01     220/220         fillEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [4]
                0.00    0.00     220/220         CopyListCorners(std::__cxx11::list<corner, std::allocator<corner> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [13]
                0.00    0.00     220/220         CopyListEdges(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<edge, std::allocator<edge> >*) [16]
                0.00    0.00    1760/1980        std::__cxx11::list<corner, std::allocator<corner> >::~list() [27]
                0.00    0.00    2640/2860        std::__cxx11::list<edge, std::allocator<edge> >::~list() [30]
                0.00    0.00    2640/2872        std::__cxx11::list<edge, std::allocator<edge> >::list() [200]
                0.00    0.00    1760/1988        std::__cxx11::list<corner, std::allocator<corner> >::list() [216]
                0.00    0.00     220/220         fillCenter(int*, int*) [258]
                0.00    0.00     220/220         SortEdgesList(std::__cxx11::list<edge, std::allocator<edge> >*, int*, int) [260]
                0.00    0.00     220/220         SortCornerList(std::__cxx11::list<corner, std::allocator<corner> >*, int*, int) [262]
                0.00    0.00     220/220         checksolvability(int (*) [3][3]) [264]
-----------------------------------------------
                0.00    0.02     220/220         fillrandomcube(int*, int*, std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int (*) [3][3]) [2]
[3]     51.2    0.00    0.02     220         fillCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [3]
                0.00    0.01   15585/20295       std::__cxx11::list<int, std::allocator<int> >::push_back(int const&) [8]
                0.00    0.01  712794/878913      std::_List_iterator<corner>::operator->() const [11]
                0.00    0.00   15585/15767       std::__cxx11::list<corner, std::allocator<corner> >::erase(std::_List_const_iterator<corner>) [31]
                0.00    0.00     220/1980        std::__cxx11::list<corner, std::allocator<corner> >::~list() [27]
                0.00    0.00    1760/38032       std::__cxx11::list<corner, std::allocator<corner> >::push_back(corner const&) [21]
                0.00    0.00  115070/160675      std::_List_iterator<corner>::operator++(int) [59]
                0.00    0.00  113929/200608      std::__cxx11::list<corner, std::allocator<corner> >::end() [56]
                0.00    0.00  113929/161737      std::_List_iterator<corner>::operator!=(std::_List_iterator<corner> const&) const [58]
                0.00    0.00   28785/33437       std::__cxx11::list<corner, std::allocator<corner> >::begin() [99]
                0.00    0.00   21745/40975       std::__cxx11::list<int, std::allocator<int> >::size() const [79]
                0.00    0.00   15585/20295       std::__cxx11::list<int, std::allocator<int> >::back() [133]
                0.00    0.00   15585/15585       void std::advance<std::_List_iterator<corner>, int>(std::_List_iterator<corner>&, int) [162]
                0.00    0.00   15585/20295       std::__cxx11::list<int, std::allocator<int> >::pop_back() [135]
                0.00    0.00   15585/15767       std::_List_const_iterator<corner>::_List_const_iterator(std::_List_iterator<corner> const&) [159]
                0.00    0.00    6160/20680       std::__cxx11::list<int, std::allocator<int> >::list() [113]
                0.00    0.00    6160/20680       std::__cxx11::list<int, std::allocator<int> >::~list() [114]
                0.00    0.00    1760/6045        std::__cxx11::list<corner, std::allocator<corner> >::size() const [171]
                0.00    0.00     220/1988        std::__cxx11::list<corner, std::allocator<corner> >::list() [216]
                0.00    0.00     220/220         setCorners(int (*) [3], int (*) [3][3], int (*) [3][3], int (*) [3][3]) [259]
-----------------------------------------------
                0.00    0.01     220/220         fillrandomcube(int*, int*, std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int (*) [3][3]) [2]
[4]     33.9    0.00    0.01     220         fillEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [4]
                0.00    0.01  429796/525569      std::_List_iterator<edge>::operator->() const [10]
                0.00    0.00    4710/20295       std::__cxx11::list<int, std::allocator<int> >::push_back(int const&) [8]
                0.00    0.00    4710/4980        std::__cxx11::list<edge, std::allocator<edge> >::erase(std::_List_const_iterator<edge>) [34]
                0.00    0.00    2640/15987       std::__cxx11::list<edge, std::allocator<edge> >::push_back(edge const&) [24]
                0.00    0.00     220/2860        std::__cxx11::list<edge, std::allocator<edge> >::~list() [30]
                0.00    0.00  123016/166943      std::__cxx11::list<edge, std::allocator<edge> >::end() [57]
                0.00    0.00  123016/149300      std::_List_iterator<edge>::operator!=(std::_List_iterator<edge> const&) const [61]
                0.00    0.00  108631/132023      std::_List_iterator<edge>::operator++(int) [65]
                0.00    0.00   29790/36735       std::__cxx11::list<edge, std::allocator<edge> >::begin() [98]
                0.00    0.00   19230/40975       std::__cxx11::list<int, std::allocator<int> >::size() const [79]
                0.00    0.00   14520/20680       std::__cxx11::list<int, std::allocator<int> >::list() [113]
                0.00    0.00   14520/20680       std::__cxx11::list<int, std::allocator<int> >::~list() [114]
                0.00    0.00    4710/20295       std::__cxx11::list<int, std::allocator<int> >::back() [133]
                0.00    0.00    4710/4710        void std::advance<std::_List_iterator<edge>, int>(std::_List_iterator<edge>&, int) [188]
                0.00    0.00    4710/20295       std::__cxx11::list<int, std::allocator<int> >::pop_back() [135]
                0.00    0.00    4710/4980        std::_List_const_iterator<edge>::_List_const_iterator(std::_List_iterator<edge> const&) [176]
                0.00    0.00    2640/10698       std::__cxx11::list<edge, std::allocator<edge> >::size() const [165]
                0.00    0.00     220/2872        std::__cxx11::list<edge, std::allocator<edge> >::list() [200]
                0.00    0.00     220/220         setEdges(int (*) [2], int (*) [3][3], int (*) [3][3], int (*) [3][3]) [267]
-----------------------------------------------
                0.00    0.00    4980/557525      std::__cxx11::list<edge, std::allocator<edge> >::_M_erase(std::_List_iterator<edge>) [35]
                0.00    0.00   10989/557525      std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_clear() [28]
                0.00    0.00   15987/557525      std::_List_node<edge>* std::__cxx11::list<edge, std::allocator<edge> >::_M_create_node<edge const&>(edge const&) [22]
                0.01    0.00  525569/557525      std::_List_iterator<edge>::operator->() const [10]
[5]     33.3    0.01    0.00  557525         std::_List_node<edge>::_M_valptr() [5]
                0.00    0.00  557525/557525      __gnu_cxx::__aligned_membuf<edge>::_M_ptr() [52]
-----------------------------------------------
                0.01    0.00   20295/20295       void std::__cxx11::list<int, std::allocator<int> >::_M_insert<int const&>(std::_List_iterator<int>, int const&) [7]
[6]     33.3    0.01    0.00   20295         std::__cxx11::_List_base<int, std::allocator<int> >::_M_inc_size(unsigned long) [6]
                0.00    0.00   20295/141096      std::_List_node<unsigned long>::_M_valptr() [64]
-----------------------------------------------
                0.00    0.01   20295/20295       std::__cxx11::list<int, std::allocator<int> >::push_back(int const&) [8]
[7]     33.3    0.00    0.01   20295         void std::__cxx11::list<int, std::allocator<int> >::_M_insert<int const&>(std::_List_iterator<int>, int const&) [7]
                0.01    0.00   20295/20295       std::__cxx11::_List_base<int, std::allocator<int> >::_M_inc_size(unsigned long) [6]
                0.00    0.00   20295/81180       int const& std::forward<int const&>(std::remove_reference<int const&>::type&) [67]
                0.00    0.00   20295/20295       std::_List_node<int>* std::__cxx11::list<int, std::allocator<int> >::_M_create_node<int const&>(int const&) [132]
-----------------------------------------------
                0.00    0.00    4710/20295       fillEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [4]
                0.00    0.01   15585/20295       fillCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [3]
[8]     33.3    0.00    0.01   20295         std::__cxx11::list<int, std::allocator<int> >::push_back(int const&) [8]
                0.00    0.01   20295/20295       void std::__cxx11::list<int, std::allocator<int> >::_M_insert<int const&>(std::_List_iterator<int>, int const&) [7]
                0.00    0.00   20295/40590       std::__cxx11::list<int, std::allocator<int> >::end() [81]
-----------------------------------------------
                0.00    0.00   15767/954967      std::__cxx11::list<corner, std::allocator<corner> >::_M_erase(std::_List_iterator<corner>) [32]
                0.00    0.00   22255/954967      std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_clear() [25]
                0.00    0.00   38032/954967      std::_List_node<corner>* std::__cxx11::list<corner, std::allocator<corner> >::_M_create_node<corner const&>(corner const&) [19]
                0.01    0.00  878913/954967      std::_List_iterator<corner>::operator->() const [11]
[9]     33.3    0.01    0.00  954967         std::_List_node<corner>::_M_valptr() [9]
                0.00    0.00  954967/954967      __gnu_cxx::__aligned_membuf<corner>::_M_ptr() [50]
-----------------------------------------------
                0.00    0.00    1000/525569      sortOutImpossibleEdges(int*, std::__cxx11::list<edge, std::allocator<edge> >&, int*, int*) [38]
                0.00    0.00    1939/525569      containsEdge(std::__cxx11::list<edge, std::allocator<edge> >&, int, int) [36]
                0.00    0.00    2418/525569      printlist(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [33]
                0.00    0.00    5454/525569      findEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int*, int) [14]
                0.00    0.00   26118/525569      CopyListEdges(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<edge, std::allocator<edge> >*) [16]
                0.00    0.00   58844/525569      getNextEdgeQuestion(std::__cxx11::list<edge, std::allocator<edge> >&, int*, int*) [15]
                0.00    0.01  429796/525569      fillEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [4]
[10]    31.4    0.00    0.01  525569         std::_List_iterator<edge>::operator->() const [10]
                0.01    0.00  525569/557525      std::_List_node<edge>::_M_valptr() [5]
-----------------------------------------------
                0.00    0.00     743/878913      sortOutImpossibleCorners(int*, std::__cxx11::list<corner, std::allocator<corner> >&, int*, int*) [39]
                0.00    0.00    2003/878913      containsCorner(std::__cxx11::list<corner, std::allocator<corner> >&, int, int) [37]
                0.00    0.00    3692/878913      findCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int*, int) [17]
                0.00    0.00    7680/878913      printlist(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [33]
                0.00    0.00   43761/878913      getNextCornerQuestion(std::__cxx11::list<corner, std::allocator<corner> >&, int*, int*) [18]
                0.00    0.00  108240/878913      CopyListCorners(std::__cxx11::list<corner, std::allocator<corner> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [13]
                0.00    0.01  712794/878913      fillCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [3]
[11]    30.7    0.00    0.01  878913         std::_List_iterator<corner>::operator->() const [11]
                0.01    0.00  878913/954967      std::_List_node<corner>::_M_valptr() [9]
-----------------------------------------------
                0.00    0.00      18/18          main [1]
[12]     5.8    0.00    0.00      18         planAction(int, std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*, int*) [12]
                0.00    0.00      10/10          findEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int*, int) [14]
                0.00    0.00       7/7           findCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int*, int) [17]
                0.00    0.00      23/10698       std::__cxx11::list<edge, std::allocator<edge> >::size() const [165]
                0.00    0.00      13/6045        std::__cxx11::list<corner, std::allocator<corner> >::size() const [171]
-----------------------------------------------
                0.00    0.00     220/220         fillrandomcube(int*, int*, std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int (*) [3][3]) [2]
[13]     5.0    0.00    0.00     220         CopyListCorners(std::__cxx11::list<corner, std::allocator<corner> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [13]
                0.00    0.00  108240/878913      std::_List_iterator<corner>::operator->() const [11]
                0.00    0.00   36080/38032       std::__cxx11::list<corner, std::allocator<corner> >::push_back(corner const&) [21]
                0.00    0.00   37840/200608      std::__cxx11::list<corner, std::allocator<corner> >::end() [56]
                0.00    0.00   37840/161737      std::_List_iterator<corner>::operator!=(std::_List_iterator<corner> const&) const [58]
                0.00    0.00   36080/160675      std::_List_iterator<corner>::operator++(int) [59]
                0.00    0.00    1760/33437       std::__cxx11::list<corner, std::allocator<corner> >::begin() [99]
-----------------------------------------------
                0.00    0.00      10/10          planAction(int, std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*, int*) [12]
[14]     4.0    0.00    0.00      10         findEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int*, int) [14]
                0.00    0.00      28/28          getNextEdgeQuestion(std::__cxx11::list<edge, std::allocator<edge> >&, int*, int*) [15]
                0.00    0.00    5454/525569      std::_List_iterator<edge>::operator->() const [10]
                0.00    0.00      28/28          sortOutImpossibleEdges(int*, std::__cxx11::list<edge, std::allocator<edge> >&, int*, int*) [38]
                0.00    0.00     130/4980        std::__cxx11::list<edge, std::allocator<edge> >::erase(std::_List_const_iterator<edge>) [34]
                0.00    0.00    2857/36735       std::__cxx11::list<edge, std::allocator<edge> >::begin() [98]
                0.00    0.00    1293/166943      std::__cxx11::list<edge, std::allocator<edge> >::end() [57]
                0.00    0.00    1293/1656        std::_List_iterator<edge>::operator==(std::_List_iterator<edge> const&) const [227]
                0.00    0.00    1222/10698       std::__cxx11::list<edge, std::allocator<edge> >::size() const [165]
                0.00    0.00    1054/132023      std::_List_iterator<edge>::operator++(int) [65]
                0.00    0.00     130/4980        std::_List_const_iterator<edge>::_List_const_iterator(std::_List_iterator<edge> const&) [176]
                0.00    0.00      28/58          askTwo(int*, int*, int*, int*) [312]
                0.00    0.00      10/10          getEdgeInfo(int (*) [3], int) [342]
-----------------------------------------------
                0.00    0.00      28/28          findEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int*, int) [14]
[15]     3.6    0.00    0.00      28         getNextEdgeQuestion(std::__cxx11::list<edge, std::allocator<edge> >&, int*, int*) [15]
                0.00    0.00   58844/525569      std::_List_iterator<edge>::operator->() const [10]
                0.00    0.00     324/324         containsEdge(std::__cxx11::list<edge, std::allocator<edge> >&, int, int) [36]
                0.00    0.00    7350/166943      std::__cxx11::list<edge, std::allocator<edge> >::end() [57]
                0.00    0.00    7350/149300      std::_List_iterator<edge>::operator!=(std::_List_iterator<edge> const&) const [61]
                0.00    0.00    6510/132023      std::_List_iterator<edge>::operator++(int) [65]
                0.00    0.00     868/36735       std::__cxx11::list<edge, std::allocator<edge> >::begin() [98]
-----------------------------------------------
                0.00    0.00     220/220         fillrandomcube(int*, int*, std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int (*) [3][3]) [2]
[16]     2.3    0.00    0.00     220         CopyListEdges(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<edge, std::allocator<edge> >*) [16]
                0.00    0.00   26118/525569      std::_List_iterator<edge>::operator->() const [10]
                0.00    0.00   13059/15987       std::__cxx11::list<edge, std::allocator<edge> >::push_back(edge const&) [24]
                0.00    0.00   15699/166943      std::__cxx11::list<edge, std::allocator<edge> >::end() [57]
                0.00    0.00   15699/149300      std::_List_iterator<edge>::operator!=(std::_List_iterator<edge> const&) const [61]
                0.00    0.00   13059/132023      std::_List_iterator<edge>::operator++(int) [65]
                0.00    0.00    2640/36735       std::__cxx11::list<edge, std::allocator<edge> >::begin() [98]
-----------------------------------------------
                0.00    0.00       7/7           planAction(int, std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*, int*) [12]
[17]     1.8    0.00    0.00       7         findCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int*, int) [17]
                0.00    0.00      19/19          getNextCornerQuestion(std::__cxx11::list<corner, std::allocator<corner> >&, int*, int*) [18]
                0.00    0.00    3692/878913      std::_List_iterator<corner>::operator->() const [11]
                0.00    0.00      19/19          sortOutImpossibleCorners(int*, std::__cxx11::list<corner, std::allocator<corner> >&, int*, int*) [39]
                0.00    0.00      84/15767       std::__cxx11::list<corner, std::allocator<corner> >::erase(std::_List_const_iterator<corner>) [31]
                0.00    0.00    1909/33437       std::__cxx11::list<corner, std::allocator<corner> >::begin() [99]
                0.00    0.00     574/200608      std::__cxx11::list<corner, std::allocator<corner> >::end() [56]
                0.00    0.00     574/839         std::_List_iterator<corner>::operator==(std::_List_iterator<corner> const&) const [239]
                0.00    0.00     551/6045        std::__cxx11::list<corner, std::allocator<corner> >::size() const [171]
                0.00    0.00     441/160675      std::_List_iterator<corner>::operator++(int) [59]
                0.00    0.00      84/15767       std::_List_const_iterator<corner>::_List_const_iterator(std::_List_iterator<corner> const&) [159]
                0.00    0.00      19/58          askTwo(int*, int*, int*, int*) [312]
                0.00    0.00       7/7           getCornerInfo(int (*) [3], int) [343]
-----------------------------------------------
                0.00    0.00      19/19          findCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int*, int) [17]
[18]     1.6    0.00    0.00      19         getNextCornerQuestion(std::__cxx11::list<corner, std::allocator<corner> >&, int*, int*) [18]
                0.00    0.00   43761/878913      std::_List_iterator<corner>::operator->() const [11]
                0.00    0.00     231/231         containsCorner(std::__cxx11::list<corner, std::allocator<corner> >&, int, int) [37]
                0.00    0.00    5430/200608      std::__cxx11::list<corner, std::allocator<corner> >::end() [56]
                0.00    0.00    5430/161737      std::_List_iterator<corner>::operator!=(std::_List_iterator<corner> const&) const [58]
                0.00    0.00    4860/160675      std::_List_iterator<corner>::operator++(int) [59]
                0.00    0.00     589/33437       std::__cxx11::list<corner, std::allocator<corner> >::begin() [99]
-----------------------------------------------
                0.00    0.00   38032/38032       void std::__cxx11::list<corner, std::allocator<corner> >::_M_insert<corner const&>(std::_List_iterator<corner>, corner const&) [20]
[19]     1.3    0.00    0.00   38032         std::_List_node<corner>* std::__cxx11::list<corner, std::allocator<corner> >::_M_create_node<corner const&>(corner const&) [19]
                0.00    0.00   38032/954967      std::_List_node<corner>::_M_valptr() [9]
                0.00    0.00   38032/38032       std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_get_node() [90]
                0.00    0.00   38032/76054       std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_get_Node_allocator() [68]
                0.00    0.00   38032/38032       std::__allocated_ptr<std::allocator<std::_List_node<corner> > >::__allocated_ptr(std::allocator<std::_List_node<corner> >&, std::_List_node<corner>*) [85]
                0.00    0.00   38032/152128      corner const& std::forward<corner const&>(std::remove_reference<corner const&>::type&) [60]
                0.00    0.00   38032/38032       void std::allocator_traits<std::allocator<std::_List_node<corner> > >::construct<corner, corner const&>(std::allocator<std::_List_node<corner> >&, corner*, corner const&) [89]
                0.00    0.00   38032/38032       std::__allocated_ptr<std::allocator<std::_List_node<corner> > >::operator=(decltype(nullptr)) [87]
                0.00    0.00   38032/38032       std::__allocated_ptr<std::allocator<std::_List_node<corner> > >::~__allocated_ptr() [86]
-----------------------------------------------
                0.00    0.00   38032/38032       std::__cxx11::list<corner, std::allocator<corner> >::push_back(corner const&) [21]
[20]     1.3    0.00    0.00   38032         void std::__cxx11::list<corner, std::allocator<corner> >::_M_insert<corner const&>(std::_List_iterator<corner>, corner const&) [20]
                0.00    0.00   38032/38032       std::_List_node<corner>* std::__cxx11::list<corner, std::allocator<corner> >::_M_create_node<corner const&>(corner const&) [19]
                0.00    0.00   38032/152128      corner const& std::forward<corner const&>(std::remove_reference<corner const&>::type&) [60]
                0.00    0.00   38032/38032       std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_inc_size(unsigned long) [91]
-----------------------------------------------
                0.00    0.00     192/38032       buildCombOfCorner(std::__cxx11::list<corner, std::allocator<corner> >*, int*) [41]
                0.00    0.00    1760/38032       fillCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [3]
                0.00    0.00   36080/38032       CopyListCorners(std::__cxx11::list<corner, std::allocator<corner> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [13]
[21]     1.3    0.00    0.00   38032         std::__cxx11::list<corner, std::allocator<corner> >::push_back(corner const&) [21]
                0.00    0.00   38032/38032       void std::__cxx11::list<corner, std::allocator<corner> >::_M_insert<corner const&>(std::_List_iterator<corner>, corner const&) [20]
                0.00    0.00   38032/200608      std::__cxx11::list<corner, std::allocator<corner> >::end() [56]
-----------------------------------------------
                0.00    0.00   15987/15987       void std::__cxx11::list<edge, std::allocator<edge> >::_M_insert<edge const&>(std::_List_iterator<edge>, edge const&) [23]
[22]     1.0    0.00    0.00   15987         std::_List_node<edge>* std::__cxx11::list<edge, std::allocator<edge> >::_M_create_node<edge const&>(edge const&) [22]
                0.00    0.00   15987/557525      std::_List_node<edge>::_M_valptr() [5]
                0.00    0.00   15987/15987       std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_get_node() [149]
                0.00    0.00   15987/31956       std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_get_Node_allocator() [100]
                0.00    0.00   15987/15987       std::__allocated_ptr<std::allocator<std::_List_node<edge> > >::__allocated_ptr(std::allocator<std::_List_node<edge> >&, std::_List_node<edge>*) [144]
                0.00    0.00   15987/63948       edge const& std::forward<edge const&>(std::remove_reference<edge const&>::type&) [70]
                0.00    0.00   15987/15987       void std::allocator_traits<std::allocator<std::_List_node<edge> > >::construct<edge, edge const&>(std::allocator<std::_List_node<edge> >&, edge*, edge const&) [148]
                0.00    0.00   15987/15987       std::__allocated_ptr<std::allocator<std::_List_node<edge> > >::operator=(decltype(nullptr)) [146]
                0.00    0.00   15987/15987       std::__allocated_ptr<std::allocator<std::_List_node<edge> > >::~__allocated_ptr() [145]
-----------------------------------------------
                0.00    0.00   15987/15987       std::__cxx11::list<edge, std::allocator<edge> >::push_back(edge const&) [24]
[23]     1.0    0.00    0.00   15987         void std::__cxx11::list<edge, std::allocator<edge> >::_M_insert<edge const&>(std::_List_iterator<edge>, edge const&) [23]
                0.00    0.00   15987/15987       std::_List_node<edge>* std::__cxx11::list<edge, std::allocator<edge> >::_M_create_node<edge const&>(edge const&) [22]
                0.00    0.00   15987/63948       edge const& std::forward<edge const&>(std::remove_reference<edge const&>::type&) [70]
                0.00    0.00   15987/15987       std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_inc_size(unsigned long) [150]
-----------------------------------------------
                0.00    0.00     288/15987       buildCombOfEdge(std::__cxx11::list<edge, std::allocator<edge> >*, int*) [40]
                0.00    0.00    2640/15987       fillEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [4]
                0.00    0.00   13059/15987       CopyListEdges(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<edge, std::allocator<edge> >*) [16]
[24]     1.0    0.00    0.00   15987         std::__cxx11::list<edge, std::allocator<edge> >::push_back(edge const&) [24]
                0.00    0.00   15987/15987       void std::__cxx11::list<edge, std::allocator<edge> >::_M_insert<edge const&>(std::_List_iterator<edge>, edge const&) [23]
                0.00    0.00   15987/166943      std::__cxx11::list<edge, std::allocator<edge> >::end() [57]
-----------------------------------------------
                0.00    0.00       8/1988        std::__cxx11::list<corner, std::allocator<corner> >::clear() [42]
                0.00    0.00    1980/1988        std::__cxx11::_List_base<corner, std::allocator<corner> >::~_List_base() [26]
[25]     0.8    0.00    0.00    1988         std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_clear() [25]
                0.00    0.00   22255/954967      std::_List_node<corner>::_M_valptr() [9]
                0.00    0.00   22255/76054       std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_get_Node_allocator() [68]
                0.00    0.00   22255/38022       void std::allocator_traits<std::allocator<std::_List_node<corner> > >::destroy<corner>(std::allocator<std::_List_node<corner> >&, corner*) [96]
                0.00    0.00   22255/38022       std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_put_node(std::_List_node<corner>*) [97]
-----------------------------------------------
                0.00    0.00    1980/1980        std::__cxx11::list<corner, std::allocator<corner> >::~list() [27]
[26]     0.8    0.00    0.00    1980         std::__cxx11::_List_base<corner, std::allocator<corner> >::~_List_base() [26]
                0.00    0.00    1980/1988        std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_clear() [25]
                0.00    0.00    1980/1980        std::__cxx11::_List_base<corner, std::allocator<corner> >::_List_impl::~_List_impl() [219]
-----------------------------------------------
                0.00    0.00     220/1980        fillCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [3]
                0.00    0.00    1760/1980        fillrandomcube(int*, int*, std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int (*) [3][3]) [2]
[27]     0.8    0.00    0.00    1980         std::__cxx11::list<corner, std::allocator<corner> >::~list() [27]
                0.00    0.00    1980/1980        std::__cxx11::_List_base<corner, std::allocator<corner> >::~_List_base() [26]
-----------------------------------------------
                0.00    0.00      12/2872        std::__cxx11::list<edge, std::allocator<edge> >::clear() [43]
                0.00    0.00    2860/2872        std::__cxx11::_List_base<edge, std::allocator<edge> >::~_List_base() [29]
[28]     0.7    0.00    0.00    2872         std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_clear() [28]
                0.00    0.00   10989/557525      std::_List_node<edge>::_M_valptr() [5]
                0.00    0.00   10989/31956       std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_get_Node_allocator() [100]
                0.00    0.00   10989/15969       void std::allocator_traits<std::allocator<std::_List_node<edge> > >::destroy<edge>(std::allocator<std::_List_node<edge> >&, edge*) [155]
                0.00    0.00   10989/15969       std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_put_node(std::_List_node<edge>*) [156]
-----------------------------------------------
                0.00    0.00    2860/2860        std::__cxx11::list<edge, std::allocator<edge> >::~list() [30]
[29]     0.7    0.00    0.00    2860         std::__cxx11::_List_base<edge, std::allocator<edge> >::~_List_base() [29]
                0.00    0.00    2860/2872        std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_clear() [28]
                0.00    0.00    2860/2860        std::__cxx11::_List_base<edge, std::allocator<edge> >::_List_impl::~_List_impl() [203]
-----------------------------------------------
                0.00    0.00     220/2860        fillEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [4]
                0.00    0.00    2640/2860        fillrandomcube(int*, int*, std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int (*) [3][3]) [2]
[30]     0.7    0.00    0.00    2860         std::__cxx11::list<edge, std::allocator<edge> >::~list() [30]
                0.00    0.00    2860/2860        std::__cxx11::_List_base<edge, std::allocator<edge> >::~_List_base() [29]
-----------------------------------------------
                0.00    0.00      84/15767       findCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int*, int) [17]
                0.00    0.00      98/15767       sortOutImpossibleCorners(int*, std::__cxx11::list<corner, std::allocator<corner> >&, int*, int*) [39]
                0.00    0.00   15585/15767       fillCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [3]
[31]     0.6    0.00    0.00   15767         std::__cxx11::list<corner, std::allocator<corner> >::erase(std::_List_const_iterator<corner>) [31]
                0.00    0.00   15767/15767       std::__cxx11::list<corner, std::allocator<corner> >::_M_erase(std::_List_iterator<corner>) [32]
                0.00    0.00   15767/265579      std::_List_iterator<corner>::_List_iterator(std::__detail::_List_node_base*) [54]
                0.00    0.00   15767/15767       std::_List_const_iterator<corner>::_M_const_cast() const [158]
-----------------------------------------------
                0.00    0.00   15767/15767       std::__cxx11::list<corner, std::allocator<corner> >::erase(std::_List_const_iterator<corner>) [31]
[32]     0.6    0.00    0.00   15767         std::__cxx11::list<corner, std::allocator<corner> >::_M_erase(std::_List_iterator<corner>) [32]
                0.00    0.00   15767/954967      std::_List_node<corner>::_M_valptr() [9]
                0.00    0.00   15767/15767       std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_dec_size(unsigned long) [160]
                0.00    0.00   15767/76054       std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_get_Node_allocator() [68]
                0.00    0.00   15767/38022       void std::allocator_traits<std::allocator<std::_List_node<corner> > >::destroy<corner>(std::allocator<std::_List_node<corner> >&, corner*) [96]
                0.00    0.00   15767/38022       std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_put_node(std::_List_node<corner>*) [97]
-----------------------------------------------
                0.00    0.00      18/18          main [1]
[33]     0.4    0.00    0.00      18         printlist(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [33]
                0.00    0.00    7680/878913      std::_List_iterator<corner>::operator->() const [11]
                0.00    0.00    2418/525569      std::_List_iterator<edge>::operator->() const [10]
                0.00    0.00    2704/200608      std::__cxx11::list<corner, std::allocator<corner> >::end() [56]
                0.00    0.00    2704/161737      std::_List_iterator<corner>::operator!=(std::_List_iterator<corner> const&) const [58]
                0.00    0.00    2560/160675      std::_List_iterator<corner>::operator++(int) [59]
                0.00    0.00    1425/166943      std::__cxx11::list<edge, std::allocator<edge> >::end() [57]
                0.00    0.00    1425/149300      std::_List_iterator<edge>::operator!=(std::_List_iterator<edge> const&) const [61]
                0.00    0.00    1209/132023      std::_List_iterator<edge>::operator++(int) [65]
                0.00    0.00     216/36735       std::__cxx11::list<edge, std::allocator<edge> >::begin() [98]
                0.00    0.00     144/33437       std::__cxx11::list<corner, std::allocator<corner> >::begin() [99]
-----------------------------------------------
                0.00    0.00     130/4980        findEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int*, int) [14]
                0.00    0.00     140/4980        sortOutImpossibleEdges(int*, std::__cxx11::list<edge, std::allocator<edge> >&, int*, int*) [38]
                0.00    0.00    4710/4980        fillEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [4]
[34]     0.3    0.00    0.00    4980         std::__cxx11::list<edge, std::allocator<edge> >::erase(std::_List_const_iterator<edge>) [34]
                0.00    0.00    4980/4980        std::__cxx11::list<edge, std::allocator<edge> >::_M_erase(std::_List_iterator<edge>) [35]
                0.00    0.00    4980/213638      std::_List_iterator<edge>::_List_iterator(std::__detail::_List_node_base*) [55]
                0.00    0.00    4980/4980        std::_List_const_iterator<edge>::_M_const_cast() const [175]
-----------------------------------------------
                0.00    0.00    4980/4980        std::__cxx11::list<edge, std::allocator<edge> >::erase(std::_List_const_iterator<edge>) [34]
[35]     0.3    0.00    0.00    4980         std::__cxx11::list<edge, std::allocator<edge> >::_M_erase(std::_List_iterator<edge>) [35]
                0.00    0.00    4980/557525      std::_List_node<edge>::_M_valptr() [5]
                0.00    0.00    4980/4980        std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_dec_size(unsigned long) [177]
                0.00    0.00    4980/15969       void std::allocator_traits<std::allocator<std::_List_node<edge> > >::destroy<edge>(std::allocator<std::_List_node<edge> >&, edge*) [155]
                0.00    0.00    4980/31956       std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_get_Node_allocator() [100]
                0.00    0.00    4980/15969       std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_put_node(std::_List_node<edge>*) [156]
-----------------------------------------------
                0.00    0.00     324/324         getNextEdgeQuestion(std::__cxx11::list<edge, std::allocator<edge> >&, int*, int*) [15]
[36]     0.1    0.00    0.00     324         containsEdge(std::__cxx11::list<edge, std::allocator<edge> >&, int, int) [36]
                0.00    0.00    1939/525569      std::_List_iterator<edge>::operator->() const [10]
                0.00    0.00    1810/166943      std::__cxx11::list<edge, std::allocator<edge> >::end() [57]
                0.00    0.00    1810/149300      std::_List_iterator<edge>::operator!=(std::_List_iterator<edge> const&) const [61]
                0.00    0.00    1486/132023      std::_List_iterator<edge>::operator++(int) [65]
                0.00    0.00     324/36735       std::__cxx11::list<edge, std::allocator<edge> >::begin() [98]
-----------------------------------------------
                0.00    0.00     231/231         getNextCornerQuestion(std::__cxx11::list<corner, std::allocator<corner> >&, int*, int*) [18]
[37]     0.1    0.00    0.00     231         containsCorner(std::__cxx11::list<corner, std::allocator<corner> >&, int, int) [37]
                0.00    0.00    2003/878913      std::_List_iterator<corner>::operator->() const [11]
                0.00    0.00    1834/200608      std::__cxx11::list<corner, std::allocator<corner> >::end() [56]
                0.00    0.00    1834/161737      std::_List_iterator<corner>::operator!=(std::_List_iterator<corner> const&) const [58]
                0.00    0.00    1603/160675      std::_List_iterator<corner>::operator++(int) [59]
                0.00    0.00     231/33437       std::__cxx11::list<corner, std::allocator<corner> >::begin() [99]
-----------------------------------------------
                0.00    0.00      28/28          findEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int*, int) [14]
[38]     0.1    0.00    0.00      28         sortOutImpossibleEdges(int*, std::__cxx11::list<edge, std::allocator<edge> >&, int*, int*) [38]
                0.00    0.00    1000/525569      std::_List_iterator<edge>::operator->() const [10]
                0.00    0.00     140/4980        std::__cxx11::list<edge, std::allocator<edge> >::erase(std::_List_const_iterator<edge>) [34]
                0.00    0.00     428/990         sortAnswer(int*) [236]
                0.00    0.00     363/166943      std::__cxx11::list<edge, std::allocator<edge> >::end() [57]
                0.00    0.00     363/1656        std::_List_iterator<edge>::operator==(std::_List_iterator<edge> const&) const [227]
                0.00    0.00     217/10698       std::__cxx11::list<edge, std::allocator<edge> >::size() const [165]
                0.00    0.00     140/4980        std::_List_const_iterator<edge>::_List_const_iterator(std::_List_iterator<edge> const&) [176]
                0.00    0.00      74/132023      std::_List_iterator<edge>::operator++(int) [65]
                0.00    0.00      28/28          std::_List_iterator<edge>::_List_iterator() [319]
                0.00    0.00      28/36735       std::__cxx11::list<edge, std::allocator<edge> >::begin() [98]
-----------------------------------------------
                0.00    0.00      19/19          findCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int*, int) [17]
[39]     0.0    0.00    0.00      19         sortOutImpossibleCorners(int*, std::__cxx11::list<corner, std::allocator<corner> >&, int*, int*) [39]
                0.00    0.00     743/878913      std::_List_iterator<corner>::operator->() const [11]
                0.00    0.00      98/15767       std::__cxx11::list<corner, std::allocator<corner> >::erase(std::_List_const_iterator<corner>) [31]
                0.00    0.00     318/990         sortAnswer(int*) [236]
                0.00    0.00     265/200608      std::__cxx11::list<corner, std::allocator<corner> >::end() [56]
                0.00    0.00     265/839         std::_List_iterator<corner>::operator==(std::_List_iterator<corner> const&) const [239]
                0.00    0.00     161/6045        std::__cxx11::list<corner, std::allocator<corner> >::size() const [171]
                0.00    0.00      98/15767       std::_List_const_iterator<corner>::_List_const_iterator(std::_List_iterator<corner> const&) [159]
                0.00    0.00      61/160675      std::_List_iterator<corner>::operator++(int) [59]
                0.00    0.00      19/33437       std::__cxx11::list<corner, std::allocator<corner> >::begin() [99]
                0.00    0.00      19/19          std::_List_iterator<corner>::_List_iterator() [325]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[40]     0.0    0.00    0.00       1         buildCombOfEdge(std::__cxx11::list<edge, std::allocator<edge> >*, int*) [40]
                0.00    0.00     288/15987       std::__cxx11::list<edge, std::allocator<edge> >::push_back(edge const&) [24]
                0.00    0.00      12/36735       std::__cxx11::list<edge, std::allocator<edge> >::begin() [98]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[41]     0.0    0.00    0.00       1         buildCombOfCorner(std::__cxx11::list<corner, std::allocator<corner> >*, int*) [41]
                0.00    0.00     192/38032       std::__cxx11::list<corner, std::allocator<corner> >::push_back(corner const&) [21]
-----------------------------------------------
                0.00    0.00       8/8           main [1]
[42]     0.0    0.00    0.00       8         std::__cxx11::list<corner, std::allocator<corner> >::clear() [42]
                0.00    0.00       8/1988        std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_clear() [25]
                0.00    0.00       8/1996        std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_init() [211]
-----------------------------------------------
                0.00    0.00      12/12          main [1]
[43]     0.0    0.00    0.00      12         std::__cxx11::list<edge, std::allocator<edge> >::clear() [43]
                0.00    0.00      12/2872        std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_clear() [28]
                0.00    0.00      12/2884        std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_init() [195]
-----------------------------------------------
                                                 <spontaneous>
[44]     0.0    0.00    0.00                 atexit [44]
-----------------------------------------------
                                                 <spontaneous>
[45]     0.0    0.00    0.00                 data_start [45]
-----------------------------------------------
                                                 <spontaneous>
[46]     0.0    0.00    0.00                 deregister_tm_clones [46]
-----------------------------------------------
                                                 <spontaneous>
[47]     0.0    0.00    0.00                 etext [47]
-----------------------------------------------
                                                 <spontaneous>
[48]     0.0    0.00    0.00                 frame_dummy [48]
-----------------------------------------------
                                                 <spontaneous>
[49]     0.0    0.00    0.00                 register_tm_clones [49]
-----------------------------------------------
                0.00    0.00  954967/954967      std::_List_node<corner>::_M_valptr() [9]
[50]     0.0    0.00    0.00  954967         __gnu_cxx::__aligned_membuf<corner>::_M_ptr() [50]
                0.00    0.00  954967/954967      __gnu_cxx::__aligned_membuf<corner>::_M_addr() [51]
-----------------------------------------------
                0.00    0.00  954967/954967      __gnu_cxx::__aligned_membuf<corner>::_M_ptr() [50]
[51]     0.0    0.00    0.00  954967         __gnu_cxx::__aligned_membuf<corner>::_M_addr() [51]
-----------------------------------------------
                0.00    0.00  557525/557525      std::_List_node<edge>::_M_valptr() [5]
[52]     0.0    0.00    0.00  557525         __gnu_cxx::__aligned_membuf<edge>::_M_ptr() [52]
                0.00    0.00  557525/557525      __gnu_cxx::__aligned_membuf<edge>::_M_addr() [53]
-----------------------------------------------
                0.00    0.00  557525/557525      __gnu_cxx::__aligned_membuf<edge>::_M_ptr() [52]
[53]     0.0    0.00    0.00  557525         __gnu_cxx::__aligned_membuf<edge>::_M_addr() [53]
-----------------------------------------------
                0.00    0.00   15767/265579      std::__cxx11::list<corner, std::allocator<corner> >::erase(std::_List_const_iterator<corner>) [31]
                0.00    0.00   15767/265579      std::_List_const_iterator<corner>::_M_const_cast() const [158]
                0.00    0.00   33437/265579      std::__cxx11::list<corner, std::allocator<corner> >::begin() [99]
                0.00    0.00  200608/265579      std::__cxx11::list<corner, std::allocator<corner> >::end() [56]
[54]     0.0    0.00    0.00  265579         std::_List_iterator<corner>::_List_iterator(std::__detail::_List_node_base*) [54]
-----------------------------------------------
                0.00    0.00    4980/213638      std::__cxx11::list<edge, std::allocator<edge> >::erase(std::_List_const_iterator<edge>) [34]
                0.00    0.00    4980/213638      std::_List_const_iterator<edge>::_M_const_cast() const [175]
                0.00    0.00   36735/213638      std::__cxx11::list<edge, std::allocator<edge> >::begin() [98]
                0.00    0.00  166943/213638      std::__cxx11::list<edge, std::allocator<edge> >::end() [57]
[55]     0.0    0.00    0.00  213638         std::_List_iterator<edge>::_List_iterator(std::__detail::_List_node_base*) [55]
-----------------------------------------------
                0.00    0.00     265/200608      sortOutImpossibleCorners(int*, std::__cxx11::list<corner, std::allocator<corner> >&, int*, int*) [39]
                0.00    0.00     574/200608      findCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int*, int) [17]
                0.00    0.00    1834/200608      containsCorner(std::__cxx11::list<corner, std::allocator<corner> >&, int, int) [37]
                0.00    0.00    2704/200608      printlist(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [33]
                0.00    0.00    5430/200608      getNextCornerQuestion(std::__cxx11::list<corner, std::allocator<corner> >&, int*, int*) [18]
                0.00    0.00   37840/200608      CopyListCorners(std::__cxx11::list<corner, std::allocator<corner> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [13]
                0.00    0.00   38032/200608      std::__cxx11::list<corner, std::allocator<corner> >::push_back(corner const&) [21]
                0.00    0.00  113929/200608      fillCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [3]
[56]     0.0    0.00    0.00  200608         std::__cxx11::list<corner, std::allocator<corner> >::end() [56]
                0.00    0.00  200608/265579      std::_List_iterator<corner>::_List_iterator(std::__detail::_List_node_base*) [54]
-----------------------------------------------
                0.00    0.00     363/166943      sortOutImpossibleEdges(int*, std::__cxx11::list<edge, std::allocator<edge> >&, int*, int*) [38]
                0.00    0.00    1293/166943      findEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int*, int) [14]
                0.00    0.00    1425/166943      printlist(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [33]
                0.00    0.00    1810/166943      containsEdge(std::__cxx11::list<edge, std::allocator<edge> >&, int, int) [36]
                0.00    0.00    7350/166943      getNextEdgeQuestion(std::__cxx11::list<edge, std::allocator<edge> >&, int*, int*) [15]
                0.00    0.00   15699/166943      CopyListEdges(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<edge, std::allocator<edge> >*) [16]
                0.00    0.00   15987/166943      std::__cxx11::list<edge, std::allocator<edge> >::push_back(edge const&) [24]
                0.00    0.00  123016/166943      fillEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [4]
[57]     0.0    0.00    0.00  166943         std::__cxx11::list<edge, std::allocator<edge> >::end() [57]
                0.00    0.00  166943/213638      std::_List_iterator<edge>::_List_iterator(std::__detail::_List_node_base*) [55]
-----------------------------------------------
                0.00    0.00    1834/161737      containsCorner(std::__cxx11::list<corner, std::allocator<corner> >&, int, int) [37]
                0.00    0.00    2704/161737      printlist(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [33]
                0.00    0.00    5430/161737      getNextCornerQuestion(std::__cxx11::list<corner, std::allocator<corner> >&, int*, int*) [18]
                0.00    0.00   37840/161737      CopyListCorners(std::__cxx11::list<corner, std::allocator<corner> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [13]
                0.00    0.00  113929/161737      fillCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [3]
[58]     0.0    0.00    0.00  161737         std::_List_iterator<corner>::operator!=(std::_List_iterator<corner> const&) const [58]
-----------------------------------------------
                0.00    0.00      61/160675      sortOutImpossibleCorners(int*, std::__cxx11::list<corner, std::allocator<corner> >&, int*, int*) [39]
                0.00    0.00     441/160675      findCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int*, int) [17]
                0.00    0.00    1603/160675      containsCorner(std::__cxx11::list<corner, std::allocator<corner> >&, int, int) [37]
                0.00    0.00    2560/160675      printlist(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [33]
                0.00    0.00    4860/160675      getNextCornerQuestion(std::__cxx11::list<corner, std::allocator<corner> >&, int*, int*) [18]
                0.00    0.00   36080/160675      CopyListCorners(std::__cxx11::list<corner, std::allocator<corner> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [13]
                0.00    0.00  115070/160675      fillCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [3]
[59]     0.0    0.00    0.00  160675         std::_List_iterator<corner>::operator++(int) [59]
-----------------------------------------------
                0.00    0.00   38032/152128      void std::__cxx11::list<corner, std::allocator<corner> >::_M_insert<corner const&>(std::_List_iterator<corner>, corner const&) [20]
                0.00    0.00   38032/152128      std::_List_node<corner>* std::__cxx11::list<corner, std::allocator<corner> >::_M_create_node<corner const&>(corner const&) [19]
                0.00    0.00   38032/152128      void std::allocator_traits<std::allocator<std::_List_node<corner> > >::construct<corner, corner const&>(std::allocator<std::_List_node<corner> >&, corner*, corner const&) [89]
                0.00    0.00   38032/152128      void __gnu_cxx::new_allocator<std::_List_node<corner> >::construct<corner, corner const&>(corner*, corner const&) [83]
[60]     0.0    0.00    0.00  152128         corner const& std::forward<corner const&>(std::remove_reference<corner const&>::type&) [60]
-----------------------------------------------
                0.00    0.00    1425/149300      printlist(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [33]
                0.00    0.00    1810/149300      containsEdge(std::__cxx11::list<edge, std::allocator<edge> >&, int, int) [36]
                0.00    0.00    7350/149300      getNextEdgeQuestion(std::__cxx11::list<edge, std::allocator<edge> >&, int*, int*) [15]
                0.00    0.00   15699/149300      CopyListEdges(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<edge, std::allocator<edge> >*) [16]
                0.00    0.00  123016/149300      fillEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [4]
[61]     0.0    0.00    0.00  149300         std::_List_iterator<edge>::operator!=(std::_List_iterator<edge> const&) const [61]
-----------------------------------------------
                0.00    0.00  141096/141096      std::_List_node<unsigned long>::_M_valptr() [64]
[62]     0.0    0.00    0.00  141096         __gnu_cxx::__aligned_membuf<unsigned long>::_M_ptr() [62]
                0.00    0.00  141096/141096      __gnu_cxx::__aligned_membuf<unsigned long>::_M_addr() [63]
-----------------------------------------------
                0.00    0.00  141096/141096      __gnu_cxx::__aligned_membuf<unsigned long>::_M_ptr() [62]
[63]     0.0    0.00    0.00  141096         __gnu_cxx::__aligned_membuf<unsigned long>::_M_addr() [63]
-----------------------------------------------
                0.00    0.00       1/141096      std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_set_size(unsigned long) [356]
                0.00    0.00      89/141096      std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_dec_size(unsigned long) [302]
                0.00    0.00      90/141096      std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_inc_size(unsigned long) [293]
                0.00    0.00    1996/141096      std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_set_size(unsigned long) [210]
                0.00    0.00    2884/141096      std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_set_size(unsigned long) [194]
                0.00    0.00    4980/141096      std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_dec_size(unsigned long) [177]
                0.00    0.00   15767/141096      std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_dec_size(unsigned long) [160]
                0.00    0.00   15987/141096      std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_inc_size(unsigned long) [150]
                0.00    0.00   20295/141096      std::__cxx11::_List_base<int, std::allocator<int> >::_M_inc_size(unsigned long) [6]
                0.00    0.00   20295/141096      std::__cxx11::_List_base<int, std::allocator<int> >::_M_dec_size(unsigned long) [129]
                0.00    0.00   20680/141096      std::__cxx11::_List_base<int, std::allocator<int> >::_M_set_size(unsigned long) [108]
                0.00    0.00   38032/141096      std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_inc_size(unsigned long) [91]
[64]     0.0    0.00    0.00  141096         std::_List_node<unsigned long>::_M_valptr() [64]
                0.00    0.00  141096/141096      __gnu_cxx::__aligned_membuf<unsigned long>::_M_ptr() [62]
-----------------------------------------------
                0.00    0.00      74/132023      sortOutImpossibleEdges(int*, std::__cxx11::list<edge, std::allocator<edge> >&, int*, int*) [38]
                0.00    0.00    1054/132023      findEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int*, int) [14]
                0.00    0.00    1209/132023      printlist(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [33]
                0.00    0.00    1486/132023      containsEdge(std::__cxx11::list<edge, std::allocator<edge> >&, int, int) [36]
                0.00    0.00    6510/132023      getNextEdgeQuestion(std::__cxx11::list<edge, std::allocator<edge> >&, int*, int*) [15]
                0.00    0.00   13059/132023      CopyListEdges(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<edge, std::allocator<edge> >*) [16]
                0.00    0.00  108631/132023      fillEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [4]
[65]     0.0    0.00    0.00  132023         std::_List_iterator<edge>::operator++(int) [65]
-----------------------------------------------
                0.00    0.00  123423/123423      void std::__advance<std::_List_iterator<corner>, long>(std::_List_iterator<corner>&, long, std::bidirectional_iterator_tag) [163]
[66]     0.0    0.00    0.00  123423         std::_List_iterator<corner>::operator++() [66]
-----------------------------------------------
                0.00    0.00   20295/81180       void std::__cxx11::list<int, std::allocator<int> >::_M_insert<int const&>(std::_List_iterator<int>, int const&) [7]
                0.00    0.00   20295/81180       std::_List_node<int>* std::__cxx11::list<int, std::allocator<int> >::_M_create_node<int const&>(int const&) [132]
                0.00    0.00   20295/81180       void std::allocator_traits<std::allocator<std::_List_node<int> > >::construct<int, int const&>(std::allocator<std::_List_node<int> >&, int*, int const&) [128]
                0.00    0.00   20295/81180       void __gnu_cxx::new_allocator<std::_List_node<int> >::construct<int, int const&>(int*, int const&) [118]
[67]     0.0    0.00    0.00   81180         int const& std::forward<int const&>(std::remove_reference<int const&>::type&) [67]
-----------------------------------------------
                0.00    0.00   15767/76054       std::__cxx11::list<corner, std::allocator<corner> >::_M_erase(std::_List_iterator<corner>) [32]
                0.00    0.00   22255/76054       std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_clear() [25]
                0.00    0.00   38032/76054       std::_List_node<corner>* std::__cxx11::list<corner, std::allocator<corner> >::_M_create_node<corner const&>(corner const&) [19]
[68]     0.0    0.00    0.00   76054         std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_get_Node_allocator() [68]
-----------------------------------------------
                0.00    0.00      90/74404       void __gnu_cxx::new_allocator<std::_List_node<middle> >::construct<middle, middle const&>(middle*, middle const&) [283]
                0.00    0.00   15987/74404       void __gnu_cxx::new_allocator<std::_List_node<edge> >::construct<edge, edge const&>(edge*, edge const&) [142]
                0.00    0.00   20295/74404       void __gnu_cxx::new_allocator<std::_List_node<int> >::construct<int, int const&>(int*, int const&) [118]
                0.00    0.00   38032/74404       void __gnu_cxx::new_allocator<std::_List_node<corner> >::construct<corner, corner const&>(corner*, corner const&) [83]
[69]     0.0    0.00    0.00   74404         operator new(unsigned long, void*) [69]
-----------------------------------------------
                0.00    0.00   15987/63948       void std::__cxx11::list<edge, std::allocator<edge> >::_M_insert<edge const&>(std::_List_iterator<edge>, edge const&) [23]
                0.00    0.00   15987/63948       std::_List_node<edge>* std::__cxx11::list<edge, std::allocator<edge> >::_M_create_node<edge const&>(edge const&) [22]
                0.00    0.00   15987/63948       void std::allocator_traits<std::allocator<std::_List_node<edge> > >::construct<edge, edge const&>(std::allocator<std::_List_node<edge> >&, edge*, edge const&) [148]
                0.00    0.00   15987/63948       void __gnu_cxx::new_allocator<std::_List_node<edge> >::construct<edge, edge const&>(edge*, edge const&) [142]
[70]     0.0    0.00    0.00   63948         edge const& std::forward<edge const&>(std::remove_reference<edge const&>::type&) [70]
-----------------------------------------------
                0.00    0.00   60885/60885       std::_List_node<int>::_M_valptr() [73]
[71]     0.0    0.00    0.00   60885         __gnu_cxx::__aligned_membuf<int>::_M_ptr() [71]
                0.00    0.00   60885/60885       __gnu_cxx::__aligned_membuf<int>::_M_addr() [72]
-----------------------------------------------
                0.00    0.00   60885/60885       __gnu_cxx::__aligned_membuf<int>::_M_ptr() [71]
[72]     0.0    0.00    0.00   60885         __gnu_cxx::__aligned_membuf<int>::_M_addr() [72]
-----------------------------------------------
                0.00    0.00   20295/60885       std::_List_iterator<int>::operator*() const [120]
                0.00    0.00   20295/60885       std::__cxx11::list<int, std::allocator<int> >::_M_erase(std::_List_iterator<int>) [134]
                0.00    0.00   20295/60885       std::_List_node<int>* std::__cxx11::list<int, std::allocator<int> >::_M_create_node<int const&>(int const&) [132]
[73]     0.0    0.00    0.00   60885         std::_List_node<int>::_M_valptr() [73]
                0.00    0.00   60885/60885       __gnu_cxx::__aligned_membuf<int>::_M_ptr() [71]
-----------------------------------------------
                0.00    0.00   20295/60885       std::__cxx11::list<int, std::allocator<int> >::pop_back() [135]
                0.00    0.00   40590/60885       std::__cxx11::list<int, std::allocator<int> >::end() [81]
[74]     0.0    0.00    0.00   60885         std::_List_iterator<int>::_List_iterator(std::__detail::_List_node_base*) [74]
-----------------------------------------------
                0.00    0.00   57740/57740       std::_List_node<unsigned long>::_M_valptr() const [77]
[75]     0.0    0.00    0.00   57740         __gnu_cxx::__aligned_membuf<unsigned long>::_M_ptr() const [75]
                0.00    0.00   57740/57740       __gnu_cxx::__aligned_membuf<unsigned long>::_M_addr() const [76]
-----------------------------------------------
                0.00    0.00   57740/57740       __gnu_cxx::__aligned_membuf<unsigned long>::_M_ptr() const [75]
[76]     0.0    0.00    0.00   57740         __gnu_cxx::__aligned_membuf<unsigned long>::_M_addr() const [76]
-----------------------------------------------
                0.00    0.00      22/57740       std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_node_count() const [323]
                0.00    0.00    6045/57740       std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_node_count() const [170]
                0.00    0.00   10698/57740       std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_node_count() const [164]
                0.00    0.00   40975/57740       std::__cxx11::_List_base<int, std::allocator<int> >::_M_node_count() const [78]
[77]     0.0    0.00    0.00   57740         std::_List_node<unsigned long>::_M_valptr() const [77]
                0.00    0.00   57740/57740       __gnu_cxx::__aligned_membuf<unsigned long>::_M_ptr() const [75]
-----------------------------------------------
                0.00    0.00   40975/40975       std::__cxx11::list<int, std::allocator<int> >::size() const [79]
[78]     0.0    0.00    0.00   40975         std::__cxx11::_List_base<int, std::allocator<int> >::_M_node_count() const [78]
                0.00    0.00   40975/57740       std::_List_node<unsigned long>::_M_valptr() const [77]
-----------------------------------------------
                0.00    0.00   19230/40975       fillEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [4]
                0.00    0.00   21745/40975       fillCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [3]
[79]     0.0    0.00    0.00   40975         std::__cxx11::list<int, std::allocator<int> >::size() const [79]
                0.00    0.00   40975/40975       std::__cxx11::_List_base<int, std::allocator<int> >::_M_node_count() const [78]
-----------------------------------------------
                0.00    0.00   20295/40590       std::__cxx11::list<int, std::allocator<int> >::_M_erase(std::_List_iterator<int>) [134]
                0.00    0.00   20295/40590       std::_List_node<int>* std::__cxx11::list<int, std::allocator<int> >::_M_create_node<int const&>(int const&) [132]
[80]     0.0    0.00    0.00   40590         std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() [80]
-----------------------------------------------
                0.00    0.00   20295/40590       std::__cxx11::list<int, std::allocator<int> >::push_back(int const&) [8]
                0.00    0.00   20295/40590       std::__cxx11::list<int, std::allocator<int> >::back() [133]
[81]     0.0    0.00    0.00   40590         std::__cxx11::list<int, std::allocator<int> >::end() [81]
                0.00    0.00   40590/60885       std::_List_iterator<int>::_List_iterator(std::__detail::_List_node_base*) [74]
-----------------------------------------------
                0.00    0.00   38032/38032       std::allocator_traits<std::allocator<std::_List_node<corner> > >::allocate(std::allocator<std::_List_node<corner> >&, unsigned long) [88]
[82]     0.0    0.00    0.00   38032         __gnu_cxx::new_allocator<std::_List_node<corner> >::allocate(unsigned long, void const*) [82]
                0.00    0.00   38032/38032       __gnu_cxx::new_allocator<std::_List_node<corner> >::max_size() const [84]
-----------------------------------------------
                0.00    0.00   38032/38032       void std::allocator_traits<std::allocator<std::_List_node<corner> > >::construct<corner, corner const&>(std::allocator<std::_List_node<corner> >&, corner*, corner const&) [89]
[83]     0.0    0.00    0.00   38032         void __gnu_cxx::new_allocator<std::_List_node<corner> >::construct<corner, corner const&>(corner*, corner const&) [83]
                0.00    0.00   38032/152128      corner const& std::forward<corner const&>(std::remove_reference<corner const&>::type&) [60]
                0.00    0.00   38032/74404       operator new(unsigned long, void*) [69]
-----------------------------------------------
                0.00    0.00   38032/38032       __gnu_cxx::new_allocator<std::_List_node<corner> >::allocate(unsigned long, void const*) [82]
[84]     0.0    0.00    0.00   38032         __gnu_cxx::new_allocator<std::_List_node<corner> >::max_size() const [84]
-----------------------------------------------
                0.00    0.00   38032/38032       std::_List_node<corner>* std::__cxx11::list<corner, std::allocator<corner> >::_M_create_node<corner const&>(corner const&) [19]
[85]     0.0    0.00    0.00   38032         std::__allocated_ptr<std::allocator<std::_List_node<corner> > >::__allocated_ptr(std::allocator<std::_List_node<corner> >&, std::_List_node<corner>*) [85]
                0.00    0.00   38032/38032       std::allocator<std::_List_node<corner> >* std::__addressof<std::allocator<std::_List_node<corner> > >(std::allocator<std::_List_node<corner> >&) [92]
-----------------------------------------------
                0.00    0.00   38032/38032       std::_List_node<corner>* std::__cxx11::list<corner, std::allocator<corner> >::_M_create_node<corner const&>(corner const&) [19]
[86]     0.0    0.00    0.00   38032         std::__allocated_ptr<std::allocator<std::_List_node<corner> > >::~__allocated_ptr() [86]
-----------------------------------------------
                0.00    0.00   38032/38032       std::_List_node<corner>* std::__cxx11::list<corner, std::allocator<corner> >::_M_create_node<corner const&>(corner const&) [19]
[87]     0.0    0.00    0.00   38032         std::__allocated_ptr<std::allocator<std::_List_node<corner> > >::operator=(decltype(nullptr)) [87]
-----------------------------------------------
                0.00    0.00   38032/38032       std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_get_node() [90]
[88]     0.0    0.00    0.00   38032         std::allocator_traits<std::allocator<std::_List_node<corner> > >::allocate(std::allocator<std::_List_node<corner> >&, unsigned long) [88]
                0.00    0.00   38032/38032       __gnu_cxx::new_allocator<std::_List_node<corner> >::allocate(unsigned long, void const*) [82]
-----------------------------------------------
                0.00    0.00   38032/38032       std::_List_node<corner>* std::__cxx11::list<corner, std::allocator<corner> >::_M_create_node<corner const&>(corner const&) [19]
[89]     0.0    0.00    0.00   38032         void std::allocator_traits<std::allocator<std::_List_node<corner> > >::construct<corner, corner const&>(std::allocator<std::_List_node<corner> >&, corner*, corner const&) [89]
                0.00    0.00   38032/152128      corner const& std::forward<corner const&>(std::remove_reference<corner const&>::type&) [60]
                0.00    0.00   38032/38032       void __gnu_cxx::new_allocator<std::_List_node<corner> >::construct<corner, corner const&>(corner*, corner const&) [83]
-----------------------------------------------
                0.00    0.00   38032/38032       std::_List_node<corner>* std::__cxx11::list<corner, std::allocator<corner> >::_M_create_node<corner const&>(corner const&) [19]
[90]     0.0    0.00    0.00   38032         std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_get_node() [90]
                0.00    0.00   38032/38032       std::allocator_traits<std::allocator<std::_List_node<corner> > >::allocate(std::allocator<std::_List_node<corner> >&, unsigned long) [88]
-----------------------------------------------
                0.00    0.00   38032/38032       void std::__cxx11::list<corner, std::allocator<corner> >::_M_insert<corner const&>(std::_List_iterator<corner>, corner const&) [20]
[91]     0.0    0.00    0.00   38032         std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_inc_size(unsigned long) [91]
                0.00    0.00   38032/141096      std::_List_node<unsigned long>::_M_valptr() [64]
-----------------------------------------------
                0.00    0.00   38032/38032       std::__allocated_ptr<std::allocator<std::_List_node<corner> > >::__allocated_ptr(std::allocator<std::_List_node<corner> >&, std::_List_node<corner>*) [85]
[92]     0.0    0.00    0.00   38032         std::allocator<std::_List_node<corner> >* std::__addressof<std::allocator<std::_List_node<corner> > >(std::allocator<std::_List_node<corner> >&) [92]
-----------------------------------------------
                0.00    0.00   38022/38022       std::allocator_traits<std::allocator<std::_List_node<corner> > >::deallocate(std::allocator<std::_List_node<corner> >&, std::_List_node<corner>*, unsigned long) [95]
[93]     0.0    0.00    0.00   38022         __gnu_cxx::new_allocator<std::_List_node<corner> >::deallocate(std::_List_node<corner>*, unsigned long) [93]
-----------------------------------------------
                0.00    0.00   38022/38022       void std::allocator_traits<std::allocator<std::_List_node<corner> > >::destroy<corner>(std::allocator<std::_List_node<corner> >&, corner*) [96]
[94]     0.0    0.00    0.00   38022         void __gnu_cxx::new_allocator<std::_List_node<corner> >::destroy<corner>(corner*) [94]
-----------------------------------------------
                0.00    0.00   38022/38022       std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_put_node(std::_List_node<corner>*) [97]
[95]     0.0    0.00    0.00   38022         std::allocator_traits<std::allocator<std::_List_node<corner> > >::deallocate(std::allocator<std::_List_node<corner> >&, std::_List_node<corner>*, unsigned long) [95]
                0.00    0.00   38022/38022       __gnu_cxx::new_allocator<std::_List_node<corner> >::deallocate(std::_List_node<corner>*, unsigned long) [93]
-----------------------------------------------
                0.00    0.00   15767/38022       std::__cxx11::list<corner, std::allocator<corner> >::_M_erase(std::_List_iterator<corner>) [32]
                0.00    0.00   22255/38022       std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_clear() [25]
[96]     0.0    0.00    0.00   38022         void std::allocator_traits<std::allocator<std::_List_node<corner> > >::destroy<corner>(std::allocator<std::_List_node<corner> >&, corner*) [96]
                0.00    0.00   38022/38022       void __gnu_cxx::new_allocator<std::_List_node<corner> >::destroy<corner>(corner*) [94]
-----------------------------------------------
                0.00    0.00   15767/38022       std::__cxx11::list<corner, std::allocator<corner> >::_M_erase(std::_List_iterator<corner>) [32]
                0.00    0.00   22255/38022       std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_clear() [25]
[97]     0.0    0.00    0.00   38022         std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_put_node(std::_List_node<corner>*) [97]
                0.00    0.00   38022/38022       std::allocator_traits<std::allocator<std::_List_node<corner> > >::deallocate(std::allocator<std::_List_node<corner> >&, std::_List_node<corner>*, unsigned long) [95]
-----------------------------------------------
                0.00    0.00      12/36735       buildCombOfEdge(std::__cxx11::list<edge, std::allocator<edge> >*, int*) [40]
                0.00    0.00      28/36735       sortOutImpossibleEdges(int*, std::__cxx11::list<edge, std::allocator<edge> >&, int*, int*) [38]
                0.00    0.00     216/36735       printlist(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [33]
                0.00    0.00     324/36735       containsEdge(std::__cxx11::list<edge, std::allocator<edge> >&, int, int) [36]
                0.00    0.00     868/36735       getNextEdgeQuestion(std::__cxx11::list<edge, std::allocator<edge> >&, int*, int*) [15]
                0.00    0.00    2640/36735       CopyListEdges(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<edge, std::allocator<edge> >*) [16]
                0.00    0.00    2857/36735       findEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int*, int) [14]
                0.00    0.00   29790/36735       fillEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [4]
[98]     0.0    0.00    0.00   36735         std::__cxx11::list<edge, std::allocator<edge> >::begin() [98]
                0.00    0.00   36735/213638      std::_List_iterator<edge>::_List_iterator(std::__detail::_List_node_base*) [55]
-----------------------------------------------
                0.00    0.00      19/33437       sortOutImpossibleCorners(int*, std::__cxx11::list<corner, std::allocator<corner> >&, int*, int*) [39]
                0.00    0.00     144/33437       printlist(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [33]
                0.00    0.00     231/33437       containsCorner(std::__cxx11::list<corner, std::allocator<corner> >&, int, int) [37]
                0.00    0.00     589/33437       getNextCornerQuestion(std::__cxx11::list<corner, std::allocator<corner> >&, int*, int*) [18]
                0.00    0.00    1760/33437       CopyListCorners(std::__cxx11::list<corner, std::allocator<corner> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [13]
                0.00    0.00    1909/33437       findCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int*, int) [17]
                0.00    0.00   28785/33437       fillCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [3]
[99]     0.0    0.00    0.00   33437         std::__cxx11::list<corner, std::allocator<corner> >::begin() [99]
                0.00    0.00   33437/265579      std::_List_iterator<corner>::_List_iterator(std::__detail::_List_node_base*) [54]
-----------------------------------------------
                0.00    0.00    4980/31956       std::__cxx11::list<edge, std::allocator<edge> >::_M_erase(std::_List_iterator<edge>) [35]
                0.00    0.00   10989/31956       std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_clear() [28]
                0.00    0.00   15987/31956       std::_List_node<edge>* std::__cxx11::list<edge, std::allocator<edge> >::_M_create_node<edge const&>(edge const&) [22]
[100]    0.0    0.00    0.00   31956         std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_get_Node_allocator() [100]
-----------------------------------------------
                0.00    0.00   21406/21406       void std::__advance<std::_List_iterator<edge>, long>(std::_List_iterator<edge>&, long, std::bidirectional_iterator_tag) [189]
[101]    0.0    0.00    0.00   21406         std::_List_iterator<edge>::operator++() [101]
-----------------------------------------------
                0.00    0.00   20680/20680       std::allocator<std::_List_node<int> >::allocator() [104]
[102]    0.0    0.00    0.00   20680         __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator() [102]
-----------------------------------------------
                0.00    0.00   20680/20680       std::allocator<std::_List_node<int> >::~allocator() [105]
[103]    0.0    0.00    0.00   20680         __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator() [103]
-----------------------------------------------
                0.00    0.00   20680/20680       std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl::_List_impl() [106]
[104]    0.0    0.00    0.00   20680         std::allocator<std::_List_node<int> >::allocator() [104]
                0.00    0.00   20680/20680       __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator() [102]
-----------------------------------------------
                0.00    0.00   20680/20680       std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl() [107]
[105]    0.0    0.00    0.00   20680         std::allocator<std::_List_node<int> >::~allocator() [105]
                0.00    0.00   20680/20680       __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator() [103]
-----------------------------------------------
                0.00    0.00   20680/20680       std::__cxx11::_List_base<int, std::allocator<int> >::_List_base() [111]
[106]    0.0    0.00    0.00   20680         std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl::_List_impl() [106]
                0.00    0.00   20680/20680       std::allocator<std::_List_node<int> >::allocator() [104]
-----------------------------------------------
                0.00    0.00   20680/20680       std::__cxx11::_List_base<int, std::allocator<int> >::~_List_base() [112]
[107]    0.0    0.00    0.00   20680         std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl() [107]
                0.00    0.00   20680/20680       std::allocator<std::_List_node<int> >::~allocator() [105]
-----------------------------------------------
                0.00    0.00   20680/20680       std::__cxx11::_List_base<int, std::allocator<int> >::_M_init() [109]
[108]    0.0    0.00    0.00   20680         std::__cxx11::_List_base<int, std::allocator<int> >::_M_set_size(unsigned long) [108]
                0.00    0.00   20680/141096      std::_List_node<unsigned long>::_M_valptr() [64]
-----------------------------------------------
                0.00    0.00   20680/20680       std::__cxx11::_List_base<int, std::allocator<int> >::_List_base() [111]
[109]    0.0    0.00    0.00   20680         std::__cxx11::_List_base<int, std::allocator<int> >::_M_init() [109]
                0.00    0.00   20680/20680       std::__cxx11::_List_base<int, std::allocator<int> >::_M_set_size(unsigned long) [108]
-----------------------------------------------
                0.00    0.00   20680/20680       std::__cxx11::_List_base<int, std::allocator<int> >::~_List_base() [112]
[110]    0.0    0.00    0.00   20680         std::__cxx11::_List_base<int, std::allocator<int> >::_M_clear() [110]
-----------------------------------------------
                0.00    0.00   20680/20680       std::__cxx11::list<int, std::allocator<int> >::list() [113]
[111]    0.0    0.00    0.00   20680         std::__cxx11::_List_base<int, std::allocator<int> >::_List_base() [111]
                0.00    0.00   20680/20680       std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl::_List_impl() [106]
                0.00    0.00   20680/20680       std::__cxx11::_List_base<int, std::allocator<int> >::_M_init() [109]
-----------------------------------------------
                0.00    0.00   20680/20680       std::__cxx11::list<int, std::allocator<int> >::~list() [114]
[112]    0.0    0.00    0.00   20680         std::__cxx11::_List_base<int, std::allocator<int> >::~_List_base() [112]
                0.00    0.00   20680/20680       std::__cxx11::_List_base<int, std::allocator<int> >::_M_clear() [110]
                0.00    0.00   20680/20680       std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl() [107]
-----------------------------------------------
                0.00    0.00    6160/20680       fillCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [3]
                0.00    0.00   14520/20680       fillEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [4]
[113]    0.0    0.00    0.00   20680         std::__cxx11::list<int, std::allocator<int> >::list() [113]
                0.00    0.00   20680/20680       std::__cxx11::_List_base<int, std::allocator<int> >::_List_base() [111]
-----------------------------------------------
                0.00    0.00    6160/20680       fillCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [3]
                0.00    0.00   14520/20680       fillEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [4]
[114]    0.0    0.00    0.00   20680         std::__cxx11::list<int, std::allocator<int> >::~list() [114]
                0.00    0.00   20680/20680       std::__cxx11::_List_base<int, std::allocator<int> >::~_List_base() [112]
-----------------------------------------------
                0.00    0.00   20295/20295       std::allocator_traits<std::allocator<std::_List_node<int> > >::deallocate(std::allocator<std::_List_node<int> >&, std::_List_node<int>*, unsigned long) [125]
[115]    0.0    0.00    0.00   20295         __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate(std::_List_node<int>*, unsigned long) [115]
-----------------------------------------------
                0.00    0.00   20295/20295       void std::allocator_traits<std::allocator<std::_List_node<int> > >::destroy<int>(std::allocator<std::_List_node<int> >&, int*) [126]
[116]    0.0    0.00    0.00   20295         void __gnu_cxx::new_allocator<std::_List_node<int> >::destroy<int>(int*) [116]
-----------------------------------------------
                0.00    0.00   20295/20295       std::allocator_traits<std::allocator<std::_List_node<int> > >::allocate(std::allocator<std::_List_node<int> >&, unsigned long) [127]
[117]    0.0    0.00    0.00   20295         __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned long, void const*) [117]
                0.00    0.00   20295/20295       __gnu_cxx::new_allocator<std::_List_node<int> >::max_size() const [119]
-----------------------------------------------
                0.00    0.00   20295/20295       void std::allocator_traits<std::allocator<std::_List_node<int> > >::construct<int, int const&>(std::allocator<std::_List_node<int> >&, int*, int const&) [128]
[118]    0.0    0.00    0.00   20295         void __gnu_cxx::new_allocator<std::_List_node<int> >::construct<int, int const&>(int*, int const&) [118]
                0.00    0.00   20295/81180       int const& std::forward<int const&>(std::remove_reference<int const&>::type&) [67]
                0.00    0.00   20295/74404       operator new(unsigned long, void*) [69]
-----------------------------------------------
                0.00    0.00   20295/20295       __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned long, void const*) [117]
[119]    0.0    0.00    0.00   20295         __gnu_cxx::new_allocator<std::_List_node<int> >::max_size() const [119]
-----------------------------------------------
                0.00    0.00   20295/20295       std::__cxx11::list<int, std::allocator<int> >::back() [133]
[120]    0.0    0.00    0.00   20295         std::_List_iterator<int>::operator*() const [120]
                0.00    0.00   20295/60885       std::_List_node<int>::_M_valptr() [73]
-----------------------------------------------
                0.00    0.00   20295/20295       std::__cxx11::list<int, std::allocator<int> >::back() [133]
[121]    0.0    0.00    0.00   20295         std::_List_iterator<int>::operator--() [121]
-----------------------------------------------
                0.00    0.00   20295/20295       std::_List_node<int>* std::__cxx11::list<int, std::allocator<int> >::_M_create_node<int const&>(int const&) [132]
[122]    0.0    0.00    0.00   20295         std::__allocated_ptr<std::allocator<std::_List_node<int> > >::__allocated_ptr(std::allocator<std::_List_node<int> >&, std::_List_node<int>*) [122]
                0.00    0.00   20295/20295       std::allocator<std::_List_node<int> >* std::__addressof<std::allocator<std::_List_node<int> > >(std::allocator<std::_List_node<int> >&) [136]
-----------------------------------------------
                0.00    0.00   20295/20295       std::_List_node<int>* std::__cxx11::list<int, std::allocator<int> >::_M_create_node<int const&>(int const&) [132]
[123]    0.0    0.00    0.00   20295         std::__allocated_ptr<std::allocator<std::_List_node<int> > >::~__allocated_ptr() [123]
-----------------------------------------------
                0.00    0.00   20295/20295       std::_List_node<int>* std::__cxx11::list<int, std::allocator<int> >::_M_create_node<int const&>(int const&) [132]
[124]    0.0    0.00    0.00   20295         std::__allocated_ptr<std::allocator<std::_List_node<int> > >::operator=(decltype(nullptr)) [124]
-----------------------------------------------
                0.00    0.00   20295/20295       std::__cxx11::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*) [131]
[125]    0.0    0.00    0.00   20295         std::allocator_traits<std::allocator<std::_List_node<int> > >::deallocate(std::allocator<std::_List_node<int> >&, std::_List_node<int>*, unsigned long) [125]
                0.00    0.00   20295/20295       __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate(std::_List_node<int>*, unsigned long) [115]
-----------------------------------------------
                0.00    0.00   20295/20295       std::__cxx11::list<int, std::allocator<int> >::_M_erase(std::_List_iterator<int>) [134]
[126]    0.0    0.00    0.00   20295         void std::allocator_traits<std::allocator<std::_List_node<int> > >::destroy<int>(std::allocator<std::_List_node<int> >&, int*) [126]
                0.00    0.00   20295/20295       void __gnu_cxx::new_allocator<std::_List_node<int> >::destroy<int>(int*) [116]
-----------------------------------------------
                0.00    0.00   20295/20295       std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_node() [130]
[127]    0.0    0.00    0.00   20295         std::allocator_traits<std::allocator<std::_List_node<int> > >::allocate(std::allocator<std::_List_node<int> >&, unsigned long) [127]
                0.00    0.00   20295/20295       __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned long, void const*) [117]
-----------------------------------------------
                0.00    0.00   20295/20295       std::_List_node<int>* std::__cxx11::list<int, std::allocator<int> >::_M_create_node<int const&>(int const&) [132]
[128]    0.0    0.00    0.00   20295         void std::allocator_traits<std::allocator<std::_List_node<int> > >::construct<int, int const&>(std::allocator<std::_List_node<int> >&, int*, int const&) [128]
                0.00    0.00   20295/81180       int const& std::forward<int const&>(std::remove_reference<int const&>::type&) [67]
                0.00    0.00   20295/20295       void __gnu_cxx::new_allocator<std::_List_node<int> >::construct<int, int const&>(int*, int const&) [118]
-----------------------------------------------
                0.00    0.00   20295/20295       std::__cxx11::list<int, std::allocator<int> >::_M_erase(std::_List_iterator<int>) [134]
[129]    0.0    0.00    0.00   20295         std::__cxx11::_List_base<int, std::allocator<int> >::_M_dec_size(unsigned long) [129]
                0.00    0.00   20295/141096      std::_List_node<unsigned long>::_M_valptr() [64]
-----------------------------------------------
                0.00    0.00   20295/20295       std::_List_node<int>* std::__cxx11::list<int, std::allocator<int> >::_M_create_node<int const&>(int const&) [132]
[130]    0.0    0.00    0.00   20295         std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_node() [130]
                0.00    0.00   20295/20295       std::allocator_traits<std::allocator<std::_List_node<int> > >::allocate(std::allocator<std::_List_node<int> >&, unsigned long) [127]
-----------------------------------------------
                0.00    0.00   20295/20295       std::__cxx11::list<int, std::allocator<int> >::_M_erase(std::_List_iterator<int>) [134]
[131]    0.0    0.00    0.00   20295         std::__cxx11::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*) [131]
                0.00    0.00   20295/20295       std::allocator_traits<std::allocator<std::_List_node<int> > >::deallocate(std::allocator<std::_List_node<int> >&, std::_List_node<int>*, unsigned long) [125]
-----------------------------------------------
                0.00    0.00   20295/20295       void std::__cxx11::list<int, std::allocator<int> >::_M_insert<int const&>(std::_List_iterator<int>, int const&) [7]
[132]    0.0    0.00    0.00   20295         std::_List_node<int>* std::__cxx11::list<int, std::allocator<int> >::_M_create_node<int const&>(int const&) [132]
                0.00    0.00   20295/20295       std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_node() [130]
                0.00    0.00   20295/40590       std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() [80]
                0.00    0.00   20295/81180       int const& std::forward<int const&>(std::remove_reference<int const&>::type&) [67]
                0.00    0.00   20295/20295       std::__allocated_ptr<std::allocator<std::_List_node<int> > >::__allocated_ptr(std::allocator<std::_List_node<int> >&, std::_List_node<int>*) [122]
                0.00    0.00   20295/60885       std::_List_node<int>::_M_valptr() [73]
                0.00    0.00   20295/20295       void std::allocator_traits<std::allocator<std::_List_node<int> > >::construct<int, int const&>(std::allocator<std::_List_node<int> >&, int*, int const&) [128]
                0.00    0.00   20295/20295       std::__allocated_ptr<std::allocator<std::_List_node<int> > >::operator=(decltype(nullptr)) [124]
                0.00    0.00   20295/20295       std::__allocated_ptr<std::allocator<std::_List_node<int> > >::~__allocated_ptr() [123]
-----------------------------------------------
                0.00    0.00    4710/20295       fillEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [4]
                0.00    0.00   15585/20295       fillCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [3]
[133]    0.0    0.00    0.00   20295         std::__cxx11::list<int, std::allocator<int> >::back() [133]
                0.00    0.00   20295/40590       std::__cxx11::list<int, std::allocator<int> >::end() [81]
                0.00    0.00   20295/20295       std::_List_iterator<int>::operator--() [121]
                0.00    0.00   20295/20295       std::_List_iterator<int>::operator*() const [120]
-----------------------------------------------
                0.00    0.00   20295/20295       std::__cxx11::list<int, std::allocator<int> >::pop_back() [135]
[134]    0.0    0.00    0.00   20295         std::__cxx11::list<int, std::allocator<int> >::_M_erase(std::_List_iterator<int>) [134]
                0.00    0.00   20295/20295       std::__cxx11::_List_base<int, std::allocator<int> >::_M_dec_size(unsigned long) [129]
                0.00    0.00   20295/60885       std::_List_node<int>::_M_valptr() [73]
                0.00    0.00   20295/40590       std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() [80]
                0.00    0.00   20295/20295       void std::allocator_traits<std::allocator<std::_List_node<int> > >::destroy<int>(std::allocator<std::_List_node<int> >&, int*) [126]
                0.00    0.00   20295/20295       std::__cxx11::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*) [131]
-----------------------------------------------
                0.00    0.00    4710/20295       fillEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [4]
                0.00    0.00   15585/20295       fillCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [3]
[135]    0.0    0.00    0.00   20295         std::__cxx11::list<int, std::allocator<int> >::pop_back() [135]
                0.00    0.00   20295/60885       std::_List_iterator<int>::_List_iterator(std::__detail::_List_node_base*) [74]
                0.00    0.00   20295/20295       std::__cxx11::list<int, std::allocator<int> >::_M_erase(std::_List_iterator<int>) [134]
-----------------------------------------------
                0.00    0.00   20295/20295       std::__allocated_ptr<std::allocator<std::_List_node<int> > >::__allocated_ptr(std::allocator<std::_List_node<int> >&, std::_List_node<int>*) [122]
[136]    0.0    0.00    0.00   20295         std::allocator<std::_List_node<int> >* std::__addressof<std::allocator<std::_List_node<int> > >(std::allocator<std::_List_node<int> >&) [136]
-----------------------------------------------
                0.00    0.00   16763/16763       std::_List_node<middle>::_M_valptr() [139]
[137]    0.0    0.00    0.00   16763         __gnu_cxx::__aligned_membuf<middle>::_M_ptr() [137]
                0.00    0.00   16763/16763       __gnu_cxx::__aligned_membuf<middle>::_M_addr() [138]
-----------------------------------------------
                0.00    0.00   16763/16763       __gnu_cxx::__aligned_membuf<middle>::_M_ptr() [137]
[138]    0.0    0.00    0.00   16763         __gnu_cxx::__aligned_membuf<middle>::_M_addr() [138]
-----------------------------------------------
                0.00    0.00       1/16763       std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_clear() [358]
                0.00    0.00      89/16763       std::__cxx11::list<middle, std::allocator<middle> >::_M_erase(std::_List_iterator<middle>) [304]
                0.00    0.00      90/16763       std::_List_node<middle>* std::__cxx11::list<middle, std::allocator<middle> >::_M_create_node<middle const&>(middle const&) [295]
                0.00    0.00   16583/16763       std::_List_iterator<middle>::operator->() const [140]
[139]    0.0    0.00    0.00   16763         std::_List_node<middle>::_M_valptr() [139]
                0.00    0.00   16763/16763       __gnu_cxx::__aligned_membuf<middle>::_M_ptr() [137]
-----------------------------------------------
                0.00    0.00       6/16583       findMiddle(int*) [347]
                0.00    0.00     244/16583       sortOutImpossibleCodes(int*, std::__cxx11::list<middle, std::allocator<middle> >&, int*) [340]
                0.00    0.00     473/16583       eliminateFound(std::__cxx11::list<middle, std::allocator<middle> >&, int*) [345]
                0.00    0.00    1464/16583       containsMiddle(std::__cxx11::list<middle, std::allocator<middle> >&, int, int) [275]
                0.00    0.00   14396/16583       getNextQuestion(std::__cxx11::list<middle, std::allocator<middle> >&, int*) [339]
[140]    0.0    0.00    0.00   16583         std::_List_iterator<middle>::operator->() const [140]
                0.00    0.00   16583/16763       std::_List_node<middle>::_M_valptr() [139]
-----------------------------------------------
                0.00    0.00   15987/15987       std::allocator_traits<std::allocator<std::_List_node<edge> > >::allocate(std::allocator<std::_List_node<edge> >&, unsigned long) [147]
[141]    0.0    0.00    0.00   15987         __gnu_cxx::new_allocator<std::_List_node<edge> >::allocate(unsigned long, void const*) [141]
                0.00    0.00   15987/15987       __gnu_cxx::new_allocator<std::_List_node<edge> >::max_size() const [143]
-----------------------------------------------
                0.00    0.00   15987/15987       void std::allocator_traits<std::allocator<std::_List_node<edge> > >::construct<edge, edge const&>(std::allocator<std::_List_node<edge> >&, edge*, edge const&) [148]
[142]    0.0    0.00    0.00   15987         void __gnu_cxx::new_allocator<std::_List_node<edge> >::construct<edge, edge const&>(edge*, edge const&) [142]
                0.00    0.00   15987/63948       edge const& std::forward<edge const&>(std::remove_reference<edge const&>::type&) [70]
                0.00    0.00   15987/74404       operator new(unsigned long, void*) [69]
-----------------------------------------------
                0.00    0.00   15987/15987       __gnu_cxx::new_allocator<std::_List_node<edge> >::allocate(unsigned long, void const*) [141]
[143]    0.0    0.00    0.00   15987         __gnu_cxx::new_allocator<std::_List_node<edge> >::max_size() const [143]
-----------------------------------------------
                0.00    0.00   15987/15987       std::_List_node<edge>* std::__cxx11::list<edge, std::allocator<edge> >::_M_create_node<edge const&>(edge const&) [22]
[144]    0.0    0.00    0.00   15987         std::__allocated_ptr<std::allocator<std::_List_node<edge> > >::__allocated_ptr(std::allocator<std::_List_node<edge> >&, std::_List_node<edge>*) [144]
                0.00    0.00   15987/15987       std::allocator<std::_List_node<edge> >* std::__addressof<std::allocator<std::_List_node<edge> > >(std::allocator<std::_List_node<edge> >&) [151]
-----------------------------------------------
                0.00    0.00   15987/15987       std::_List_node<edge>* std::__cxx11::list<edge, std::allocator<edge> >::_M_create_node<edge const&>(edge const&) [22]
[145]    0.0    0.00    0.00   15987         std::__allocated_ptr<std::allocator<std::_List_node<edge> > >::~__allocated_ptr() [145]
-----------------------------------------------
                0.00    0.00   15987/15987       std::_List_node<edge>* std::__cxx11::list<edge, std::allocator<edge> >::_M_create_node<edge const&>(edge const&) [22]
[146]    0.0    0.00    0.00   15987         std::__allocated_ptr<std::allocator<std::_List_node<edge> > >::operator=(decltype(nullptr)) [146]
-----------------------------------------------
                0.00    0.00   15987/15987       std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_get_node() [149]
[147]    0.0    0.00    0.00   15987         std::allocator_traits<std::allocator<std::_List_node<edge> > >::allocate(std::allocator<std::_List_node<edge> >&, unsigned long) [147]
                0.00    0.00   15987/15987       __gnu_cxx::new_allocator<std::_List_node<edge> >::allocate(unsigned long, void const*) [141]
-----------------------------------------------
                0.00    0.00   15987/15987       std::_List_node<edge>* std::__cxx11::list<edge, std::allocator<edge> >::_M_create_node<edge const&>(edge const&) [22]
[148]    0.0    0.00    0.00   15987         void std::allocator_traits<std::allocator<std::_List_node<edge> > >::construct<edge, edge const&>(std::allocator<std::_List_node<edge> >&, edge*, edge const&) [148]
                0.00    0.00   15987/63948       edge const& std::forward<edge const&>(std::remove_reference<edge const&>::type&) [70]
                0.00    0.00   15987/15987       void __gnu_cxx::new_allocator<std::_List_node<edge> >::construct<edge, edge const&>(edge*, edge const&) [142]
-----------------------------------------------
                0.00    0.00   15987/15987       std::_List_node<edge>* std::__cxx11::list<edge, std::allocator<edge> >::_M_create_node<edge const&>(edge const&) [22]
[149]    0.0    0.00    0.00   15987         std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_get_node() [149]
                0.00    0.00   15987/15987       std::allocator_traits<std::allocator<std::_List_node<edge> > >::allocate(std::allocator<std::_List_node<edge> >&, unsigned long) [147]
-----------------------------------------------
                0.00    0.00   15987/15987       void std::__cxx11::list<edge, std::allocator<edge> >::_M_insert<edge const&>(std::_List_iterator<edge>, edge const&) [23]
[150]    0.0    0.00    0.00   15987         std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_inc_size(unsigned long) [150]
                0.00    0.00   15987/141096      std::_List_node<unsigned long>::_M_valptr() [64]
-----------------------------------------------
                0.00    0.00   15987/15987       std::__allocated_ptr<std::allocator<std::_List_node<edge> > >::__allocated_ptr(std::allocator<std::_List_node<edge> >&, std::_List_node<edge>*) [144]
[151]    0.0    0.00    0.00   15987         std::allocator<std::_List_node<edge> >* std::__addressof<std::allocator<std::_List_node<edge> > >(std::allocator<std::_List_node<edge> >&) [151]
-----------------------------------------------
                0.00    0.00   15969/15969       std::allocator_traits<std::allocator<std::_List_node<edge> > >::deallocate(std::allocator<std::_List_node<edge> >&, std::_List_node<edge>*, unsigned long) [154]
[152]    0.0    0.00    0.00   15969         __gnu_cxx::new_allocator<std::_List_node<edge> >::deallocate(std::_List_node<edge>*, unsigned long) [152]
-----------------------------------------------
                0.00    0.00   15969/15969       void std::allocator_traits<std::allocator<std::_List_node<edge> > >::destroy<edge>(std::allocator<std::_List_node<edge> >&, edge*) [155]
[153]    0.0    0.00    0.00   15969         void __gnu_cxx::new_allocator<std::_List_node<edge> >::destroy<edge>(edge*) [153]
-----------------------------------------------
                0.00    0.00   15969/15969       std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_put_node(std::_List_node<edge>*) [156]
[154]    0.0    0.00    0.00   15969         std::allocator_traits<std::allocator<std::_List_node<edge> > >::deallocate(std::allocator<std::_List_node<edge> >&, std::_List_node<edge>*, unsigned long) [154]
                0.00    0.00   15969/15969       __gnu_cxx::new_allocator<std::_List_node<edge> >::deallocate(std::_List_node<edge>*, unsigned long) [152]
-----------------------------------------------
                0.00    0.00    4980/15969       std::__cxx11::list<edge, std::allocator<edge> >::_M_erase(std::_List_iterator<edge>) [35]
                0.00    0.00   10989/15969       std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_clear() [28]
[155]    0.0    0.00    0.00   15969         void std::allocator_traits<std::allocator<std::_List_node<edge> > >::destroy<edge>(std::allocator<std::_List_node<edge> >&, edge*) [155]
                0.00    0.00   15969/15969       void __gnu_cxx::new_allocator<std::_List_node<edge> >::destroy<edge>(edge*) [153]
-----------------------------------------------
                0.00    0.00    4980/15969       std::__cxx11::list<edge, std::allocator<edge> >::_M_erase(std::_List_iterator<edge>) [35]
                0.00    0.00   10989/15969       std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_clear() [28]
[156]    0.0    0.00    0.00   15969         std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_put_node(std::_List_node<edge>*) [156]
                0.00    0.00   15969/15969       std::allocator_traits<std::allocator<std::_List_node<edge> > >::deallocate(std::allocator<std::_List_node<edge> >&, std::_List_node<edge>*, unsigned long) [154]
-----------------------------------------------
                0.00    0.00     456/15804       fiRotate(int (*) [3][3]) [248]
                0.00    0.00     468/15804       liRotate(int (*) [3][3]) [247]
                0.00    0.00     728/15804       biRotate(int (*) [3][3]) [242]
                0.00    0.00     776/15804       bRotate(int (*) [3][3]) [241]
                0.00    0.00     788/15804       riRotate(int (*) [3][3]) [240]
                0.00    0.00    1068/15804       rRotate(int (*) [3][3]) [235]
                0.00    0.00    1132/15804       lRotate(int (*) [3][3]) [234]
                0.00    0.00    1200/15804       fRotate(int (*) [3][3]) [233]
                0.00    0.00    1252/15804       uiRotate(int (*) [3][3]) [232]
                0.00    0.00    2164/15804       uRotate(int (*) [3][3]) [207]
                0.00    0.00    2248/15804       diRotate(int (*) [3][3]) [206]
                0.00    0.00    3524/15804       dRotate(int (*) [3][3]) [191]
[157]    0.0    0.00    0.00   15804         copyCube(int (*) [3][3]) [157]
-----------------------------------------------
                0.00    0.00   15767/15767       std::__cxx11::list<corner, std::allocator<corner> >::erase(std::_List_const_iterator<corner>) [31]
[158]    0.0    0.00    0.00   15767         std::_List_const_iterator<corner>::_M_const_cast() const [158]
                0.00    0.00   15767/265579      std::_List_iterator<corner>::_List_iterator(std::__detail::_List_node_base*) [54]
-----------------------------------------------
                0.00    0.00      84/15767       findCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int*, int) [17]
                0.00    0.00      98/15767       sortOutImpossibleCorners(int*, std::__cxx11::list<corner, std::allocator<corner> >&, int*, int*) [39]
                0.00    0.00   15585/15767       fillCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [3]
[159]    0.0    0.00    0.00   15767         std::_List_const_iterator<corner>::_List_const_iterator(std::_List_iterator<corner> const&) [159]
-----------------------------------------------
                0.00    0.00   15767/15767       std::__cxx11::list<corner, std::allocator<corner> >::_M_erase(std::_List_iterator<corner>) [32]
[160]    0.0    0.00    0.00   15767         std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_dec_size(unsigned long) [160]
                0.00    0.00   15767/141096      std::_List_node<unsigned long>::_M_valptr() [64]
-----------------------------------------------
                0.00    0.00   15585/15585       void std::advance<std::_List_iterator<corner>, int>(std::_List_iterator<corner>&, int) [162]
[161]    0.0    0.00    0.00   15585         std::iterator_traits<std::_List_iterator<corner> >::iterator_category std::__iterator_category<std::_List_iterator<corner> >(std::_List_iterator<corner> const&) [161]
-----------------------------------------------
                0.00    0.00   15585/15585       fillCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [3]
[162]    0.0    0.00    0.00   15585         void std::advance<std::_List_iterator<corner>, int>(std::_List_iterator<corner>&, int) [162]
                0.00    0.00   15585/15585       std::iterator_traits<std::_List_iterator<corner> >::iterator_category std::__iterator_category<std::_List_iterator<corner> >(std::_List_iterator<corner> const&) [161]
                0.00    0.00   15585/15585       void std::__advance<std::_List_iterator<corner>, long>(std::_List_iterator<corner>&, long, std::bidirectional_iterator_tag) [163]
-----------------------------------------------
                0.00    0.00   15585/15585       void std::advance<std::_List_iterator<corner>, int>(std::_List_iterator<corner>&, int) [162]
[163]    0.0    0.00    0.00   15585         void std::__advance<std::_List_iterator<corner>, long>(std::_List_iterator<corner>&, long, std::bidirectional_iterator_tag) [163]
                0.00    0.00  123423/123423      std::_List_iterator<corner>::operator++() [66]
-----------------------------------------------
                0.00    0.00   10698/10698       std::__cxx11::list<edge, std::allocator<edge> >::size() const [165]
[164]    0.0    0.00    0.00   10698         std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_node_count() const [164]
                0.00    0.00   10698/57740       std::_List_node<unsigned long>::_M_valptr() const [77]
-----------------------------------------------
                0.00    0.00      23/10698       planAction(int, std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*, int*) [12]
                0.00    0.00     216/10698       failsafe(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [337]
                0.00    0.00     217/10698       sortOutImpossibleEdges(int*, std::__cxx11::list<edge, std::allocator<edge> >&, int*, int*) [38]
                0.00    0.00    1222/10698       findEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int*, int) [14]
                0.00    0.00    2640/10698       fillEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [4]
                0.00    0.00    6380/10698       SortEdgesList(std::__cxx11::list<edge, std::allocator<edge> >*, int*, int) [260]
[165]    0.0    0.00    0.00   10698         std::__cxx11::list<edge, std::allocator<edge> >::size() const [165]
                0.00    0.00   10698/10698       std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_node_count() const [164]
-----------------------------------------------
                0.00    0.00     341/10251       fi(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [278]
                0.00    0.00     350/10251       li(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [277]
                0.00    0.00     542/10251       b(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [269]
                0.00    0.00     545/10251       bi(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [270]
                0.00    0.00     591/10251       ri(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [268]
                0.00    0.00     679/10251       l(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [254]
                0.00    0.00     714/10251       f(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [253]
                0.00    0.00     731/10251       r(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [255]
                0.00    0.00     760/10251       ui(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [252]
                0.00    0.00    1318/10251       u(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [244]
                0.00    0.00    1473/10251       di(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [243]
                0.00    0.00    2207/10251       d(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [238]
[166]    0.0    0.00    0.00   10251         last[abi:cxx11]() [166]
-----------------------------------------------
                0.00    0.00     341/10251       fi(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [278]
                0.00    0.00     350/10251       li(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [277]
                0.00    0.00     542/10251       b(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [269]
                0.00    0.00     545/10251       bi(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [270]
                0.00    0.00     591/10251       ri(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [268]
                0.00    0.00     679/10251       l(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [254]
                0.00    0.00     714/10251       f(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [253]
                0.00    0.00     731/10251       r(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [255]
                0.00    0.00     760/10251       ui(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [252]
                0.00    0.00    1318/10251       u(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [244]
                0.00    0.00    1473/10251       di(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [243]
                0.00    0.00    2207/10251       d(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [238]
[167]    0.0    0.00    0.00   10251         bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [167]
-----------------------------------------------
                0.00    0.00    3028/7609        void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter) [221]
                0.00    0.00    4581/7609        void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_less_iter>(int*, __gnu_cxx::__ops::_Val_less_iter) [209]
[168]    0.0    0.00    0.00    7609         std::remove_reference<int&>::type&& std::move<int&>(int&) [168]
-----------------------------------------------
                0.00    0.00      89/6507        std::__cxx11::list<middle, std::allocator<middle> >::erase(std::_List_const_iterator<middle>) [303]
                0.00    0.00      89/6507        std::_List_const_iterator<middle>::_M_const_cast() const [300]
                0.00    0.00     533/6507        std::__cxx11::list<middle, std::allocator<middle> >::begin() [245]
                0.00    0.00    5796/6507        std::__cxx11::list<middle, std::allocator<middle> >::end() [172]
[169]    0.0    0.00    0.00    6507         std::_List_iterator<middle>::_List_iterator(std::__detail::_List_node_base*) [169]
-----------------------------------------------
                0.00    0.00    6045/6045        std::__cxx11::list<corner, std::allocator<corner> >::size() const [171]
[170]    0.0    0.00    0.00    6045         std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_node_count() const [170]
                0.00    0.00    6045/57740       std::_List_node<unsigned long>::_M_valptr() const [77]
-----------------------------------------------
                0.00    0.00      13/6045        planAction(int, std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*, int*) [12]
                0.00    0.00     144/6045        failsafe(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [337]
                0.00    0.00     161/6045        sortOutImpossibleCorners(int*, std::__cxx11::list<corner, std::allocator<corner> >&, int*, int*) [39]
                0.00    0.00     551/6045        findCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int*, int) [17]
                0.00    0.00    1760/6045        fillCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [3]
                0.00    0.00    3416/6045        SortCornerList(std::__cxx11::list<corner, std::allocator<corner> >*, int*, int) [262]
[171]    0.0    0.00    0.00    6045         std::__cxx11::list<corner, std::allocator<corner> >::size() const [171]
                0.00    0.00    6045/6045        std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_node_count() const [170]
-----------------------------------------------
                0.00    0.00      90/5796        std::__cxx11::list<middle, std::allocator<middle> >::push_back(middle const&) [297]
                0.00    0.00     192/5796        sortOutImpossibleCodes(int*, std::__cxx11::list<middle, std::allocator<middle> >&, int*) [340]
                0.00    0.00     269/5796        eliminateFound(std::__cxx11::list<middle, std::allocator<middle> >&, int*) [345]
                0.00    0.00    1255/5796        containsMiddle(std::__cxx11::list<middle, std::allocator<middle> >&, int, int) [275]
                0.00    0.00    3990/5796        getNextQuestion(std::__cxx11::list<middle, std::allocator<middle> >&, int*) [339]
[172]    0.0    0.00    0.00    5796         std::__cxx11::list<middle, std::allocator<middle> >::end() [172]
                0.00    0.00    5796/6507        std::_List_iterator<middle>::_List_iterator(std::__detail::_List_node_base*) [169]
-----------------------------------------------
                0.00    0.00     124/5617        sortOutImpossibleCodes(int*, std::__cxx11::list<middle, std::allocator<middle> >&, int*) [340]
                0.00    0.00     248/5617        eliminateFound(std::__cxx11::list<middle, std::allocator<middle> >&, int*) [345]
                0.00    0.00    1255/5617        containsMiddle(std::__cxx11::list<middle, std::allocator<middle> >&, int, int) [275]
                0.00    0.00    3990/5617        getNextQuestion(std::__cxx11::list<middle, std::allocator<middle> >&, int*) [339]
[173]    0.0    0.00    0.00    5617         std::_List_iterator<middle>::operator!=(std::_List_iterator<middle> const&) const [173]
-----------------------------------------------
                0.00    0.00      54/5024        sortOutImpossibleCodes(int*, std::__cxx11::list<middle, std::allocator<middle> >&, int*) [340]
                0.00    0.00     221/5024        eliminateFound(std::__cxx11::list<middle, std::allocator<middle> >&, int*) [345]
                0.00    0.00    1089/5024        containsMiddle(std::__cxx11::list<middle, std::allocator<middle> >&, int, int) [275]
                0.00    0.00    3660/5024        getNextQuestion(std::__cxx11::list<middle, std::allocator<middle> >&, int*) [339]
[174]    0.0    0.00    0.00    5024         std::_List_iterator<middle>::operator++(int) [174]
-----------------------------------------------
                0.00    0.00    4980/4980        std::__cxx11::list<edge, std::allocator<edge> >::erase(std::_List_const_iterator<edge>) [34]
[175]    0.0    0.00    0.00    4980         std::_List_const_iterator<edge>::_M_const_cast() const [175]
                0.00    0.00    4980/213638      std::_List_iterator<edge>::_List_iterator(std::__detail::_List_node_base*) [55]
-----------------------------------------------
                0.00    0.00     130/4980        findEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int*, int) [14]
                0.00    0.00     140/4980        sortOutImpossibleEdges(int*, std::__cxx11::list<edge, std::allocator<edge> >&, int*, int*) [38]
                0.00    0.00    4710/4980        fillEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [4]
[176]    0.0    0.00    0.00    4980         std::_List_const_iterator<edge>::_List_const_iterator(std::_List_iterator<edge> const&) [176]
-----------------------------------------------
                0.00    0.00    4980/4980        std::__cxx11::list<edge, std::allocator<edge> >::_M_erase(std::_List_iterator<edge>) [35]
[177]    0.0    0.00    0.00    4980         std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_dec_size(unsigned long) [177]
                0.00    0.00    4980/141096      std::_List_node<unsigned long>::_M_valptr() [64]
-----------------------------------------------
                0.00    0.00    4932/4932        void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [179]
[178]    0.0    0.00    0.00    4932         bool __gnu_cxx::__is_null_pointer<char>(char*) [178]
-----------------------------------------------
                0.00    0.00      72/4932        sendmoves() [309]
                0.00    0.00    4860/4932        std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [186]
[179]    0.0    0.00    0.00    4932         void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [179]
                0.00    0.00    4932/4932        bool __gnu_cxx::__is_null_pointer<char>(char*) [178]
                0.00    0.00    4932/4932        std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*) [182]
-----------------------------------------------
                0.00    0.00    4932/4932        std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*) [182]
[180]    0.0    0.00    0.00    4932         std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag) [180]
-----------------------------------------------
                0.00    0.00    4932/4932        std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*) [182]
[181]    0.0    0.00    0.00    4932         std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&) [181]
-----------------------------------------------
                0.00    0.00    4932/4932        void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [179]
[182]    0.0    0.00    0.00    4932         std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*) [182]
                0.00    0.00    4932/4932        std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&) [181]
                0.00    0.00    4932/4932        std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag) [180]
-----------------------------------------------
                0.00    0.00    4860/4860        printCubeColor(int (*) [3][3]) [279]
[183]    0.0    0.00    0.00    4860         printColor[abi:cxx11](int) [183]
                0.00    0.00    4860/4860        std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [186]
                0.00    0.00    4860/4860        std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [185]
-----------------------------------------------
                0.00    0.00    4860/4860        std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [185]
[184]    0.0    0.00    0.00    4860         std::remove_reference<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>::type&& std::move<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) [184]
-----------------------------------------------
                0.00    0.00    4860/4860        printColor[abi:cxx11](int) [183]
[185]    0.0    0.00    0.00    4860         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [185]
                0.00    0.00    4860/4860        std::remove_reference<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>::type&& std::move<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) [184]
-----------------------------------------------
                0.00    0.00    4860/4860        printColor[abi:cxx11](int) [183]
[186]    0.0    0.00    0.00    4860         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [186]
                0.00    0.00    4860/4932        void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [179]
-----------------------------------------------
                0.00    0.00    4710/4710        void std::advance<std::_List_iterator<edge>, int>(std::_List_iterator<edge>&, int) [188]
[187]    0.0    0.00    0.00    4710         std::iterator_traits<std::_List_iterator<edge> >::iterator_category std::__iterator_category<std::_List_iterator<edge> >(std::_List_iterator<edge> const&) [187]
-----------------------------------------------
                0.00    0.00    4710/4710        fillEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [4]
[188]    0.0    0.00    0.00    4710         void std::advance<std::_List_iterator<edge>, int>(std::_List_iterator<edge>&, int) [188]
                0.00    0.00    4710/4710        std::iterator_traits<std::_List_iterator<edge> >::iterator_category std::__iterator_category<std::_List_iterator<edge> >(std::_List_iterator<edge> const&) [187]
                0.00    0.00    4710/4710        void std::__advance<std::_List_iterator<edge>, long>(std::_List_iterator<edge>&, long, std::bidirectional_iterator_tag) [189]
-----------------------------------------------
                0.00    0.00    4710/4710        void std::advance<std::_List_iterator<edge>, int>(std::_List_iterator<edge>&, int) [188]
[189]    0.0    0.00    0.00    4710         void std::__advance<std::_List_iterator<edge>, long>(std::_List_iterator<edge>&, long, std::bidirectional_iterator_tag) [189]
                0.00    0.00   21406/21406       std::_List_iterator<edge>::operator++() [101]
-----------------------------------------------
                0.00    0.00    4542/4542        int* std::__copy_move_backward_a2<true, int*, int*>(int*, int*, int*) [231]
[190]    0.0    0.00    0.00    4542         int* std::__niter_base<int*>(int*) [190]
-----------------------------------------------
                0.00    0.00    3524/3524        d(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [238]
[191]    0.0    0.00    0.00    3524         dRotate(int (*) [3][3]) [191]
                0.00    0.00    3524/15804       copyCube(int (*) [3][3]) [157]
-----------------------------------------------
                0.00    0.00    3520/3520        void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter) [221]
[192]    0.0    0.00    0.00    3520         bool __gnu_cxx::__ops::_Iter_less_iter::operator()<int*, int*>(int*, int*) const [192]
-----------------------------------------------
                0.00    0.00    3028/3028        int* std::move_backward<int*, int*>(int*, int*, int*) [229]
[193]    0.0    0.00    0.00    3028         int* std::__miter_base<int*>(int*) [193]
-----------------------------------------------
                0.00    0.00    2884/2884        std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_init() [195]
[194]    0.0    0.00    0.00    2884         std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_set_size(unsigned long) [194]
                0.00    0.00    2884/141096      std::_List_node<unsigned long>::_M_valptr() [64]
-----------------------------------------------
                0.00    0.00      12/2884        std::__cxx11::list<edge, std::allocator<edge> >::clear() [43]
                0.00    0.00    2872/2884        std::__cxx11::_List_base<edge, std::allocator<edge> >::_List_base() [199]
[195]    0.0    0.00    0.00    2884         std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_init() [195]
                0.00    0.00    2884/2884        std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_set_size(unsigned long) [194]
-----------------------------------------------
                0.00    0.00    2872/2872        std::allocator<std::_List_node<edge> >::allocator() [197]
[196]    0.0    0.00    0.00    2872         __gnu_cxx::new_allocator<std::_List_node<edge> >::new_allocator() [196]
-----------------------------------------------
                0.00    0.00    2872/2872        std::__cxx11::_List_base<edge, std::allocator<edge> >::_List_impl::_List_impl() [198]
[197]    0.0    0.00    0.00    2872         std::allocator<std::_List_node<edge> >::allocator() [197]
                0.00    0.00    2872/2872        __gnu_cxx::new_allocator<std::_List_node<edge> >::new_allocator() [196]
-----------------------------------------------
                0.00    0.00    2872/2872        std::__cxx11::_List_base<edge, std::allocator<edge> >::_List_base() [199]
[198]    0.0    0.00    0.00    2872         std::__cxx11::_List_base<edge, std::allocator<edge> >::_List_impl::_List_impl() [198]
                0.00    0.00    2872/2872        std::allocator<std::_List_node<edge> >::allocator() [197]
-----------------------------------------------
                0.00    0.00    2872/2872        std::__cxx11::list<edge, std::allocator<edge> >::list() [200]
[199]    0.0    0.00    0.00    2872         std::__cxx11::_List_base<edge, std::allocator<edge> >::_List_base() [199]
                0.00    0.00    2872/2872        std::__cxx11::_List_base<edge, std::allocator<edge> >::_List_impl::_List_impl() [198]
                0.00    0.00    2872/2884        std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_init() [195]
-----------------------------------------------
                0.00    0.00      12/2872        main [1]
                0.00    0.00     220/2872        fillEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [4]
                0.00    0.00    2640/2872        fillrandomcube(int*, int*, std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int (*) [3][3]) [2]
[200]    0.0    0.00    0.00    2872         std::__cxx11::list<edge, std::allocator<edge> >::list() [200]
                0.00    0.00    2872/2872        std::__cxx11::_List_base<edge, std::allocator<edge> >::_List_base() [199]
-----------------------------------------------
                0.00    0.00    2860/2860        std::allocator<std::_List_node<edge> >::~allocator() [202]
[201]    0.0    0.00    0.00    2860         __gnu_cxx::new_allocator<std::_List_node<edge> >::~new_allocator() [201]
-----------------------------------------------
                0.00    0.00    2860/2860        std::__cxx11::_List_base<edge, std::allocator<edge> >::_List_impl::~_List_impl() [203]
[202]    0.0    0.00    0.00    2860         std::allocator<std::_List_node<edge> >::~allocator() [202]
                0.00    0.00    2860/2860        __gnu_cxx::new_allocator<std::_List_node<edge> >::~new_allocator() [201]
-----------------------------------------------
                0.00    0.00    2860/2860        std::__cxx11::_List_base<edge, std::allocator<edge> >::~_List_base() [29]
[203]    0.0    0.00    0.00    2860         std::__cxx11::_List_base<edge, std::allocator<edge> >::_List_impl::~_List_impl() [203]
                0.00    0.00    2860/2860        std::allocator<std::_List_node<edge> >::~allocator() [202]
-----------------------------------------------
                0.00    0.00    2784/2784        askTwo(int*, int*, int*, int*) [312]
[204]    0.0    0.00    0.00    2784         QuestionCube::accessData(int, int, int, int) [204]
-----------------------------------------------
                0.00    0.00    2575/2575        void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_less_iter>(int*, __gnu_cxx::__ops::_Val_less_iter) [209]
[205]    0.0    0.00    0.00    2575         bool __gnu_cxx::__ops::_Val_less_iter::operator()<int, int*>(int&, int*) const [205]
-----------------------------------------------
                0.00    0.00    2248/2248        di(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [243]
[206]    0.0    0.00    0.00    2248         diRotate(int (*) [3][3]) [206]
                0.00    0.00    2248/15804       copyCube(int (*) [3][3]) [157]
-----------------------------------------------
                0.00    0.00    2164/2164        u(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [244]
[207]    0.0    0.00    0.00    2164         uRotate(int (*) [3][3]) [207]
                0.00    0.00    2164/15804       copyCube(int (*) [3][3]) [157]
-----------------------------------------------
                0.00    0.00    2006/2006        void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter) [221]
[208]    0.0    0.00    0.00    2006         __gnu_cxx::__ops::__val_comp_iter(__gnu_cxx::__ops::_Iter_less_iter) [208]
-----------------------------------------------
                0.00    0.00    2006/2006        void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter) [221]
[209]    0.0    0.00    0.00    2006         void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_less_iter>(int*, __gnu_cxx::__ops::_Val_less_iter) [209]
                0.00    0.00    4581/7609        std::remove_reference<int&>::type&& std::move<int&>(int&) [168]
                0.00    0.00    2575/2575        bool __gnu_cxx::__ops::_Val_less_iter::operator()<int, int*>(int&, int*) const [205]
-----------------------------------------------
                0.00    0.00    1996/1996        std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_init() [211]
[210]    0.0    0.00    0.00    1996         std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_set_size(unsigned long) [210]
                0.00    0.00    1996/141096      std::_List_node<unsigned long>::_M_valptr() [64]
-----------------------------------------------
                0.00    0.00       8/1996        std::__cxx11::list<corner, std::allocator<corner> >::clear() [42]
                0.00    0.00    1988/1996        std::__cxx11::_List_base<corner, std::allocator<corner> >::_List_base() [215]
[211]    0.0    0.00    0.00    1996         std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_init() [211]
                0.00    0.00    1996/1996        std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_set_size(unsigned long) [210]
-----------------------------------------------
                0.00    0.00    1988/1988        std::allocator<std::_List_node<corner> >::allocator() [213]
[212]    0.0    0.00    0.00    1988         __gnu_cxx::new_allocator<std::_List_node<corner> >::new_allocator() [212]
-----------------------------------------------
                0.00    0.00    1988/1988        std::__cxx11::_List_base<corner, std::allocator<corner> >::_List_impl::_List_impl() [214]
[213]    0.0    0.00    0.00    1988         std::allocator<std::_List_node<corner> >::allocator() [213]
                0.00    0.00    1988/1988        __gnu_cxx::new_allocator<std::_List_node<corner> >::new_allocator() [212]
-----------------------------------------------
                0.00    0.00    1988/1988        std::__cxx11::_List_base<corner, std::allocator<corner> >::_List_base() [215]
[214]    0.0    0.00    0.00    1988         std::__cxx11::_List_base<corner, std::allocator<corner> >::_List_impl::_List_impl() [214]
                0.00    0.00    1988/1988        std::allocator<std::_List_node<corner> >::allocator() [213]
-----------------------------------------------
                0.00    0.00    1988/1988        std::__cxx11::list<corner, std::allocator<corner> >::list() [216]
[215]    0.0    0.00    0.00    1988         std::__cxx11::_List_base<corner, std::allocator<corner> >::_List_base() [215]
                0.00    0.00    1988/1996        std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_init() [211]
                0.00    0.00    1988/1988        std::__cxx11::_List_base<corner, std::allocator<corner> >::_List_impl::_List_impl() [214]
-----------------------------------------------
                0.00    0.00       8/1988        main [1]
                0.00    0.00     220/1988        fillCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [3]
                0.00    0.00    1760/1988        fillrandomcube(int*, int*, std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int (*) [3][3]) [2]
[216]    0.0    0.00    0.00    1988         std::__cxx11::list<corner, std::allocator<corner> >::list() [216]
                0.00    0.00    1988/1988        std::__cxx11::_List_base<corner, std::allocator<corner> >::_List_base() [215]
-----------------------------------------------
                0.00    0.00    1980/1980        std::allocator<std::_List_node<corner> >::~allocator() [218]
[217]    0.0    0.00    0.00    1980         __gnu_cxx::new_allocator<std::_List_node<corner> >::~new_allocator() [217]
-----------------------------------------------
                0.00    0.00    1980/1980        std::__cxx11::_List_base<corner, std::allocator<corner> >::_List_impl::~_List_impl() [219]
[218]    0.0    0.00    0.00    1980         std::allocator<std::_List_node<corner> >::~allocator() [218]
                0.00    0.00    1980/1980        __gnu_cxx::new_allocator<std::_List_node<corner> >::~new_allocator() [217]
-----------------------------------------------
                0.00    0.00    1980/1980        std::__cxx11::_List_base<corner, std::allocator<corner> >::~_List_base() [26]
[219]    0.0    0.00    0.00    1980         std::__cxx11::_List_base<corner, std::allocator<corner> >::_List_impl::~_List_impl() [219]
                0.00    0.00    1980/1980        std::allocator<std::_List_node<corner> >::~allocator() [218]
-----------------------------------------------
                0.00    0.00    1760/1760        void std::sort<int*>(int*, int*) [225]
[220]    0.0    0.00    0.00    1760         __gnu_cxx::__ops::__iter_less_iter() [220]
-----------------------------------------------
                0.00    0.00    1760/1760        void std::__final_insertion_sort<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter) [223]
[221]    0.0    0.00    0.00    1760         void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter) [221]
                0.00    0.00    3520/3520        bool __gnu_cxx::__ops::_Iter_less_iter::operator()<int*, int*>(int*, int*) const [192]
                0.00    0.00    3028/7609        std::remove_reference<int&>::type&& std::move<int&>(int&) [168]
                0.00    0.00    2006/2006        __gnu_cxx::__ops::__val_comp_iter(__gnu_cxx::__ops::_Iter_less_iter) [208]
                0.00    0.00    2006/2006        void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_less_iter>(int*, __gnu_cxx::__ops::_Val_less_iter) [209]
                0.00    0.00    1514/1514        int* std::move_backward<int*, int*>(int*, int*, int*) [229]
-----------------------------------------------
                0.00    0.00    1760/1760        void std::__sort<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter) [226]
[222]    0.0    0.00    0.00    1760         void std::__introsort_loop<int*, long, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, long, __gnu_cxx::__ops::_Iter_less_iter) [222]
-----------------------------------------------
                0.00    0.00    1760/1760        void std::__sort<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter) [226]
[223]    0.0    0.00    0.00    1760         void std::__final_insertion_sort<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter) [223]
                0.00    0.00    1760/1760        void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter) [221]
-----------------------------------------------
                0.00    0.00    1760/1760        void std::__sort<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter) [226]
[224]    0.0    0.00    0.00    1760         std::__lg(long) [224]
-----------------------------------------------
                0.00    0.00    1760/1760        permutationparitytestCorners(int (*) [3][3]) [266]
[225]    0.0    0.00    0.00    1760         void std::sort<int*>(int*, int*) [225]
                0.00    0.00    1760/1760        __gnu_cxx::__ops::__iter_less_iter() [220]
                0.00    0.00    1760/1760        void std::__sort<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter) [226]
-----------------------------------------------
                0.00    0.00    1760/1760        void std::sort<int*>(int*, int*) [225]
[226]    0.0    0.00    0.00    1760         void std::__sort<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter) [226]
                0.00    0.00    1760/1760        std::__lg(long) [224]
                0.00    0.00    1760/1760        void std::__introsort_loop<int*, long, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, long, __gnu_cxx::__ops::_Iter_less_iter) [222]
                0.00    0.00    1760/1760        void std::__final_insertion_sort<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter) [223]
-----------------------------------------------
                0.00    0.00     363/1656        sortOutImpossibleEdges(int*, std::__cxx11::list<edge, std::allocator<edge> >&, int*, int*) [38]
                0.00    0.00    1293/1656        findEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int*, int) [14]
[227]    0.0    0.00    0.00    1656         std::_List_iterator<edge>::operator==(std::_List_iterator<edge> const&) const [227]
-----------------------------------------------
                0.00    0.00    1514/1514        int* std::__copy_move_backward_a<true, int*, int*>(int*, int*, int*) [230]
[228]    0.0    0.00    0.00    1514         int* std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<int>(int const*, int const*, int*) [228]
-----------------------------------------------
                0.00    0.00    1514/1514        void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter) [221]
[229]    0.0    0.00    0.00    1514         int* std::move_backward<int*, int*>(int*, int*, int*) [229]
                0.00    0.00    3028/3028        int* std::__miter_base<int*>(int*) [193]
                0.00    0.00    1514/1514        int* std::__copy_move_backward_a2<true, int*, int*>(int*, int*, int*) [231]
-----------------------------------------------
                0.00    0.00    1514/1514        int* std::__copy_move_backward_a2<true, int*, int*>(int*, int*, int*) [231]
[230]    0.0    0.00    0.00    1514         int* std::__copy_move_backward_a<true, int*, int*>(int*, int*, int*) [230]
                0.00    0.00    1514/1514        int* std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<int>(int const*, int const*, int*) [228]
-----------------------------------------------
                0.00    0.00    1514/1514        int* std::move_backward<int*, int*>(int*, int*, int*) [229]
[231]    0.0    0.00    0.00    1514         int* std::__copy_move_backward_a2<true, int*, int*>(int*, int*, int*) [231]
                0.00    0.00    4542/4542        int* std::__niter_base<int*>(int*) [190]
                0.00    0.00    1514/1514        int* std::__copy_move_backward_a<true, int*, int*>(int*, int*, int*) [230]
-----------------------------------------------
                0.00    0.00    1252/1252        ui(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [252]
[232]    0.0    0.00    0.00    1252         uiRotate(int (*) [3][3]) [232]
                0.00    0.00    1252/15804       copyCube(int (*) [3][3]) [157]
-----------------------------------------------
                0.00    0.00    1200/1200        f(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [253]
[233]    0.0    0.00    0.00    1200         fRotate(int (*) [3][3]) [233]
                0.00    0.00    1200/15804       copyCube(int (*) [3][3]) [157]
-----------------------------------------------
                0.00    0.00    1132/1132        l(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [254]
[234]    0.0    0.00    0.00    1132         lRotate(int (*) [3][3]) [234]
                0.00    0.00    1132/15804       copyCube(int (*) [3][3]) [157]
-----------------------------------------------
                0.00    0.00    1068/1068        r(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [255]
[235]    0.0    0.00    0.00    1068         rRotate(int (*) [3][3]) [235]
                0.00    0.00    1068/15804       copyCube(int (*) [3][3]) [157]
-----------------------------------------------
                0.00    0.00     244/990         sortOutImpossibleCodes(int*, std::__cxx11::list<middle, std::allocator<middle> >&, int*) [340]
                0.00    0.00     318/990         sortOutImpossibleCorners(int*, std::__cxx11::list<corner, std::allocator<corner> >&, int*, int*) [39]
                0.00    0.00     428/990         sortOutImpossibleEdges(int*, std::__cxx11::list<edge, std::allocator<edge> >&, int*, int*) [38]
[236]    0.0    0.00    0.00     990         sortAnswer(int*) [236]
-----------------------------------------------
                0.00    0.00       1/989         li(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [277]
                0.00    0.00       1/989         fi(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [278]
                0.00    0.00       1/989         bi(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [270]
                0.00    0.00       2/989         ri(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [268]
                0.00    0.00      20/989         b(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [269]
                0.00    0.00      35/989         r(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [255]
                0.00    0.00      88/989         l(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [254]
                0.00    0.00      93/989         f(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [253]
                0.00    0.00     106/989         ui(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [252]
                0.00    0.00     158/989         di(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [243]
                0.00    0.00     187/989         u(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [244]
                0.00    0.00     297/989         d(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [238]
[237]    0.0    0.00    0.00     989         removeLast() [237]
-----------------------------------------------
                0.00    0.00      35/881         moveTopEdges(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [327]
                0.00    0.00      36/881         placeMiddleEdge(int, int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [314]
                0.00    0.00      36/881         rotateEdges(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [320]
                0.00    0.00      40/881         twoCornerRotate(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [316]
                0.00    0.00      56/881         swapCorners(int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [318]
                0.00    0.00      61/881         solveTopCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [330]
                0.00    0.00      75/881         moveTopCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [329]
                0.00    0.00     120/881         middleAlgorithm(int, int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [310]
                0.00    0.00     130/881         positionBottomCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [336]
                0.00    0.00     136/881         twoEdgeRotate(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [322]
                0.00    0.00     156/881         solveTopCross(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [328]
[238]    0.0    0.00    0.00     881         d(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [238]
                0.00    0.00    3524/3524        dRotate(int (*) [3][3]) [191]
                0.00    0.00    2207/10251       last[abi:cxx11]() [166]
                0.00    0.00    2207/10251       bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [167]
                0.00    0.00     297/989         removeLast() [237]
-----------------------------------------------
                0.00    0.00     265/839         sortOutImpossibleCorners(int*, std::__cxx11::list<corner, std::allocator<corner> >&, int*, int*) [39]
                0.00    0.00     574/839         findCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int*, int) [17]
[239]    0.0    0.00    0.00     839         std::_List_iterator<corner>::operator==(std::_List_iterator<corner> const&) const [239]
-----------------------------------------------
                0.00    0.00     788/788         ri(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [268]
[240]    0.0    0.00    0.00     788         riRotate(int (*) [3][3]) [240]
                0.00    0.00     788/15804       copyCube(int (*) [3][3]) [157]
-----------------------------------------------
                0.00    0.00     776/776         b(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [269]
[241]    0.0    0.00    0.00     776         bRotate(int (*) [3][3]) [241]
                0.00    0.00     776/15804       copyCube(int (*) [3][3]) [157]
-----------------------------------------------
                0.00    0.00     728/728         bi(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [270]
[242]    0.0    0.00    0.00     728         biRotate(int (*) [3][3]) [242]
                0.00    0.00     728/15804       copyCube(int (*) [3][3]) [157]
-----------------------------------------------
                0.00    0.00       2/562         solveTopCross(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [328]
                0.00    0.00      16/562         rotateEdges(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [320]
                0.00    0.00      17/562         placeMiddleEdge(int, int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [314]
                0.00    0.00      40/562         twoCornerRotate(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [316]
                0.00    0.00      52/562         twoEdgeRotate(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [322]
                0.00    0.00      84/562         swapCorners(int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [318]
                0.00    0.00     120/562         middleAlgorithm(int, int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [310]
                0.00    0.00     231/562         solveTopCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [330]
[243]    0.0    0.00    0.00     562         di(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [243]
                0.00    0.00    2248/2248        diRotate(int (*) [3][3]) [206]
                0.00    0.00    1473/10251       last[abi:cxx11]() [166]
                0.00    0.00    1473/10251       bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [167]
                0.00    0.00     158/989         removeLast() [237]
-----------------------------------------------
                0.00    0.00      72/541         moveTopEdges(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [327]
                0.00    0.00      72/541         moveTopCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [329]
                0.00    0.00      80/541         twoCornerRotate(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [316]
                0.00    0.00     104/541         solveTopCross(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [328]
                0.00    0.00     105/541         twoEdgeRotate(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [322]
                0.00    0.00     108/541         solveTopCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [330]
[244]    0.0    0.00    0.00     541         u(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [244]
                0.00    0.00    2164/2164        uRotate(int (*) [3][3]) [207]
                0.00    0.00    1318/10251       last[abi:cxx11]() [166]
                0.00    0.00    1318/10251       bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [167]
                0.00    0.00     187/989         removeLast() [237]
-----------------------------------------------
                0.00    0.00       6/533         findMiddle(int*) [347]
                0.00    0.00       9/533         eliminateFound(std::__cxx11::list<middle, std::allocator<middle> >&, int*) [345]
                0.00    0.00      11/533         sortOutImpossibleCodes(int*, std::__cxx11::list<middle, std::allocator<middle> >&, int*) [340]
                0.00    0.00     166/533         containsMiddle(std::__cxx11::list<middle, std::allocator<middle> >&, int, int) [275]
                0.00    0.00     341/533         getNextQuestion(std::__cxx11::list<middle, std::allocator<middle> >&, int*) [339]
[245]    0.0    0.00    0.00     533         std::__cxx11::list<middle, std::allocator<middle> >::begin() [245]
                0.00    0.00     533/6507        std::_List_iterator<middle>::_List_iterator(std::__detail::_List_node_base*) [169]
-----------------------------------------------
                0.00    0.00     484/484         numCorrectCorners() [276]
[246]    0.0    0.00    0.00     484         getCorner(int, int*) [246]
-----------------------------------------------
                0.00    0.00     468/468         li(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [277]
[247]    0.0    0.00    0.00     468         liRotate(int (*) [3][3]) [247]
                0.00    0.00     468/15804       copyCube(int (*) [3][3]) [157]
-----------------------------------------------
                0.00    0.00     456/456         fi(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [278]
[248]    0.0    0.00    0.00     456         fiRotate(int (*) [3][3]) [248]
                0.00    0.00     456/15804       copyCube(int (*) [3][3]) [157]
-----------------------------------------------
                0.00    0.00     220/440         permutationparitytestCorners(int (*) [3][3]) [266]
                0.00    0.00     220/440         cornerparitytest(int (*) [3][3]) [265]
[249]    0.0    0.00    0.00     440         getCorners(int (*) [3], int (*) [3][3]) [249]
-----------------------------------------------
                0.00    0.00     220/440         permutationparitytestCorners(int (*) [3][3]) [266]
                0.00    0.00     220/440         edgepartitytest(int (*) [3][3]) [263]
[250]    0.0    0.00    0.00     440         getEdges(int (*) [2], int (*) [3][3]) [250]
-----------------------------------------------
                0.00    0.00      90/360         void std::__cxx11::list<middle, std::allocator<middle> >::_M_insert<middle const&>(std::_List_iterator<middle>, middle const&) [296]
                0.00    0.00      90/360         std::_List_node<middle>* std::__cxx11::list<middle, std::allocator<middle> >::_M_create_node<middle const&>(middle const&) [295]
                0.00    0.00      90/360         void std::allocator_traits<std::allocator<std::_List_node<middle> > >::construct<middle, middle const&>(std::allocator<std::_List_node<middle> >&, middle*, middle const&) [291]
                0.00    0.00      90/360         void __gnu_cxx::new_allocator<std::_List_node<middle> >::construct<middle, middle const&>(middle*, middle const&) [283]
[251]    0.0    0.00    0.00     360         middle const& std::forward<middle const&>(std::remove_reference<middle const&>::type&) [251]
-----------------------------------------------
                0.00    0.00      21/313         twoEdgeRotate(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [322]
                0.00    0.00      80/313         twoCornerRotate(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [316]
                0.00    0.00     104/313         solveTopCross(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [328]
                0.00    0.00     108/313         solveTopCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [330]
[252]    0.0    0.00    0.00     313         ui(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [252]
                0.00    0.00    1252/1252        uiRotate(int (*) [3][3]) [232]
                0.00    0.00     760/10251       last[abi:cxx11]() [166]
                0.00    0.00     760/10251       bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [167]
                0.00    0.00     106/989         removeLast() [237]
-----------------------------------------------
                0.00    0.00       4/300         solveTopCross(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [328]
                0.00    0.00      23/300         swapCorners(int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [318]
                0.00    0.00      29/300         middleAlgorithm(int, int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [310]
                0.00    0.00      37/300         twoEdgeRotate(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [322]
                0.00    0.00      38/300         twoCornerRotate(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [316]
                0.00    0.00      63/300         rotateEdges(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [320]
                0.00    0.00     106/300         moveTopEdges(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [327]
[253]    0.0    0.00    0.00     300         f(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [253]
                0.00    0.00    1200/1200        fRotate(int (*) [3][3]) [233]
                0.00    0.00     714/10251       last[abi:cxx11]() [166]
                0.00    0.00     714/10251       bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [167]
                0.00    0.00      93/989         removeLast() [237]
-----------------------------------------------
                0.00    0.00       5/283         swapCorners(int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [318]
                0.00    0.00      18/283         middleAlgorithm(int, int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [310]
                0.00    0.00      31/283         twoEdgeRotate(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [322]
                0.00    0.00      47/283         rotateEdges(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [320]
                0.00    0.00      48/283         twoCornerRotate(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [316]
                0.00    0.00     134/283         solveTopCross(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [328]
[254]    0.0    0.00    0.00     283         l(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [254]
                0.00    0.00    1132/1132        lRotate(int (*) [3][3]) [234]
                0.00    0.00     679/10251       last[abi:cxx11]() [166]
                0.00    0.00     679/10251       bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [167]
                0.00    0.00      88/989         removeLast() [237]
-----------------------------------------------
                0.00    0.00       1/267         solveTopCross(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [328]
                0.00    0.00       5/267         swapCorners(int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [318]
                0.00    0.00      26/267         twoEdgeRotate(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [322]
                0.00    0.00      32/267         twoCornerRotate(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [316]
                0.00    0.00      42/267         middleAlgorithm(int, int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [310]
                0.00    0.00      46/267         moveTopCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [329]
                0.00    0.00      50/267         solveTopCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [330]
                0.00    0.00      65/267         rotateEdges(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [320]
[255]    0.0    0.00    0.00     267         r(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [255]
                0.00    0.00    1068/1068        rRotate(int (*) [3][3]) [235]
                0.00    0.00     731/10251       last[abi:cxx11]() [166]
                0.00    0.00     731/10251       bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [167]
                0.00    0.00      35/989         removeLast() [237]
-----------------------------------------------
                0.00    0.00      72/246         sendmoves() [309]
                0.00    0.00     174/246         askTwo(int*, int*, int*, int*) [312]
[256]    0.0    0.00    0.00     246         doTheClient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [256]
-----------------------------------------------
                0.00    0.00     237/237         solveMiddleLayer(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [332]
[257]    0.0    0.00    0.00     237         findBottomMatch(int) [257]
-----------------------------------------------
                0.00    0.00     220/220         fillrandomcube(int*, int*, std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int (*) [3][3]) [2]
[258]    0.0    0.00    0.00     220         fillCenter(int*, int*) [258]
-----------------------------------------------
                0.00    0.00     220/220         fillCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [3]
[259]    0.0    0.00    0.00     220         setCorners(int (*) [3], int (*) [3][3], int (*) [3][3], int (*) [3][3]) [259]
-----------------------------------------------
                0.00    0.00     220/220         fillrandomcube(int*, int*, std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int (*) [3][3]) [2]
[260]    0.0    0.00    0.00     220         SortEdgesList(std::__cxx11::list<edge, std::allocator<edge> >*, int*, int) [260]
                0.00    0.00    6380/10698       std::__cxx11::list<edge, std::allocator<edge> >::size() const [165]
-----------------------------------------------
                0.00    0.00     220/220         permutationparitytestCorners(int (*) [3][3]) [266]
[261]    0.0    0.00    0.00     220         PlaceToBeEdges(int (*) [2], int (*) [3][3]) [261]
-----------------------------------------------
                0.00    0.00     220/220         fillrandomcube(int*, int*, std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int (*) [3][3]) [2]
[262]    0.0    0.00    0.00     220         SortCornerList(std::__cxx11::list<corner, std::allocator<corner> >*, int*, int) [262]
                0.00    0.00    3416/6045        std::__cxx11::list<corner, std::allocator<corner> >::size() const [171]
-----------------------------------------------
                0.00    0.00     220/220         checksolvability(int (*) [3][3]) [264]
[263]    0.0    0.00    0.00     220         edgepartitytest(int (*) [3][3]) [263]
                0.00    0.00     220/440         getEdges(int (*) [2], int (*) [3][3]) [250]
-----------------------------------------------
                0.00    0.00     220/220         fillrandomcube(int*, int*, std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int (*) [3][3]) [2]
[264]    0.0    0.00    0.00     220         checksolvability(int (*) [3][3]) [264]
                0.00    0.00     220/220         edgepartitytest(int (*) [3][3]) [263]
                0.00    0.00     220/220         cornerparitytest(int (*) [3][3]) [265]
                0.00    0.00     220/220         permutationparitytestCorners(int (*) [3][3]) [266]
-----------------------------------------------
                0.00    0.00     220/220         checksolvability(int (*) [3][3]) [264]
[265]    0.0    0.00    0.00     220         cornerparitytest(int (*) [3][3]) [265]
                0.00    0.00     220/440         getCorners(int (*) [3], int (*) [3][3]) [249]
-----------------------------------------------
                0.00    0.00     220/220         checksolvability(int (*) [3][3]) [264]
[266]    0.0    0.00    0.00     220         permutationparitytestCorners(int (*) [3][3]) [266]
                0.00    0.00    1760/1760        void std::sort<int*>(int*, int*) [225]
                0.00    0.00     220/440         getCorners(int (*) [3], int (*) [3][3]) [249]
                0.00    0.00     220/220         PlaceToBeEdges(int (*) [2], int (*) [3][3]) [261]
                0.00    0.00     220/440         getEdges(int (*) [2], int (*) [3][3]) [250]
-----------------------------------------------
                0.00    0.00     220/220         fillEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [4]
[267]    0.0    0.00    0.00     220         setEdges(int (*) [2], int (*) [3][3], int (*) [3][3], int (*) [3][3]) [267]
-----------------------------------------------
                0.00    0.00       1/197         solveTopCross(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [328]
                0.00    0.00       5/197         swapCorners(int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [318]
                0.00    0.00      10/197         twoEdgeRotate(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [322]
                0.00    0.00      11/197         rotateEdges(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [320]
                0.00    0.00      32/197         twoCornerRotate(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [316]
                0.00    0.00      42/197         middleAlgorithm(int, int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [310]
                0.00    0.00      46/197         moveTopCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [329]
                0.00    0.00      50/197         solveTopCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [330]
[268]    0.0    0.00    0.00     197         ri(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [268]
                0.00    0.00     788/788         riRotate(int (*) [3][3]) [240]
                0.00    0.00     591/10251       last[abi:cxx11]() [166]
                0.00    0.00     591/10251       bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [167]
                0.00    0.00       2/989         removeLast() [237]
-----------------------------------------------
                0.00    0.00      23/194         swapCorners(int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [318]
                0.00    0.00      31/194         middleAlgorithm(int, int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [310]
                0.00    0.00      32/194         twoEdgeRotate(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [322]
                0.00    0.00      33/194         solveTopCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [330]
                0.00    0.00      33/194         rotateEdges(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [320]
                0.00    0.00      42/194         twoCornerRotate(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [316]
[269]    0.0    0.00    0.00     194         b(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [269]
                0.00    0.00     776/776         bRotate(int (*) [3][3]) [241]
                0.00    0.00     542/10251       last[abi:cxx11]() [166]
                0.00    0.00     542/10251       bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [167]
                0.00    0.00      20/989         removeLast() [237]
-----------------------------------------------
                0.00    0.00      12/182         twoEdgeRotate(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [322]
                0.00    0.00      15/182         rotateEdges(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [320]
                0.00    0.00      23/182         swapCorners(int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [318]
                0.00    0.00      26/182         solveTopCross(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [328]
                0.00    0.00      31/182         middleAlgorithm(int, int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [310]
                0.00    0.00      33/182         solveTopCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [330]
                0.00    0.00      42/182         twoCornerRotate(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [316]
[270]    0.0    0.00    0.00     182         bi(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [270]
                0.00    0.00     728/728         biRotate(int (*) [3][3]) [242]
                0.00    0.00     545/10251       last[abi:cxx11]() [166]
                0.00    0.00     545/10251       bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [167]
                0.00    0.00       1/989         removeLast() [237]
-----------------------------------------------
                0.00    0.00       1/180         std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_clear() [358]
                0.00    0.00      89/180         std::__cxx11::list<middle, std::allocator<middle> >::_M_erase(std::_List_iterator<middle>) [304]
                0.00    0.00      90/180         std::_List_node<middle>* std::__cxx11::list<middle, std::allocator<middle> >::_M_create_node<middle const&>(middle const&) [295]
[271]    0.0    0.00    0.00     180         std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_get_Node_allocator() [271]
-----------------------------------------------
                0.00    0.00     174/174         askTwo(int*, int*, int*, int*) [312]
[272]    0.0    0.00    0.00     174         changeColor(int) [272]
-----------------------------------------------
                0.00    0.00     174/174         askTwo(int*, int*, int*, int*) [312]
[273]    0.0    0.00    0.00     174         answerConverter(int*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [273]
-----------------------------------------------
                0.00    0.00     174/174         askTwo(int*, int*, int*, int*) [312]
[274]    0.0    0.00    0.00     174         QuestionCube::makeQuestion[abi:cxx11]() [274]
-----------------------------------------------
                0.00    0.00     166/166         getNextQuestion(std::__cxx11::list<middle, std::allocator<middle> >&, int*) [339]
[275]    0.0    0.00    0.00     166         containsMiddle(std::__cxx11::list<middle, std::allocator<middle> >&, int, int) [275]
                0.00    0.00    1464/16583       std::_List_iterator<middle>::operator->() const [140]
                0.00    0.00    1255/5796        std::__cxx11::list<middle, std::allocator<middle> >::end() [172]
                0.00    0.00    1255/5617        std::_List_iterator<middle>::operator!=(std::_List_iterator<middle> const&) const [173]
                0.00    0.00    1089/5024        std::_List_iterator<middle>::operator++(int) [174]
                0.00    0.00     166/533         std::__cxx11::list<middle, std::allocator<middle> >::begin() [245]
-----------------------------------------------
                0.00    0.00     121/121         positionBottomCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [336]
[276]    0.0    0.00    0.00     121         numCorrectCorners() [276]
                0.00    0.00     484/484         getCorner(int, int*) [246]
-----------------------------------------------
                0.00    0.00       5/117         swapCorners(int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [318]
                0.00    0.00      11/117         rotateEdges(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [320]
                0.00    0.00      11/117         twoEdgeRotate(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [322]
                0.00    0.00      18/117         middleAlgorithm(int, int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [310]
                0.00    0.00      24/117         solveTopCross(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [328]
                0.00    0.00      48/117         twoCornerRotate(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [316]
[277]    0.0    0.00    0.00     117         li(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [277]
                0.00    0.00     468/468         liRotate(int (*) [3][3]) [247]
                0.00    0.00     350/10251       last[abi:cxx11]() [166]
                0.00    0.00     350/10251       bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [167]
                0.00    0.00       1/989         removeLast() [237]
-----------------------------------------------
                0.00    0.00       9/114         twoEdgeRotate(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [322]
                0.00    0.00      15/114         rotateEdges(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [320]
                0.00    0.00      23/114         swapCorners(int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [318]
                0.00    0.00      29/114         middleAlgorithm(int, int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [310]
                0.00    0.00      38/114         twoCornerRotate(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [316]
[278]    0.0    0.00    0.00     114         fi(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [278]
                0.00    0.00     456/456         fiRotate(int (*) [3][3]) [248]
                0.00    0.00     341/10251       last[abi:cxx11]() [166]
                0.00    0.00     341/10251       bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [167]
                0.00    0.00       1/989         removeLast() [237]
-----------------------------------------------
                0.00    0.00       1/90          sendmoves() [309]
                0.00    0.00      89/90          main [1]
[279]    0.0    0.00    0.00      90         printCubeColor(int (*) [3][3]) [279]
                0.00    0.00    4860/4860        printColor[abi:cxx11](int) [183]
-----------------------------------------------
                0.00    0.00      90/90          std::allocator_traits<std::allocator<std::_List_node<middle> > >::deallocate(std::allocator<std::_List_node<middle> >&, std::_List_node<middle>*, unsigned long) [288]
[280]    0.0    0.00    0.00      90         __gnu_cxx::new_allocator<std::_List_node<middle> >::deallocate(std::_List_node<middle>*, unsigned long) [280]
-----------------------------------------------
                0.00    0.00      90/90          void std::allocator_traits<std::allocator<std::_List_node<middle> > >::destroy<middle>(std::allocator<std::_List_node<middle> >&, middle*) [289]
[281]    0.0    0.00    0.00      90         void __gnu_cxx::new_allocator<std::_List_node<middle> >::destroy<middle>(middle*) [281]
-----------------------------------------------
                0.00    0.00      90/90          std::allocator_traits<std::allocator<std::_List_node<middle> > >::allocate(std::allocator<std::_List_node<middle> >&, unsigned long) [290]
[282]    0.0    0.00    0.00      90         __gnu_cxx::new_allocator<std::_List_node<middle> >::allocate(unsigned long, void const*) [282]
                0.00    0.00      90/90          __gnu_cxx::new_allocator<std::_List_node<middle> >::max_size() const [284]
-----------------------------------------------
                0.00    0.00      90/90          void std::allocator_traits<std::allocator<std::_List_node<middle> > >::construct<middle, middle const&>(std::allocator<std::_List_node<middle> >&, middle*, middle const&) [291]
[283]    0.0    0.00    0.00      90         void __gnu_cxx::new_allocator<std::_List_node<middle> >::construct<middle, middle const&>(middle*, middle const&) [283]
                0.00    0.00      90/360         middle const& std::forward<middle const&>(std::remove_reference<middle const&>::type&) [251]
                0.00    0.00      90/74404       operator new(unsigned long, void*) [69]
-----------------------------------------------
                0.00    0.00      90/90          __gnu_cxx::new_allocator<std::_List_node<middle> >::allocate(unsigned long, void const*) [282]
[284]    0.0    0.00    0.00      90         __gnu_cxx::new_allocator<std::_List_node<middle> >::max_size() const [284]
-----------------------------------------------
                0.00    0.00      90/90          std::_List_node<middle>* std::__cxx11::list<middle, std::allocator<middle> >::_M_create_node<middle const&>(middle const&) [295]
[285]    0.0    0.00    0.00      90         std::__allocated_ptr<std::allocator<std::_List_node<middle> > >::__allocated_ptr(std::allocator<std::_List_node<middle> >&, std::_List_node<middle>*) [285]
                0.00    0.00      90/90          std::allocator<std::_List_node<middle> >* std::__addressof<std::allocator<std::_List_node<middle> > >(std::allocator<std::_List_node<middle> >&) [298]
-----------------------------------------------
                0.00    0.00      90/90          std::_List_node<middle>* std::__cxx11::list<middle, std::allocator<middle> >::_M_create_node<middle const&>(middle const&) [295]
[286]    0.0    0.00    0.00      90         std::__allocated_ptr<std::allocator<std::_List_node<middle> > >::~__allocated_ptr() [286]
-----------------------------------------------
                0.00    0.00      90/90          std::_List_node<middle>* std::__cxx11::list<middle, std::allocator<middle> >::_M_create_node<middle const&>(middle const&) [295]
[287]    0.0    0.00    0.00      90         std::__allocated_ptr<std::allocator<std::_List_node<middle> > >::operator=(decltype(nullptr)) [287]
-----------------------------------------------
                0.00    0.00      90/90          std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_put_node(std::_List_node<middle>*) [294]
[288]    0.0    0.00    0.00      90         std::allocator_traits<std::allocator<std::_List_node<middle> > >::deallocate(std::allocator<std::_List_node<middle> >&, std::_List_node<middle>*, unsigned long) [288]
                0.00    0.00      90/90          __gnu_cxx::new_allocator<std::_List_node<middle> >::deallocate(std::_List_node<middle>*, unsigned long) [280]
-----------------------------------------------
                0.00    0.00       1/90          std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_clear() [358]
                0.00    0.00      89/90          std::__cxx11::list<middle, std::allocator<middle> >::_M_erase(std::_List_iterator<middle>) [304]
[289]    0.0    0.00    0.00      90         void std::allocator_traits<std::allocator<std::_List_node<middle> > >::destroy<middle>(std::allocator<std::_List_node<middle> >&, middle*) [289]
                0.00    0.00      90/90          void __gnu_cxx::new_allocator<std::_List_node<middle> >::destroy<middle>(middle*) [281]
-----------------------------------------------
                0.00    0.00      90/90          std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_get_node() [292]
[290]    0.0    0.00    0.00      90         std::allocator_traits<std::allocator<std::_List_node<middle> > >::allocate(std::allocator<std::_List_node<middle> >&, unsigned long) [290]
                0.00    0.00      90/90          __gnu_cxx::new_allocator<std::_List_node<middle> >::allocate(unsigned long, void const*) [282]
-----------------------------------------------
                0.00    0.00      90/90          std::_List_node<middle>* std::__cxx11::list<middle, std::allocator<middle> >::_M_create_node<middle const&>(middle const&) [295]
[291]    0.0    0.00    0.00      90         void std::allocator_traits<std::allocator<std::_List_node<middle> > >::construct<middle, middle const&>(std::allocator<std::_List_node<middle> >&, middle*, middle const&) [291]
                0.00    0.00      90/360         middle const& std::forward<middle const&>(std::remove_reference<middle const&>::type&) [251]
                0.00    0.00      90/90          void __gnu_cxx::new_allocator<std::_List_node<middle> >::construct<middle, middle const&>(middle*, middle const&) [283]
-----------------------------------------------
                0.00    0.00      90/90          std::_List_node<middle>* std::__cxx11::list<middle, std::allocator<middle> >::_M_create_node<middle const&>(middle const&) [295]
[292]    0.0    0.00    0.00      90         std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_get_node() [292]
                0.00    0.00      90/90          std::allocator_traits<std::allocator<std::_List_node<middle> > >::allocate(std::allocator<std::_List_node<middle> >&, unsigned long) [290]
-----------------------------------------------
                0.00    0.00      90/90          void std::__cxx11::list<middle, std::allocator<middle> >::_M_insert<middle const&>(std::_List_iterator<middle>, middle const&) [296]
[293]    0.0    0.00    0.00      90         std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_inc_size(unsigned long) [293]
                0.00    0.00      90/141096      std::_List_node<unsigned long>::_M_valptr() [64]
-----------------------------------------------
                0.00    0.00       1/90          std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_clear() [358]
                0.00    0.00      89/90          std::__cxx11::list<middle, std::allocator<middle> >::_M_erase(std::_List_iterator<middle>) [304]
[294]    0.0    0.00    0.00      90         std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_put_node(std::_List_node<middle>*) [294]
                0.00    0.00      90/90          std::allocator_traits<std::allocator<std::_List_node<middle> > >::deallocate(std::allocator<std::_List_node<middle> >&, std::_List_node<middle>*, unsigned long) [288]
-----------------------------------------------
                0.00    0.00      90/90          void std::__cxx11::list<middle, std::allocator<middle> >::_M_insert<middle const&>(std::_List_iterator<middle>, middle const&) [296]
[295]    0.0    0.00    0.00      90         std::_List_node<middle>* std::__cxx11::list<middle, std::allocator<middle> >::_M_create_node<middle const&>(middle const&) [295]
                0.00    0.00      90/90          std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_get_node() [292]
                0.00    0.00      90/180         std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_get_Node_allocator() [271]
                0.00    0.00      90/90          std::__allocated_ptr<std::allocator<std::_List_node<middle> > >::__allocated_ptr(std::allocator<std::_List_node<middle> >&, std::_List_node<middle>*) [285]
                0.00    0.00      90/360         middle const& std::forward<middle const&>(std::remove_reference<middle const&>::type&) [251]
                0.00    0.00      90/16763       std::_List_node<middle>::_M_valptr() [139]
                0.00    0.00      90/90          void std::allocator_traits<std::allocator<std::_List_node<middle> > >::construct<middle, middle const&>(std::allocator<std::_List_node<middle> >&, middle*, middle const&) [291]
                0.00    0.00      90/90          std::__allocated_ptr<std::allocator<std::_List_node<middle> > >::operator=(decltype(nullptr)) [287]
                0.00    0.00      90/90          std::__allocated_ptr<std::allocator<std::_List_node<middle> > >::~__allocated_ptr() [286]
-----------------------------------------------
                0.00    0.00      90/90          std::__cxx11::list<middle, std::allocator<middle> >::push_back(middle const&) [297]
[296]    0.0    0.00    0.00      90         void std::__cxx11::list<middle, std::allocator<middle> >::_M_insert<middle const&>(std::_List_iterator<middle>, middle const&) [296]
                0.00    0.00      90/360         middle const& std::forward<middle const&>(std::remove_reference<middle const&>::type&) [251]
                0.00    0.00      90/90          std::_List_node<middle>* std::__cxx11::list<middle, std::allocator<middle> >::_M_create_node<middle const&>(middle const&) [295]
                0.00    0.00      90/90          std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_inc_size(unsigned long) [293]
-----------------------------------------------
                0.00    0.00      90/90          buildCombOfTwo(std::__cxx11::list<middle, std::allocator<middle> >&) [344]
[297]    0.0    0.00    0.00      90         std::__cxx11::list<middle, std::allocator<middle> >::push_back(middle const&) [297]
                0.00    0.00      90/5796        std::__cxx11::list<middle, std::allocator<middle> >::end() [172]
                0.00    0.00      90/90          void std::__cxx11::list<middle, std::allocator<middle> >::_M_insert<middle const&>(std::_List_iterator<middle>, middle const&) [296]
-----------------------------------------------
                0.00    0.00      90/90          std::__allocated_ptr<std::allocator<std::_List_node<middle> > >::__allocated_ptr(std::allocator<std::_List_node<middle> >&, std::_List_node<middle>*) [285]
[298]    0.0    0.00    0.00      90         std::allocator<std::_List_node<middle> >* std::__addressof<std::allocator<std::_List_node<middle> > >(std::allocator<std::_List_node<middle> >&) [298]
-----------------------------------------------
                0.00    0.00      21/89          eliminateFound(std::__cxx11::list<middle, std::allocator<middle> >&, int*) [345]
                0.00    0.00      68/89          sortOutImpossibleCodes(int*, std::__cxx11::list<middle, std::allocator<middle> >&, int*) [340]
[299]    0.0    0.00    0.00      89         std::_List_iterator<middle>::operator==(std::_List_iterator<middle> const&) const [299]
-----------------------------------------------
                0.00    0.00      89/89          std::__cxx11::list<middle, std::allocator<middle> >::erase(std::_List_const_iterator<middle>) [303]
[300]    0.0    0.00    0.00      89         std::_List_const_iterator<middle>::_M_const_cast() const [300]
                0.00    0.00      89/6507        std::_List_iterator<middle>::_List_iterator(std::__detail::_List_node_base*) [169]
-----------------------------------------------
                0.00    0.00      21/89          eliminateFound(std::__cxx11::list<middle, std::allocator<middle> >&, int*) [345]
                0.00    0.00      68/89          sortOutImpossibleCodes(int*, std::__cxx11::list<middle, std::allocator<middle> >&, int*) [340]
[301]    0.0    0.00    0.00      89         std::_List_const_iterator<middle>::_List_const_iterator(std::_List_iterator<middle> const&) [301]
-----------------------------------------------
                0.00    0.00      89/89          std::__cxx11::list<middle, std::allocator<middle> >::_M_erase(std::_List_iterator<middle>) [304]
[302]    0.0    0.00    0.00      89         std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_dec_size(unsigned long) [302]
                0.00    0.00      89/141096      std::_List_node<unsigned long>::_M_valptr() [64]
-----------------------------------------------
                0.00    0.00      21/89          eliminateFound(std::__cxx11::list<middle, std::allocator<middle> >&, int*) [345]
                0.00    0.00      68/89          sortOutImpossibleCodes(int*, std::__cxx11::list<middle, std::allocator<middle> >&, int*) [340]
[303]    0.0    0.00    0.00      89         std::__cxx11::list<middle, std::allocator<middle> >::erase(std::_List_const_iterator<middle>) [303]
                0.00    0.00      89/6507        std::_List_iterator<middle>::_List_iterator(std::__detail::_List_node_base*) [169]
                0.00    0.00      89/89          std::_List_const_iterator<middle>::_M_const_cast() const [300]
                0.00    0.00      89/89          std::__cxx11::list<middle, std::allocator<middle> >::_M_erase(std::_List_iterator<middle>) [304]
-----------------------------------------------
                0.00    0.00      89/89          std::__cxx11::list<middle, std::allocator<middle> >::erase(std::_List_const_iterator<middle>) [303]
[304]    0.0    0.00    0.00      89         std::__cxx11::list<middle, std::allocator<middle> >::_M_erase(std::_List_iterator<middle>) [304]
                0.00    0.00      89/89          std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_dec_size(unsigned long) [302]
                0.00    0.00      89/180         std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_get_Node_allocator() [271]
                0.00    0.00      89/16763       std::_List_node<middle>::_M_valptr() [139]
                0.00    0.00      89/90          void std::allocator_traits<std::allocator<std::_List_node<middle> > >::destroy<middle>(std::allocator<std::_List_node<middle> >&, middle*) [289]
                0.00    0.00      89/90          std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_put_node(std::_List_node<middle>*) [294]
-----------------------------------------------
                0.00    0.00       1/72          main [1]
                0.00    0.00      71/72          sendmoves() [309]
[305]    0.0    0.00    0.00      72         clearMoves() [305]
-----------------------------------------------
                0.00    0.00      72/72          sendmoves() [309]
[306]    0.0    0.00    0.00      72         translateMove() [306]
-----------------------------------------------
                0.00    0.00      72/72          solveTopCross(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [328]
[307]    0.0    0.00    0.00      72         findNextTopEdge(int&, int&) [307]
-----------------------------------------------
                0.00    0.00      72/72          solveTopCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [330]
[308]    0.0    0.00    0.00      72         findNextTopCorner(int&, int&) [308]
-----------------------------------------------
                0.00    0.00      72/72          main [1]
[309]    0.0    0.00    0.00      72         sendmoves() [309]
                0.00    0.00      72/72          translateMove() [306]
                0.00    0.00      72/4932        void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [179]
                0.00    0.00      72/246         doTheClient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [256]
                0.00    0.00      71/72          clearMoves() [305]
                0.00    0.00       1/90          printCubeColor(int (*) [3][3]) [279]
-----------------------------------------------
                0.00    0.00       9/60          solveMiddleLayer(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [332]
                0.00    0.00      51/60          placeMiddleEdge(int, int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [314]
[310]    0.0    0.00    0.00      60         middleAlgorithm(int, int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [310]
                0.00    0.00     120/881         d(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [238]
                0.00    0.00     120/562         di(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [243]
                0.00    0.00      42/197         ri(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [268]
                0.00    0.00      42/267         r(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [255]
                0.00    0.00      31/194         b(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [269]
                0.00    0.00      31/182         bi(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [270]
                0.00    0.00      29/114         fi(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [278]
                0.00    0.00      29/300         f(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [253]
                0.00    0.00      18/117         li(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [277]
                0.00    0.00      18/283         l(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [254]
-----------------------------------------------
                0.00    0.00      58/58          correctBottomCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [335]
[311]    0.0    0.00    0.00      58         cornerOrientation() [311]
-----------------------------------------------
                0.00    0.00      11/58          findMiddle(int*) [347]
                0.00    0.00      19/58          findCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int*, int) [17]
                0.00    0.00      28/58          findEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int*, int) [14]
[312]    0.0    0.00    0.00      58         askTwo(int*, int*, int*, int*) [312]
                0.00    0.00    2784/2784        QuestionCube::accessData(int, int, int, int) [204]
                0.00    0.00     174/174         changeColor(int) [272]
                0.00    0.00     174/174         QuestionCube::makeQuestion[abi:cxx11]() [274]
                0.00    0.00     174/246         doTheClient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [256]
                0.00    0.00     174/174         answerConverter(int*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [273]
                0.00    0.00      58/58          QuestionCube::QuestionCube() [313]
-----------------------------------------------
                0.00    0.00      58/58          askTwo(int*, int*, int*, int*) [312]
[313]    0.0    0.00    0.00      58         QuestionCube::QuestionCube() [313]
-----------------------------------------------
                0.00    0.00      51/51          solveMiddleLayer(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [332]
[314]    0.0    0.00    0.00      51         placeMiddleEdge(int, int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [314]
                0.00    0.00      51/60          middleAlgorithm(int, int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [310]
                0.00    0.00      36/881         d(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [238]
                0.00    0.00      17/562         di(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [243]
-----------------------------------------------
                0.00    0.00      40/40          correctBottomCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [335]
[315]    0.0    0.00    0.00      40         findBestFace(int) [315]
-----------------------------------------------
                0.00    0.00      40/40          correctBottomCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [335]
[316]    0.0    0.00    0.00      40         twoCornerRotate(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [316]
                0.00    0.00      80/541         u(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [244]
                0.00    0.00      80/313         ui(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [252]
                0.00    0.00      48/283         l(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [254]
                0.00    0.00      48/117         li(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [277]
                0.00    0.00      42/182         bi(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [270]
                0.00    0.00      42/194         b(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [269]
                0.00    0.00      40/881         d(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [238]
                0.00    0.00      40/562         di(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [243]
                0.00    0.00      38/300         f(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [253]
                0.00    0.00      38/114         fi(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [278]
                0.00    0.00      32/267         r(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [255]
                0.00    0.00      32/197         ri(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [268]
-----------------------------------------------
                0.00    0.00      36/36          main [1]
[317]    0.0    0.00    0.00      36         print(int (*) [3][3]) [317]
-----------------------------------------------
                0.00    0.00      28/28          positionBottomCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [336]
[318]    0.0    0.00    0.00      28         swapCorners(int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [318]
                0.00    0.00      84/562         di(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [243]
                0.00    0.00      56/881         d(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [238]
                0.00    0.00      23/114         fi(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [278]
                0.00    0.00      23/194         b(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [269]
                0.00    0.00      23/300         f(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [253]
                0.00    0.00      23/182         bi(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [270]
                0.00    0.00       5/197         ri(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [268]
                0.00    0.00       5/283         l(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [254]
                0.00    0.00       5/267         r(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [255]
                0.00    0.00       5/117         li(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [277]
-----------------------------------------------
                0.00    0.00      28/28          sortOutImpossibleEdges(int*, std::__cxx11::list<edge, std::allocator<edge> >&, int*, int*) [38]
[319]    0.0    0.00    0.00      28         std::_List_iterator<edge>::_List_iterator() [319]
-----------------------------------------------
                0.00    0.00      26/26          positionBottomEdges(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [334]
[320]    0.0    0.00    0.00      26         rotateEdges(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [320]
                0.00    0.00      65/267         r(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [255]
                0.00    0.00      63/300         f(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [253]
                0.00    0.00      47/283         l(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [254]
                0.00    0.00      36/881         d(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [238]
                0.00    0.00      33/194         b(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [269]
                0.00    0.00      16/562         di(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [243]
                0.00    0.00      15/114         fi(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [278]
                0.00    0.00      15/182         bi(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [270]
                0.00    0.00      11/117         li(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [277]
                0.00    0.00      11/197         ri(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [268]
-----------------------------------------------
                0.00    0.00      26/26          positionBottomEdges(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [334]
[321]    0.0    0.00    0.00      26         numEdgesInCorrectPos() [321]
-----------------------------------------------
                0.00    0.00      22/22          correctBottomEdges(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [333]
[322]    0.0    0.00    0.00      22         twoEdgeRotate(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [322]
                0.00    0.00     136/881         d(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [238]
                0.00    0.00     105/541         u(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [244]
                0.00    0.00      52/562         di(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [243]
                0.00    0.00      37/300         f(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [253]
                0.00    0.00      32/194         b(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [269]
                0.00    0.00      31/283         l(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [254]
                0.00    0.00      26/267         r(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [255]
                0.00    0.00      21/313         ui(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [252]
                0.00    0.00      12/182         bi(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [270]
                0.00    0.00      11/117         li(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [277]
                0.00    0.00      10/197         ri(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [268]
                0.00    0.00       9/114         fi(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [278]
-----------------------------------------------
                0.00    0.00      22/22          std::__cxx11::list<middle, std::allocator<middle> >::size() const [324]
[323]    0.0    0.00    0.00      22         std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_node_count() const [323]
                0.00    0.00      22/57740       std::_List_node<unsigned long>::_M_valptr() const [77]
-----------------------------------------------
                0.00    0.00      22/22          findMiddle(int*) [347]
[324]    0.0    0.00    0.00      22         std::__cxx11::list<middle, std::allocator<middle> >::size() const [324]
                0.00    0.00      22/22          std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_node_count() const [323]
-----------------------------------------------
                0.00    0.00      19/19          sortOutImpossibleCorners(int*, std::__cxx11::list<corner, std::allocator<corner> >&, int*, int*) [39]
[325]    0.0    0.00    0.00      19         std::_List_iterator<corner>::_List_iterator() [325]
-----------------------------------------------
                0.00    0.00      18/18          main [1]
[326]    0.0    0.00    0.00      18         mapforsolver(int (*) [3][3]) [326]
-----------------------------------------------
                0.00    0.00      18/18          solveTopCross(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [328]
[327]    0.0    0.00    0.00      18         moveTopEdges(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [327]
                0.00    0.00     106/300         f(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [253]
                0.00    0.00      72/541         u(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [244]
                0.00    0.00      35/881         d(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [238]
-----------------------------------------------
                0.00    0.00      18/18          main [1]
[328]    0.0    0.00    0.00      18         solveTopCross(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [328]
                0.00    0.00     156/881         d(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [238]
                0.00    0.00     134/283         l(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [254]
                0.00    0.00     104/541         u(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [244]
                0.00    0.00     104/313         ui(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [252]
                0.00    0.00      72/72          findNextTopEdge(int&, int&) [307]
                0.00    0.00      26/182         bi(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [270]
                0.00    0.00      24/117         li(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [277]
                0.00    0.00      18/18          moveTopEdges(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [327]
                0.00    0.00       4/300         f(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [253]
                0.00    0.00       2/562         di(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [243]
                0.00    0.00       1/267         r(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [255]
                0.00    0.00       1/197         ri(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [268]
-----------------------------------------------
                0.00    0.00      18/18          solveTopCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [330]
[329]    0.0    0.00    0.00      18         moveTopCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [329]
                0.00    0.00      75/881         d(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [238]
                0.00    0.00      72/541         u(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [244]
                0.00    0.00      46/197         ri(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [268]
                0.00    0.00      46/267         r(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [255]
-----------------------------------------------
                0.00    0.00      18/18          main [1]
[330]    0.0    0.00    0.00      18         solveTopCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [330]
                0.00    0.00     231/562         di(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [243]
                0.00    0.00     108/541         u(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [244]
                0.00    0.00     108/313         ui(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [252]
                0.00    0.00      72/72          findNextTopCorner(int&, int&) [308]
                0.00    0.00      61/881         d(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [238]
                0.00    0.00      50/267         r(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [255]
                0.00    0.00      50/197         ri(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [268]
                0.00    0.00      33/182         bi(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [270]
                0.00    0.00      33/194         b(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [269]
                0.00    0.00      18/18          moveTopCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [329]
-----------------------------------------------
                0.00    0.00      18/18          main [1]
[331]    0.0    0.00    0.00      18         solveBottomLayer(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [331]
                0.00    0.00      18/18          positionBottomCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [336]
                0.00    0.00      18/18          positionBottomEdges(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [334]
                0.00    0.00      18/18          correctBottomCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [335]
                0.00    0.00      18/18          correctBottomEdges(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [333]
-----------------------------------------------
                0.00    0.00      18/18          main [1]
[332]    0.0    0.00    0.00      18         solveMiddleLayer(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [332]
                0.00    0.00     237/237         findBottomMatch(int) [257]
                0.00    0.00      51/51          placeMiddleEdge(int, int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [314]
                0.00    0.00       9/60          middleAlgorithm(int, int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [310]
-----------------------------------------------
                0.00    0.00      18/18          solveBottomLayer(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [331]
[333]    0.0    0.00    0.00      18         correctBottomEdges(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [333]
                0.00    0.00      22/22          twoEdgeRotate(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [322]
-----------------------------------------------
                                   8             positionBottomEdges(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [334]
                0.00    0.00      18/18          solveBottomLayer(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [331]
[334]    0.0    0.00    0.00      18+8       positionBottomEdges(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [334]
                0.00    0.00      26/26          numEdgesInCorrectPos() [321]
                0.00    0.00      26/26          rotateEdges(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [320]
                                   8             positionBottomEdges(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [334]
-----------------------------------------------
                0.00    0.00      18/18          solveBottomLayer(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [331]
[335]    0.0    0.00    0.00      18         correctBottomCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [335]
                0.00    0.00      58/58          cornerOrientation() [311]
                0.00    0.00      40/40          findBestFace(int) [315]
                0.00    0.00      40/40          twoCornerRotate(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [316]
-----------------------------------------------
                                  24             positionBottomCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [336]
                0.00    0.00      18/18          solveBottomLayer(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [331]
[336]    0.0    0.00    0.00      18+24      positionBottomCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [336]
                0.00    0.00     130/881         d(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [238]
                0.00    0.00     121/121         numCorrectCorners() [276]
                0.00    0.00      28/28          swapCorners(int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [318]
                                  24             positionBottomCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [336]
-----------------------------------------------
                0.00    0.00      18/18          main [1]
[337]    0.0    0.00    0.00      18         failsafe(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [337]
                0.00    0.00     216/10698       std::__cxx11::list<edge, std::allocator<edge> >::size() const [165]
                0.00    0.00     144/6045        std::__cxx11::list<corner, std::allocator<corner> >::size() const [171]
-----------------------------------------------
                0.00    0.00      18/18          main [1]
[338]    0.0    0.00    0.00      18         checkface(int) [338]
-----------------------------------------------
                0.00    0.00      11/11          findMiddle(int*) [347]
[339]    0.0    0.00    0.00      11         getNextQuestion(std::__cxx11::list<middle, std::allocator<middle> >&, int*) [339]
                0.00    0.00   14396/16583       std::_List_iterator<middle>::operator->() const [140]
                0.00    0.00    3990/5796        std::__cxx11::list<middle, std::allocator<middle> >::end() [172]
                0.00    0.00    3990/5617        std::_List_iterator<middle>::operator!=(std::_List_iterator<middle> const&) const [173]
                0.00    0.00    3660/5024        std::_List_iterator<middle>::operator++(int) [174]
                0.00    0.00     341/533         std::__cxx11::list<middle, std::allocator<middle> >::begin() [245]
                0.00    0.00     166/166         containsMiddle(std::__cxx11::list<middle, std::allocator<middle> >&, int, int) [275]
-----------------------------------------------
                0.00    0.00      11/11          findMiddle(int*) [347]
[340]    0.0    0.00    0.00      11         sortOutImpossibleCodes(int*, std::__cxx11::list<middle, std::allocator<middle> >&, int*) [340]
                0.00    0.00     244/16583       std::_List_iterator<middle>::operator->() const [140]
                0.00    0.00     244/990         sortAnswer(int*) [236]
                0.00    0.00     192/5796        std::__cxx11::list<middle, std::allocator<middle> >::end() [172]
                0.00    0.00     124/5617        std::_List_iterator<middle>::operator!=(std::_List_iterator<middle> const&) const [173]
                0.00    0.00      68/89          std::_List_const_iterator<middle>::_List_const_iterator(std::_List_iterator<middle> const&) [301]
                0.00    0.00      68/89          std::__cxx11::list<middle, std::allocator<middle> >::erase(std::_List_const_iterator<middle>) [303]
                0.00    0.00      68/89          std::_List_iterator<middle>::operator==(std::_List_iterator<middle> const&) const [299]
                0.00    0.00      54/5024        std::_List_iterator<middle>::operator++(int) [174]
                0.00    0.00      11/11          std::_List_iterator<middle>::_List_iterator() [341]
                0.00    0.00      11/533         std::__cxx11::list<middle, std::allocator<middle> >::begin() [245]
-----------------------------------------------
                0.00    0.00      11/11          sortOutImpossibleCodes(int*, std::__cxx11::list<middle, std::allocator<middle> >&, int*) [340]
[341]    0.0    0.00    0.00      11         std::_List_iterator<middle>::_List_iterator() [341]
-----------------------------------------------
                0.00    0.00      10/10          findEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int*, int) [14]
[342]    0.0    0.00    0.00      10         getEdgeInfo(int (*) [3], int) [342]
-----------------------------------------------
                0.00    0.00       7/7           findCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int*, int) [17]
[343]    0.0    0.00    0.00       7         getCornerInfo(int (*) [3], int) [343]
-----------------------------------------------
                0.00    0.00       3/3           findMiddle(int*) [347]
[344]    0.0    0.00    0.00       3         buildCombOfTwo(std::__cxx11::list<middle, std::allocator<middle> >&) [344]
                0.00    0.00      90/90          std::__cxx11::list<middle, std::allocator<middle> >::push_back(middle const&) [297]
-----------------------------------------------
                0.00    0.00       3/3           findMiddle(int*) [347]
[345]    0.0    0.00    0.00       3         eliminateFound(std::__cxx11::list<middle, std::allocator<middle> >&, int*) [345]
                0.00    0.00     473/16583       std::_List_iterator<middle>::operator->() const [140]
                0.00    0.00     269/5796        std::__cxx11::list<middle, std::allocator<middle> >::end() [172]
                0.00    0.00     248/5617        std::_List_iterator<middle>::operator!=(std::_List_iterator<middle> const&) const [173]
                0.00    0.00     221/5024        std::_List_iterator<middle>::operator++(int) [174]
                0.00    0.00      21/89          std::_List_const_iterator<middle>::_List_const_iterator(std::_List_iterator<middle> const&) [301]
                0.00    0.00      21/89          std::__cxx11::list<middle, std::allocator<middle> >::erase(std::_List_const_iterator<middle>) [303]
                0.00    0.00      21/89          std::_List_iterator<middle>::operator==(std::_List_iterator<middle> const&) const [299]
                0.00    0.00       9/533         std::__cxx11::list<middle, std::allocator<middle> >::begin() [245]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [448]
[346]    0.0    0.00    0.00       1         _GLOBAL__sub_I__Z12DieWithErrorNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE [346]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [348]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[347]    0.0    0.00    0.00       1         findMiddle(int*) [347]
                0.00    0.00      22/22          std::__cxx11::list<middle, std::allocator<middle> >::size() const [324]
                0.00    0.00      11/11          getNextQuestion(std::__cxx11::list<middle, std::allocator<middle> >&, int*) [339]
                0.00    0.00      11/58          askTwo(int*, int*, int*, int*) [312]
                0.00    0.00      11/11          sortOutImpossibleCodes(int*, std::__cxx11::list<middle, std::allocator<middle> >&, int*) [340]
                0.00    0.00       6/533         std::__cxx11::list<middle, std::allocator<middle> >::begin() [245]
                0.00    0.00       6/16583       std::_List_iterator<middle>::operator->() const [140]
                0.00    0.00       3/3           buildCombOfTwo(std::__cxx11::list<middle, std::allocator<middle> >&) [344]
                0.00    0.00       3/3           eliminateFound(std::__cxx11::list<middle, std::allocator<middle> >&, int*) [345]
                0.00    0.00       1/1           std::__cxx11::list<middle, std::allocator<middle> >::list() [361]
                0.00    0.00       1/1           std::__cxx11::list<middle, std::allocator<middle> >::~list() [362]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z12DieWithErrorNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE [346]
[348]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [348]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[349]    0.0    0.00    0.00       1         cubesback() [349]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<std::_List_node<middle> >::allocator() [352]
[350]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::_List_node<middle> >::new_allocator() [350]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<std::_List_node<middle> >::~allocator() [353]
[351]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::_List_node<middle> >::~new_allocator() [351]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::_List_base<middle, std::allocator<middle> >::_List_impl::_List_impl() [354]
[352]    0.0    0.00    0.00       1         std::allocator<std::_List_node<middle> >::allocator() [352]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::_List_node<middle> >::new_allocator() [350]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::_List_base<middle, std::allocator<middle> >::_List_impl::~_List_impl() [355]
[353]    0.0    0.00    0.00       1         std::allocator<std::_List_node<middle> >::~allocator() [353]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::_List_node<middle> >::~new_allocator() [351]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::_List_base<middle, std::allocator<middle> >::_List_base() [359]
[354]    0.0    0.00    0.00       1         std::__cxx11::_List_base<middle, std::allocator<middle> >::_List_impl::_List_impl() [354]
                0.00    0.00       1/1           std::allocator<std::_List_node<middle> >::allocator() [352]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::_List_base<middle, std::allocator<middle> >::~_List_base() [360]
[355]    0.0    0.00    0.00       1         std::__cxx11::_List_base<middle, std::allocator<middle> >::_List_impl::~_List_impl() [355]
                0.00    0.00       1/1           std::allocator<std::_List_node<middle> >::~allocator() [353]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_init() [357]
[356]    0.0    0.00    0.00       1         std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_set_size(unsigned long) [356]
                0.00    0.00       1/141096      std::_List_node<unsigned long>::_M_valptr() [64]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::_List_base<middle, std::allocator<middle> >::_List_base() [359]
[357]    0.0    0.00    0.00       1         std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_init() [357]
                0.00    0.00       1/1           std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_set_size(unsigned long) [356]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::_List_base<middle, std::allocator<middle> >::~_List_base() [360]
[358]    0.0    0.00    0.00       1         std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_clear() [358]
                0.00    0.00       1/16763       std::_List_node<middle>::_M_valptr() [139]
                0.00    0.00       1/180         std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_get_Node_allocator() [271]
                0.00    0.00       1/90          void std::allocator_traits<std::allocator<std::_List_node<middle> > >::destroy<middle>(std::allocator<std::_List_node<middle> >&, middle*) [289]
                0.00    0.00       1/90          std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_put_node(std::_List_node<middle>*) [294]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::list<middle, std::allocator<middle> >::list() [361]
[359]    0.0    0.00    0.00       1         std::__cxx11::_List_base<middle, std::allocator<middle> >::_List_base() [359]
                0.00    0.00       1/1           std::__cxx11::_List_base<middle, std::allocator<middle> >::_List_impl::_List_impl() [354]
                0.00    0.00       1/1           std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_init() [357]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::list<middle, std::allocator<middle> >::~list() [362]
[360]    0.0    0.00    0.00       1         std::__cxx11::_List_base<middle, std::allocator<middle> >::~_List_base() [360]
                0.00    0.00       1/1           std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_clear() [358]
                0.00    0.00       1/1           std::__cxx11::_List_base<middle, std::allocator<middle> >::_List_impl::~_List_impl() [355]
-----------------------------------------------
                0.00    0.00       1/1           findMiddle(int*) [347]
[361]    0.0    0.00    0.00       1         std::__cxx11::list<middle, std::allocator<middle> >::list() [361]
                0.00    0.00       1/1           std::__cxx11::_List_base<middle, std::allocator<middle> >::_List_base() [359]
-----------------------------------------------
                0.00    0.00       1/1           findMiddle(int*) [347]
[362]    0.0    0.00    0.00       1         std::__cxx11::list<middle, std::allocator<middle> >::~list() [362]
                0.00    0.00       1/1           std::__cxx11::_List_base<middle, std::allocator<middle> >::~_List_base() [360]
-----------------------------------------------
                                                 <spontaneous>
[363]    0.0    0.00    0.00                 DieWithError(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [363]
-----------------------------------------------
                                                 <spontaneous>
[364]    0.0    0.00    0.00                 changeAnswer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int*) [364]
-----------------------------------------------
                                                 <spontaneous>
[365]    0.0    0.00    0.00                 clearEdgeList(std::__cxx11::list<edge, std::allocator<edge> >*) [365]
-----------------------------------------------
                                                 <spontaneous>
[366]    0.0    0.00    0.00                 numberToGerman(int) [366]
-----------------------------------------------
                                                 <spontaneous>
[367]    0.0    0.00    0.00                 permutationparitytestEdges(int (*) [3][3]) [367]
-----------------------------------------------
                                                 <spontaneous>
[368]    0.0    0.00    0.00                 solve(bool*) [368]
-----------------------------------------------
                                                 <spontaneous>
[369]    0.0    0.00    0.00                 ClientCube::clearMoves() [369]
-----------------------------------------------
                                                 <spontaneous>
[370]    0.0    0.00    0.00                 ClientCube::removeLast() [370]
-----------------------------------------------
                                                 <spontaneous>
[371]    0.0    0.00    0.00                 ClientCube::shift8by2n(int&, int&, int&, int&, int&, int&, int&, int&, int&) [371]
-----------------------------------------------
                                                 <spontaneous>
[372]    0.0    0.00    0.00                 ClientCube::cubeToArray(int (*) [3][3]) [372]
-----------------------------------------------
                                                 <spontaneous>
[373]    0.0    0.00    0.00                 ClientCube::rotateEdges(int, bool) [373]
-----------------------------------------------
                                                 <spontaneous>
[374]    0.0    0.00    0.00                 ClientCube::shift12by3n(int&, int&, int&, int&, int&, int&, int&, int&, int&, int&, int&, int&, int&) [374]
-----------------------------------------------
                                                 <spontaneous>
[375]    0.0    0.00    0.00                 ClientCube::swapCorners(int) [375]
-----------------------------------------------
                                                 <spontaneous>
[376]    0.0    0.00    0.00                 ClientCube::cubeToString[abi:cxx11]() [376]
-----------------------------------------------
                                                 <spontaneous>
[377]    0.0    0.00    0.00                 ClientCube::findBestFace(int) [377]
-----------------------------------------------
                                                 <spontaneous>
[378]    0.0    0.00    0.00                 ClientCube::mapForSolver() [378]
-----------------------------------------------
                                                 <spontaneous>
[379]    0.0    0.00    0.00                 ClientCube::moveTopEdges() [379]
-----------------------------------------------
                                                 <spontaneous>
[380]    0.0    0.00    0.00                 ClientCube::stringToCube(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) [380]
-----------------------------------------------
                                                 <spontaneous>
[381]    0.0    0.00    0.00                 ClientCube::solveTopCross() [381]
-----------------------------------------------
                                                 <spontaneous>
[382]    0.0    0.00    0.00                 ClientCube::twoEdgeRotate(int, bool) [382]
-----------------------------------------------
                                                 <spontaneous>
[383]    0.0    0.00    0.00                 ClientCube::moveTopCorners() [383]
-----------------------------------------------
                                                 <spontaneous>
[384]    0.0    0.00    0.00                 ClientCube::findBottomMatch(int) [384]
-----------------------------------------------
                                                 <spontaneous>
[385]    0.0    0.00    0.00                 ClientCube::findNextTopEdge(int&, int&) [385]
-----------------------------------------------
                                                 <spontaneous>
[386]    0.0    0.00    0.00                 ClientCube::middleAlgorithm(int, int) [386]
-----------------------------------------------
                                                 <spontaneous>
[387]    0.0    0.00    0.00                 ClientCube::placeMiddleEdge(int, int) [387]
-----------------------------------------------
                                                 <spontaneous>
[388]    0.0    0.00    0.00                 ClientCube::solveTopCorners() [388]
-----------------------------------------------
                                                 <spontaneous>
[389]    0.0    0.00    0.00                 ClientCube::twoCornerRotate(int, bool) [389]
-----------------------------------------------
                                                 <spontaneous>
[390]    0.0    0.00    0.00                 ClientCube::solveBottomLayer() [390]
-----------------------------------------------
                                                 <spontaneous>
[391]    0.0    0.00    0.00                 ClientCube::solveMiddleLayer() [391]
-----------------------------------------------
                                                 <spontaneous>
[392]    0.0    0.00    0.00                 ClientCube::cornerOrientation() [392]
-----------------------------------------------
                                                 <spontaneous>
[393]    0.0    0.00    0.00                 ClientCube::findNextTopCorner(int&, int&) [393]
-----------------------------------------------
                                                 <spontaneous>
[394]    0.0    0.00    0.00                 ClientCube::mapForCustomColor() [394]
-----------------------------------------------
                                                 <spontaneous>
[395]    0.0    0.00    0.00                 ClientCube::numCorrectCorners() [395]
-----------------------------------------------
                                                 <spontaneous>
[396]    0.0    0.00    0.00                 ClientCube::correctBottomEdges() [396]
-----------------------------------------------
                                                 <spontaneous>
[397]    0.0    0.00    0.00                 ClientCube::positionBottomEdges() [397]
-----------------------------------------------
                                                 <spontaneous>
[398]    0.0    0.00    0.00                 ClientCube::correctBottomCorners() [398]
-----------------------------------------------
                                                 <spontaneous>
[399]    0.0    0.00    0.00                 ClientCube::numEdgesInCorrectPos() [399]
-----------------------------------------------
                                                 <spontaneous>
[400]    0.0    0.00    0.00                 ClientCube::positionBottomCorners() [400]
-----------------------------------------------
                                                 <spontaneous>
[401]    0.0    0.00    0.00                 ClientCube::last[abi:cxx11]() [401]
-----------------------------------------------
                                                 <spontaneous>
[402]    0.0    0.00    0.00                 ClientCube::print() [402]
-----------------------------------------------
                                                 <spontaneous>
[403]    0.0    0.00    0.00                 ClientCube::rotate(int, int) [403]
-----------------------------------------------
                                                 <spontaneous>
[404]    0.0    0.00    0.00                 ClientCube::getEdge(int&, int&, int&, int&) [404]
-----------------------------------------------
                                                 <spontaneous>
[405]    0.0    0.00    0.00                 ClientCube::getCorner(int&, int&, int&, int&, int&) [405]
-----------------------------------------------
                                                 <spontaneous>
[406]    0.0    0.00    0.00                 ClientCube::getCorner(int, int*) [406]
-----------------------------------------------
                                                 <spontaneous>
[407]    0.0    0.00    0.00                 ClientCube::inputCube() [407]
-----------------------------------------------
                                                 <spontaneous>
[408]    0.0    0.00    0.00                 ClientCube::randomize() [408]
-----------------------------------------------
                                                 <spontaneous>
[409]    0.0    0.00    0.00                 ClientCube::testSolve() [409]
-----------------------------------------------
                                                 <spontaneous>
[410]    0.0    0.00    0.00                 ClientCube::ClientCube(int) [410]
-----------------------------------------------
                                                 <spontaneous>
[411]    0.0    0.00    0.00                 QuestionCube::shift8by2n(int&, int&, int&, int&, int&, int&, int&, int&, int&) [411]
-----------------------------------------------
                                                 <spontaneous>
[412]    0.0    0.00    0.00                 QuestionCube::cubeToArray(int (*) [3][3]) [412]
-----------------------------------------------
                                                 <spontaneous>
[413]    0.0    0.00    0.00                 QuestionCube::shift12by3n(int&, int&, int&, int&, int&, int&, int&, int&, int&, int&, int&, int&, int&) [413]
-----------------------------------------------
                                                 <spontaneous>
[414]    0.0    0.00    0.00                 QuestionCube::cubeToString[abi:cxx11]() [414]
-----------------------------------------------
                                                 <spontaneous>
[415]    0.0    0.00    0.00                 QuestionCube::stringToCube(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) [415]
-----------------------------------------------
                                                 <spontaneous>
[416]    0.0    0.00    0.00                 QuestionCube::print() [416]
-----------------------------------------------
                                                 <spontaneous>
[417]    0.0    0.00    0.00                 QuestionCube::rotate(int, int) [417]
-----------------------------------------------
                                                 <spontaneous>
[418]    0.0    0.00    0.00                 QuestionCube::getColor(int, int, int) [418]
-----------------------------------------------
                                                 <spontaneous>
[419]    0.0    0.00    0.00                 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned long, char const*, __va_list_tag*), unsigned long, char const*, ...) [419]
-----------------------------------------------
                                                 <spontaneous>
[420]    0.0    0.00    0.00                 __gnu_cxx::__ops::_Iter_less_val::_Iter_less_val(__gnu_cxx::__ops::_Iter_less_iter) [420]
-----------------------------------------------
                                                 <spontaneous>
[421]    0.0    0.00    0.00                 bool __gnu_cxx::__ops::_Iter_less_val::operator()<int*, int>(int*, int&) const [421]
-----------------------------------------------
                                                 <spontaneous>
[422]    0.0    0.00    0.00                 std::_List_iterator<edge>::operator--() [422]
-----------------------------------------------
                                                 <spontaneous>
[423]    0.0    0.00    0.00                 std::_List_iterator<corner>::operator--() [423]
-----------------------------------------------
                                                 <spontaneous>
[424]    0.0    0.00    0.00                 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::~_Alloc_hider() [424]
-----------------------------------------------
                                                 <spontaneous>
[425]    0.0    0.00    0.00                 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*) [425]
-----------------------------------------------
                                                 <spontaneous>
[426]    0.0    0.00    0.00                 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type) [426]
-----------------------------------------------
                                                 <spontaneous>
[427]    0.0    0.00    0.00                 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<char*, void>(char*, char*, std::allocator<char> const&) [427]
-----------------------------------------------
                                                 <spontaneous>
[428]    0.0    0.00    0.00                 std::__cxx11::to_string(int) [428]
-----------------------------------------------
                                                 <spontaneous>
[429]    0.0    0.00    0.00                 void std::__pop_heap<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, int*, __gnu_cxx::__ops::_Iter_less_iter&) [429]
-----------------------------------------------
                                                 <spontaneous>
[430]    0.0    0.00    0.00                 void std::__make_heap<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter&) [430]
-----------------------------------------------
                                                 <spontaneous>
[431]    0.0    0.00    0.00                 void std::__push_heap<int*, long, int, __gnu_cxx::__ops::_Iter_less_val>(int*, long, long, int, __gnu_cxx::__ops::_Iter_less_val&) [431]
-----------------------------------------------
                                                 <spontaneous>
[432]    0.0    0.00    0.00                 void std::__sort_heap<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter&) [432]
-----------------------------------------------
                                                 <spontaneous>
[433]    0.0    0.00    0.00                 void std::__adjust_heap<int*, long, int, __gnu_cxx::__ops::_Iter_less_iter>(int*, long, long, int, __gnu_cxx::__ops::_Iter_less_iter) [433]
-----------------------------------------------
                                                 <spontaneous>
[434]    0.0    0.00    0.00                 void std::__heap_select<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, int*, __gnu_cxx::__ops::_Iter_less_iter) [434]
-----------------------------------------------
                                                 <spontaneous>
[435]    0.0    0.00    0.00                 void std::__partial_sort<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, int*, __gnu_cxx::__ops::_Iter_less_iter) [435]
-----------------------------------------------
                                                 <spontaneous>
[436]    0.0    0.00    0.00                 int* std::__unguarded_partition<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, int*, __gnu_cxx::__ops::_Iter_less_iter) [436]
-----------------------------------------------
                                                 <spontaneous>
[437]    0.0    0.00    0.00                 void std::__move_median_to_first<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, int*, int*, __gnu_cxx::__ops::_Iter_less_iter) [437]
-----------------------------------------------
                                                 <spontaneous>
[438]    0.0    0.00    0.00                 void std::__unguarded_insertion_sort<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter) [438]
-----------------------------------------------
                                                 <spontaneous>
[439]    0.0    0.00    0.00                 int* std::__unguarded_partition_pivot<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter) [439]
-----------------------------------------------
                                                 <spontaneous>
[440]    0.0    0.00    0.00                 std::remove_reference<__gnu_cxx::__ops::_Iter_less_iter&>::type&& std::move<__gnu_cxx::__ops::_Iter_less_iter&>(__gnu_cxx::__ops::_Iter_less_iter&) [440]
-----------------------------------------------
                                                 <spontaneous>
[441]    0.0    0.00    0.00                 std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<int> >, std::is_move_constructible<int>, std::is_move_assignable<int> >::value, void>::type std::swap<int>(int&, int&) [441]
-----------------------------------------------
                                                 <spontaneous>
[442]    0.0    0.00    0.00                 void std::iter_swap<int*, int*>(int*, int*) [442]
-----------------------------------------------
                                                 <spontaneous>
[443]    0.0    0.00    0.00                 __do_global_dtors_aux [443]
-----------------------------------------------
                                                 <spontaneous>
[444]    0.0    0.00    0.00                 __do_global_dtors_aux_fini_array_entry [444]
-----------------------------------------------
                                                 <spontaneous>
[445]    0.0    0.00    0.00                 __frame_dummy_init_array_entry [445]
-----------------------------------------------
                                                 <spontaneous>
[446]    0.0    0.00    0.00                 __gmon_start__ [446]
-----------------------------------------------
                                                 <spontaneous>
[447]    0.0    0.00    0.00                 __libc_csu_fini [447]
-----------------------------------------------
                                                 <spontaneous>
[448]    0.0    0.00    0.00                 __libc_csu_init [448]
                0.00    0.00       1/1           _GLOBAL__sub_I__Z12DieWithErrorNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE [346]
-----------------------------------------------
                                                 <spontaneous>
[449]    0.0    0.00    0.00                 _dl_relocate_static_pie [449]
-----------------------------------------------
                                                 <spontaneous>
[450]    0.0    0.00    0.00                 _fini [450]
-----------------------------------------------
                                                 <spontaneous>
[451]    0.0    0.00    0.00                 _init [451]
-----------------------------------------------
                                                 <spontaneous>
[452]    0.0    0.00    0.00                 _start [452]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2018 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

 [346] _GLOBAL__sub_I__Z12DieWithErrorNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE [409] ClientCube::testSolve() [195] std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_init()
 [305] clearMoves()          [410] ClientCube::ClientCube(int) [28] std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_clear()
 [258] fillCenter(int*, int*) [204] QuestionCube::accessData(int, int, int, int) [199] std::__cxx11::_List_base<edge, std::allocator<edge> >::_List_base()
 [347] findMiddle(int*)      [411] QuestionCube::shift8by2n(int&, int&, int&, int&, int&, int&, int&, int&, int&) [29] std::__cxx11::_List_base<edge, std::allocator<edge> >::~_List_base()
 [249] getCorners(int (*) [3], int (*) [3][3]) [412] QuestionCube::cubeToArray(int (*) [3][3]) [214] std::__cxx11::_List_base<corner, std::allocator<corner> >::_List_impl::_List_impl()
  [12] planAction(int, std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*, int*) [413] QuestionCube::shift12by3n(int&, int&, int&, int&, int&, int&, int&, int&, int&, int&, int&, int&, int&) [219] std::__cxx11::_List_base<corner, std::allocator<corner> >::_List_impl::~_List_impl()
 [183] printColor[abi:cxx11](int) [414] QuestionCube::cubeToString[abi:cxx11]() [160] std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_dec_size(unsigned long)
 [237] removeLast()          [274] QuestionCube::makeQuestion[abi:cxx11]() [90] std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_get_node()
 [259] setCorners(int (*) [3], int (*) [3][3], int (*) [3][3], int (*) [3][3]) [415] QuestionCube::stringToCube(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) [91] std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_inc_size(unsigned long)
 [236] sortAnswer(int*)      [416] QuestionCube::print()  [97] std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_put_node(std::_List_node<corner>*)
 [272] changeColor(int)      [417] QuestionCube::rotate(int, int) [210] std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_set_size(unsigned long)
 [256] doTheClient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [418] QuestionCube::getColor(int, int, int) [68] std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_get_Node_allocator()
   [3] fillCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [313] QuestionCube::QuestionCube() [211] std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_init()
  [17] findCorners(std::__cxx11::list<corner, std::allocator<corner> >*, int*, int) [419] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned long, char const*, __va_list_tag*), unsigned long, char const*, ...) [25] std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_clear()
 [342] getEdgeInfo(int (*) [3], int) [152] __gnu_cxx::new_allocator<std::_List_node<edge> >::deallocate(std::_List_node<edge>*, unsigned long) [215] std::__cxx11::_List_base<corner, std::allocator<corner> >::_List_base()
 [320] rotateEdges(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [153] void __gnu_cxx::new_allocator<std::_List_node<edge> >::destroy<edge>(edge*) [26] std::__cxx11::_List_base<corner, std::allocator<corner> >::~_List_base()
 [318] swapCorners(int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [141] __gnu_cxx::new_allocator<std::_List_node<edge> >::allocate(unsigned long, void const*) [354] std::__cxx11::_List_base<middle, std::allocator<middle> >::_List_impl::_List_impl()
 [363] DieWithError(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [142] void __gnu_cxx::new_allocator<std::_List_node<edge> >::construct<edge, edge const&>(edge*, edge const&) [355] std::__cxx11::_List_base<middle, std::allocator<middle> >::_List_impl::~_List_impl()
 [364] changeAnswer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int*) [196] __gnu_cxx::new_allocator<std::_List_node<edge> >::new_allocator() [302] std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_dec_size(unsigned long)
  [36] containsEdge(std::__cxx11::list<edge, std::allocator<edge> >&, int, int) [201] __gnu_cxx::new_allocator<std::_List_node<edge> >::~new_allocator() [292] std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_get_node()
 [315] findBestFace(int)      [93] __gnu_cxx::new_allocator<std::_List_node<corner> >::deallocate(std::_List_node<corner>*, unsigned long) [293] std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_inc_size(unsigned long)
 [326] mapforsolver(int (*) [3][3]) [94] void __gnu_cxx::new_allocator<std::_List_node<corner> >::destroy<corner>(corner*) [294] std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_put_node(std::_List_node<middle>*)
 [327] moveTopEdges(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [82] __gnu_cxx::new_allocator<std::_List_node<corner> >::allocate(unsigned long, void const*) [356] std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_set_size(unsigned long)
  [16] CopyListEdges(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<edge, std::allocator<edge> >*) [83] void __gnu_cxx::new_allocator<std::_List_node<corner> >::construct<corner, corner const&>(corner*, corner const&) [271] std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_get_Node_allocator()
 [260] SortEdgesList(std::__cxx11::list<edge, std::allocator<edge> >*, int*, int) [212] __gnu_cxx::new_allocator<std::_List_node<corner> >::new_allocator() [357] std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_init()
 [365] clearEdgeList(std::__cxx11::list<edge, std::allocator<edge> >*) [217] __gnu_cxx::new_allocator<std::_List_node<corner> >::~new_allocator() [358] std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_clear()
 [343] getCornerInfo(int (*) [3], int) [280] __gnu_cxx::new_allocator<std::_List_node<middle> >::deallocate(std::_List_node<middle>*, unsigned long) [359] std::__cxx11::_List_base<middle, std::allocator<middle> >::_List_base()
 [328] solveTopCross(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [281] void __gnu_cxx::new_allocator<std::_List_node<middle> >::destroy<middle>(middle*) [360] std::__cxx11::_List_base<middle, std::allocator<middle> >::~_List_base()
 [306] translateMove()       [282] __gnu_cxx::new_allocator<std::_List_node<middle> >::allocate(unsigned long, void const*) [106] std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl::_List_impl()
 [322] twoEdgeRotate(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [283] void __gnu_cxx::new_allocator<std::_List_node<middle> >::construct<middle, middle const&>(middle*, middle const&) [107] std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl()
 [261] PlaceToBeEdges(int (*) [2], int (*) [3][3]) [350] __gnu_cxx::new_allocator<std::_List_node<middle> >::new_allocator() [129] std::__cxx11::_List_base<int, std::allocator<int> >::_M_dec_size(unsigned long)
 [262] SortCornerList(std::__cxx11::list<corner, std::allocator<corner> >*, int*, int) [351] __gnu_cxx::new_allocator<std::_List_node<middle> >::~new_allocator() [130] std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_node()
 [344] buildCombOfTwo(std::__cxx11::list<middle, std::allocator<middle> >&) [115] __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate(std::_List_node<int>*, unsigned long) [6] std::__cxx11::_List_base<int, std::allocator<int> >::_M_inc_size(unsigned long)
  [37] containsCorner(std::__cxx11::list<corner, std::allocator<corner> >&, int, int) [116] void __gnu_cxx::new_allocator<std::_List_node<int> >::destroy<int>(int*) [131] std::__cxx11::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*)
 [275] containsMiddle(std::__cxx11::list<middle, std::allocator<middle> >&, int, int) [117] __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned long, void const*) [108] std::__cxx11::_List_base<int, std::allocator<int> >::_M_set_size(unsigned long)
 [345] eliminateFound(std::__cxx11::list<middle, std::allocator<middle> >&, int*) [118] void __gnu_cxx::new_allocator<std::_List_node<int> >::construct<int, int const&>(int*, int const&) [80] std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_Node_allocator()
   [2] fillrandomcube(int*, int*, std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*, int (*) [3][3], int (*) [3][3]) [102] __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator() [109] std::__cxx11::_List_base<int, std::allocator<int> >::_M_init()
 [329] moveTopCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [103] __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator() [110] std::__cxx11::_List_base<int, std::allocator<int> >::_M_clear()
 [366] numberToGerman(int)    [52] __gnu_cxx::__aligned_membuf<edge>::_M_ptr() [111] std::__cxx11::_List_base<int, std::allocator<int> >::_List_base()
 [279] printCubeColor(int (*) [3][3]) [53] __gnu_cxx::__aligned_membuf<edge>::_M_addr() [112] std::__cxx11::_List_base<int, std::allocator<int> >::~_List_base()
  [13] CopyListCorners(std::__cxx11::list<corner, std::allocator<corner> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [50] __gnu_cxx::__aligned_membuf<corner>::_M_ptr() [424] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::~_Alloc_hider()
 [273] answerConverter(int*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [51] __gnu_cxx::__aligned_membuf<corner>::_M_addr() [425] void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*)
  [40] buildCombOfEdge(std::__cxx11::list<edge, std::allocator<edge> >*, int*) [137] __gnu_cxx::__aligned_membuf<middle>::_M_ptr() [179] void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)
 [263] edgepartitytest(int (*) [3][3]) [138] __gnu_cxx::__aligned_membuf<middle>::_M_addr() [426] void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type)
 [257] findBottomMatch(int)   [71] __gnu_cxx::__aligned_membuf<int>::_M_ptr() [427] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<char*, void>(char*, char*, std::allocator<char> const&)
 [307] findNextTopEdge(int&, int&) [72] __gnu_cxx::__aligned_membuf<int>::_M_addr() [22] std::_List_node<edge>* std::__cxx11::list<edge, std::allocator<edge> >::_M_create_node<edge const&>(edge const&)
 [339] getNextQuestion(std::__cxx11::list<middle, std::allocator<middle> >&, int*) [62] __gnu_cxx::__aligned_membuf<unsigned long>::_M_ptr() [57] std::__cxx11::list<edge, std::allocator<edge> >::end()
 [310] middleAlgorithm(int, int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [63] __gnu_cxx::__aligned_membuf<unsigned long>::_M_addr() [98] std::__cxx11::list<edge, std::allocator<edge> >::begin()
 [314] placeMiddleEdge(int, int, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [178] bool __gnu_cxx::__is_null_pointer<char>(char*) [43] std::__cxx11::list<edge, std::allocator<edge> >::clear()
 [330] solveTopCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [420] __gnu_cxx::__ops::_Iter_less_val::_Iter_less_val(__gnu_cxx::__ops::_Iter_less_iter) [34] std::__cxx11::list<edge, std::allocator<edge> >::erase(std::_List_const_iterator<edge>)
 [316] twoCornerRotate(int, bool, int (*) [3][3], int (*) [3][3], int (*) [3][3]) [208] __gnu_cxx::__ops::__val_comp_iter(__gnu_cxx::__ops::_Iter_less_iter) [35] std::__cxx11::list<edge, std::allocator<edge> >::_M_erase(std::_List_iterator<edge>)
 [264] checksolvability(int (*) [3][3]) [220] __gnu_cxx::__ops::__iter_less_iter() [23] void std::__cxx11::list<edge, std::allocator<edge> >::_M_insert<edge const&>(std::_List_iterator<edge>, edge const&)
 [265] cornerparitytest(int (*) [3][3]) [143] __gnu_cxx::new_allocator<std::_List_node<edge> >::max_size() const [24] std::__cxx11::list<edge, std::allocator<edge> >::push_back(edge const&)
 [331] solveBottomLayer(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [84] __gnu_cxx::new_allocator<std::_List_node<corner> >::max_size() const [200] std::__cxx11::list<edge, std::allocator<edge> >::list()
 [332] solveMiddleLayer(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [284] __gnu_cxx::new_allocator<std::_List_node<middle> >::max_size() const [30] std::__cxx11::list<edge, std::allocator<edge> >::~list()
  [41] buildCombOfCorner(std::__cxx11::list<corner, std::allocator<corner> >*, int*) [119] __gnu_cxx::new_allocator<std::_List_node<int> >::max_size() const [19] std::_List_node<corner>* std::__cxx11::list<corner, std::allocator<corner> >::_M_create_node<corner const&>(corner const&)
 [311] cornerOrientation()    [75] __gnu_cxx::__aligned_membuf<unsigned long>::_M_ptr() const [56] std::__cxx11::list<corner, std::allocator<corner> >::end()
 [308] findNextTopCorner(int&, int&) [76] __gnu_cxx::__aligned_membuf<unsigned long>::_M_addr() const [99] std::__cxx11::list<corner, std::allocator<corner> >::begin()
 [276] numCorrectCorners()   [421] bool __gnu_cxx::__ops::_Iter_less_val::operator()<int*, int>(int*, int&) const [42] std::__cxx11::list<corner, std::allocator<corner> >::clear()
 [333] correctBottomEdges(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [205] bool __gnu_cxx::__ops::_Val_less_iter::operator()<int, int*>(int&, int*) const [31] std::__cxx11::list<corner, std::allocator<corner> >::erase(std::_List_const_iterator<corner>)
  [15] getNextEdgeQuestion(std::__cxx11::list<edge, std::allocator<edge> >&, int*, int*) [192] bool __gnu_cxx::__ops::_Iter_less_iter::operator()<int*, int*>(int*, int*) const [32] std::__cxx11::list<corner, std::allocator<corner> >::_M_erase(std::_List_iterator<corner>)
 [334] positionBottomEdges(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [77] std::_List_node<unsigned long>::_M_valptr() const [20] void std::__cxx11::list<corner, std::allocator<corner> >::_M_insert<corner const&>(std::_List_iterator<corner>, corner const&)
 [269] b(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [227] std::_List_iterator<edge>::operator==(std::_List_iterator<edge> const&) const [21] std::__cxx11::list<corner, std::allocator<corner> >::push_back(corner const&)
 [238] d(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [61] std::_List_iterator<edge>::operator!=(std::_List_iterator<edge> const&) const [216] std::__cxx11::list<corner, std::allocator<corner> >::list()
 [253] f(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [10] std::_List_iterator<edge>::operator->() const [27] std::__cxx11::list<corner, std::allocator<corner> >::~list()
 [254] l(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [239] std::_List_iterator<corner>::operator==(std::_List_iterator<corner> const&) const [295] std::_List_node<middle>* std::__cxx11::list<middle, std::allocator<middle> >::_M_create_node<middle const&>(middle const&)
 [255] r(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [58] std::_List_iterator<corner>::operator!=(std::_List_iterator<corner> const&) const [172] std::__cxx11::list<middle, std::allocator<middle> >::end()
 [244] u(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [11] std::_List_iterator<corner>::operator->() const [245] std::__cxx11::list<middle, std::allocator<middle> >::begin()
 [335] correctBottomCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [299] std::_List_iterator<middle>::operator==(std::_List_iterator<middle> const&) const [303] std::__cxx11::list<middle, std::allocator<middle> >::erase(std::_List_const_iterator<middle>)
 [321] numEdgesInCorrectPos() [173] std::_List_iterator<middle>::operator!=(std::_List_iterator<middle> const&) const [304] std::__cxx11::list<middle, std::allocator<middle> >::_M_erase(std::_List_iterator<middle>)
  [18] getNextCornerQuestion(std::__cxx11::list<corner, std::allocator<corner> >&, int*, int*) [140] std::_List_iterator<middle>::operator->() const [296] void std::__cxx11::list<middle, std::allocator<middle> >::_M_insert<middle const&>(std::_List_iterator<middle>, middle const&)
 [336] positionBottomCorners(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [120] std::_List_iterator<int>::operator*() const [297] std::__cxx11::list<middle, std::allocator<middle> >::push_back(middle const&)
 [340] sortOutImpossibleCodes(int*, std::__cxx11::list<middle, std::allocator<middle> >&, int*) [175] std::_List_const_iterator<edge>::_M_const_cast() const [361] std::__cxx11::list<middle, std::allocator<middle> >::list()
  [38] sortOutImpossibleEdges(int*, std::__cxx11::list<edge, std::allocator<edge> >&, int*, int*) [158] std::_List_const_iterator<corner>::_M_const_cast() const [362] std::__cxx11::list<middle, std::allocator<middle> >::~list()
  [39] sortOutImpossibleCorners(int*, std::__cxx11::list<corner, std::allocator<corner> >&, int*, int*) [300] std::_List_const_iterator<middle>::_M_const_cast() const [132] std::_List_node<int>* std::__cxx11::list<int, std::allocator<int> >::_M_create_node<int const&>(int const&)
 [367] permutationparitytestEdges(int (*) [3][3]) [164] std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_node_count() const [81] std::__cxx11::list<int, std::allocator<int> >::end()
 [266] permutationparitytestCorners(int (*) [3][3]) [170] std::__cxx11::_List_base<corner, std::allocator<corner> >::_M_node_count() const [133] std::__cxx11::list<int, std::allocator<int> >::back()
 [270] bi(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [323] std::__cxx11::_List_base<middle, std::allocator<middle> >::_M_node_count() const [134] std::__cxx11::list<int, std::allocator<int> >::_M_erase(std::_List_iterator<int>)
 [243] di(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [78] std::__cxx11::_List_base<int, std::allocator<int> >::_M_node_count() const [135] std::__cxx11::list<int, std::allocator<int> >::pop_back()
 [278] fi(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [165] std::__cxx11::list<edge, std::allocator<edge> >::size() const [7] void std::__cxx11::list<int, std::allocator<int> >::_M_insert<int const&>(std::_List_iterator<int>, int const&)
 [277] li(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [171] std::__cxx11::list<corner, std::allocator<corner> >::size() const [8] std::__cxx11::list<int, std::allocator<int> >::push_back(int const&)
 [268] ri(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [324] std::__cxx11::list<middle, std::allocator<middle> >::size() const [113] std::__cxx11::list<int, std::allocator<int> >::list()
 [252] ui(int (*) [3][3], int (*) [3][3], int (*) [3][3]) [79] std::__cxx11::list<int, std::allocator<int> >::size() const [114] std::__cxx11::list<int, std::allocator<int> >::~list()
 [348] __static_initialization_and_destruction_0(int, int) [197] std::allocator<std::_List_node<edge> >::allocator() [428] std::__cxx11::to_string(int)
 [166] last[abi:cxx11]()     [202] std::allocator<std::_List_node<edge> >::~allocator() [180] std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag)
 [317] print(int (*) [3][3]) [213] std::allocator<std::_List_node<corner> >::allocator() [429] void std::__pop_heap<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, int*, __gnu_cxx::__ops::_Iter_less_iter&)
 [368] solve(bool*)          [218] std::allocator<std::_List_node<corner> >::~allocator() [151] std::allocator<std::_List_node<edge> >* std::__addressof<std::allocator<std::_List_node<edge> > >(std::allocator<std::_List_node<edge> >&)
 [312] askTwo(int*, int*, int*, int*) [352] std::allocator<std::_List_node<middle> >::allocator() [92] std::allocator<std::_List_node<corner> >* std::__addressof<std::allocator<std::_List_node<corner> > >(std::allocator<std::_List_node<corner> >&)
 [241] bRotate(int (*) [3][3]) [353] std::allocator<std::_List_node<middle> >::~allocator() [298] std::allocator<std::_List_node<middle> >* std::__addressof<std::allocator<std::_List_node<middle> > >(std::allocator<std::_List_node<middle> >&)
 [191] dRotate(int (*) [3][3]) [104] std::allocator<std::_List_node<int> >::allocator() [136] std::allocator<std::_List_node<int> >* std::__addressof<std::allocator<std::_List_node<int> > >(std::allocator<std::_List_node<int> >&)
 [233] fRotate(int (*) [3][3]) [105] std::allocator<std::_List_node<int> >::~allocator() [430] void std::__make_heap<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter&)
 [234] lRotate(int (*) [3][3]) [5] std::_List_node<edge>::_M_valptr() [431] void std::__push_heap<int*, long, int, __gnu_cxx::__ops::_Iter_less_val>(int*, long, long, int, __gnu_cxx::__ops::_Iter_less_val&)
 [235] rRotate(int (*) [3][3]) [9] std::_List_node<corner>::_M_valptr() [432] void std::__sort_heap<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter&)
 [207] uRotate(int (*) [3][3]) [139] std::_List_node<middle>::_M_valptr() [193] int* std::__miter_base<int*>(int*)
 [242] biRotate(int (*) [3][3]) [73] std::_List_node<int>::_M_valptr() [190] int* std::__niter_base<int*>(int*)
 [157] copyCube(int (*) [3][3]) [64] std::_List_node<unsigned long>::_M_valptr() [433] void std::__adjust_heap<int*, long, int, __gnu_cxx::__ops::_Iter_less_iter>(int*, long, long, int, __gnu_cxx::__ops::_Iter_less_iter)
 [206] diRotate(int (*) [3][3]) [55] std::_List_iterator<edge>::_List_iterator(std::__detail::_List_node_base*) [434] void std::__heap_select<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, int*, __gnu_cxx::__ops::_Iter_less_iter)
 [337] failsafe(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [319] std::_List_iterator<edge>::_List_iterator() [229] int* std::move_backward<int*, int*>(int*, int*, int*)
 [248] fiRotate(int (*) [3][3]) [422] std::_List_iterator<edge>::operator--() [435] void std::__partial_sort<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, int*, __gnu_cxx::__ops::_Iter_less_iter)
 [250] getEdges(int (*) [2], int (*) [3][3]) [65] std::_List_iterator<edge>::operator++(int) [221] void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter)
 [247] liRotate(int (*) [3][3]) [101] std::_List_iterator<edge>::operator++() [222] void std::__introsort_loop<int*, long, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, long, __gnu_cxx::__ops::_Iter_less_iter)
 [240] riRotate(int (*) [3][3]) [54] std::_List_iterator<corner>::_List_iterator(std::__detail::_List_node_base*) [181] std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&)
 [267] setEdges(int (*) [2], int (*) [3][3], int (*) [3][3], int (*) [3][3]) [325] std::_List_iterator<corner>::_List_iterator() [187] std::iterator_traits<std::_List_iterator<edge> >::iterator_category std::__iterator_category<std::_List_iterator<edge> >(std::_List_iterator<edge> const&)
 [232] uiRotate(int (*) [3][3]) [423] std::_List_iterator<corner>::operator--() [161] std::iterator_traits<std::_List_iterator<corner> >::iterator_category std::__iterator_category<std::_List_iterator<corner> >(std::_List_iterator<corner> const&)
 [338] checkface(int)         [59] std::_List_iterator<corner>::operator++(int) [436] int* std::__unguarded_partition<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, int*, __gnu_cxx::__ops::_Iter_less_iter)
 [349] cubesback()            [66] std::_List_iterator<corner>::operator++() [230] int* std::__copy_move_backward_a<true, int*, int*>(int*, int*, int*)
   [4] fillEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int (*) [3][3], int*, int (*) [3][3], int (*) [3][3]) [169] std::_List_iterator<middle>::_List_iterator(std::__detail::_List_node_base*) [223] void std::__final_insertion_sort<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter)
  [14] findEdges(std::__cxx11::list<edge, std::allocator<edge> >*, int*, int) [341] std::_List_iterator<middle>::_List_iterator() [437] void std::__move_median_to_first<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, int*, int*, __gnu_cxx::__ops::_Iter_less_iter)
 [246] getCorner(int, int*)  [174] std::_List_iterator<middle>::operator++(int) [231] int* std::__copy_move_backward_a2<true, int*, int*>(int*, int*, int*)
  [33] printlist(std::__cxx11::list<edge, std::allocator<edge> >*, std::__cxx11::list<corner, std::allocator<corner> >*) [74] std::_List_iterator<int>::_List_iterator(std::__detail::_List_node_base*) [209] void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_less_iter>(int*, __gnu_cxx::__ops::_Val_less_iter)
 [309] sendmoves()           [121] std::_List_iterator<int>::operator--() [438] void std::__unguarded_insertion_sort<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter)
 [369] ClientCube::clearMoves() [144] std::__allocated_ptr<std::allocator<std::_List_node<edge> > >::__allocated_ptr(std::allocator<std::_List_node<edge> >&, std::_List_node<edge>*) [439] int* std::__unguarded_partition_pivot<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter)
 [370] ClientCube::removeLast() [145] std::__allocated_ptr<std::allocator<std::_List_node<edge> > >::~__allocated_ptr() [224] std::__lg(long)
 [371] ClientCube::shift8by2n(int&, int&, int&, int&, int&, int&, int&, int&, int&) [146] std::__allocated_ptr<std::allocator<std::_List_node<edge> > >::operator=(decltype(nullptr)) [440] std::remove_reference<__gnu_cxx::__ops::_Iter_less_iter&>::type&& std::move<__gnu_cxx::__ops::_Iter_less_iter&>(__gnu_cxx::__ops::_Iter_less_iter&)
 [372] ClientCube::cubeToArray(int (*) [3][3]) [85] std::__allocated_ptr<std::allocator<std::_List_node<corner> > >::__allocated_ptr(std::allocator<std::_List_node<corner> >&, std::_List_node<corner>*) [184] std::remove_reference<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>::type&& std::move<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
 [373] ClientCube::rotateEdges(int, bool) [86] std::__allocated_ptr<std::allocator<std::_List_node<corner> > >::~__allocated_ptr() [168] std::remove_reference<int&>::type&& std::move<int&>(int&)
 [374] ClientCube::shift12by3n(int&, int&, int&, int&, int&, int&, int&, int&, int&, int&, int&, int&, int&) [87] std::__allocated_ptr<std::allocator<std::_List_node<corner> > >::operator=(decltype(nullptr)) [225] void std::sort<int*>(int*, int*)
 [375] ClientCube::swapCorners(int) [285] std::__allocated_ptr<std::allocator<std::_List_node<middle> > >::__allocated_ptr(std::allocator<std::_List_node<middle> >&, std::_List_node<middle>*) [441] std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<int> >, std::is_move_constructible<int>, std::is_move_assignable<int> >::value, void>::type std::swap<int>(int&, int&)
 [376] ClientCube::cubeToString[abi:cxx11]() [286] std::__allocated_ptr<std::allocator<std::_List_node<middle> > >::~__allocated_ptr() [226] void std::__sort<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter)
 [377] ClientCube::findBestFace(int) [287] std::__allocated_ptr<std::allocator<std::_List_node<middle> > >::operator=(decltype(nullptr)) [188] void std::advance<std::_List_iterator<edge>, int>(std::_List_iterator<edge>&, int)
 [378] ClientCube::mapForSolver() [122] std::__allocated_ptr<std::allocator<std::_List_node<int> > >::__allocated_ptr(std::allocator<std::_List_node<int> >&, std::_List_node<int>*) [162] void std::advance<std::_List_iterator<corner>, int>(std::_List_iterator<corner>&, int)
 [379] ClientCube::moveTopEdges() [123] std::__allocated_ptr<std::allocator<std::_List_node<int> > >::~__allocated_ptr() [70] edge const& std::forward<edge const&>(std::remove_reference<edge const&>::type&)
 [380] ClientCube::stringToCube(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) [124] std::__allocated_ptr<std::allocator<std::_List_node<int> > >::operator=(decltype(nullptr)) [60] corner const& std::forward<corner const&>(std::remove_reference<corner const&>::type&)
 [381] ClientCube::solveTopCross() [154] std::allocator_traits<std::allocator<std::_List_node<edge> > >::deallocate(std::allocator<std::_List_node<edge> >&, std::_List_node<edge>*, unsigned long) [251] middle const& std::forward<middle const&>(std::remove_reference<middle const&>::type&)
 [382] ClientCube::twoEdgeRotate(int, bool) [155] void std::allocator_traits<std::allocator<std::_List_node<edge> > >::destroy<edge>(std::allocator<std::_List_node<edge> >&, edge*) [67] int const& std::forward<int const&>(std::remove_reference<int const&>::type&)
 [383] ClientCube::moveTopCorners() [147] std::allocator_traits<std::allocator<std::_List_node<edge> > >::allocate(std::allocator<std::_List_node<edge> >&, unsigned long) [182] std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*)
 [384] ClientCube::findBottomMatch(int) [148] void std::allocator_traits<std::allocator<std::_List_node<edge> > >::construct<edge, edge const&>(std::allocator<std::_List_node<edge> >&, edge*, edge const&) [189] void std::__advance<std::_List_iterator<edge>, long>(std::_List_iterator<edge>&, long, std::bidirectional_iterator_tag)
 [385] ClientCube::findNextTopEdge(int&, int&) [95] std::allocator_traits<std::allocator<std::_List_node<corner> > >::deallocate(std::allocator<std::_List_node<corner> >&, std::_List_node<corner>*, unsigned long) [163] void std::__advance<std::_List_iterator<corner>, long>(std::_List_iterator<corner>&, long, std::bidirectional_iterator_tag)
 [386] ClientCube::middleAlgorithm(int, int) [96] void std::allocator_traits<std::allocator<std::_List_node<corner> > >::destroy<corner>(std::allocator<std::_List_node<corner> >&, corner*) [442] void std::iter_swap<int*, int*>(int*, int*)
 [387] ClientCube::placeMiddleEdge(int, int) [88] std::allocator_traits<std::allocator<std::_List_node<corner> > >::allocate(std::allocator<std::_List_node<corner> >&, unsigned long) [167] bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
 [388] ClientCube::solveTopCorners() [89] void std::allocator_traits<std::allocator<std::_List_node<corner> > >::construct<corner, corner const&>(std::allocator<std::_List_node<corner> >&, corner*, corner const&) [185] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 [389] ClientCube::twoCornerRotate(int, bool) [288] std::allocator_traits<std::allocator<std::_List_node<middle> > >::deallocate(std::allocator<std::_List_node<middle> >&, std::_List_node<middle>*, unsigned long) [186] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
 [390] ClientCube::solveBottomLayer() [289] void std::allocator_traits<std::allocator<std::_List_node<middle> > >::destroy<middle>(std::allocator<std::_List_node<middle> >&, middle*) [69] operator new(unsigned long, void*)
 [391] ClientCube::solveMiddleLayer() [290] std::allocator_traits<std::allocator<std::_List_node<middle> > >::allocate(std::allocator<std::_List_node<middle> >&, unsigned long) [443] __do_global_dtors_aux
 [392] ClientCube::cornerOrientation() [291] void std::allocator_traits<std::allocator<std::_List_node<middle> > >::construct<middle, middle const&>(std::allocator<std::_List_node<middle> >&, middle*, middle const&) [444] __do_global_dtors_aux_fini_array_entry
 [393] ClientCube::findNextTopCorner(int&, int&) [125] std::allocator_traits<std::allocator<std::_List_node<int> > >::deallocate(std::allocator<std::_List_node<int> >&, std::_List_node<int>*, unsigned long) [445] __frame_dummy_init_array_entry
 [394] ClientCube::mapForCustomColor() [126] void std::allocator_traits<std::allocator<std::_List_node<int> > >::destroy<int>(std::allocator<std::_List_node<int> >&, int*) [446] __gmon_start__
 [395] ClientCube::numCorrectCorners() [127] std::allocator_traits<std::allocator<std::_List_node<int> > >::allocate(std::allocator<std::_List_node<int> >&, unsigned long) [447] __libc_csu_fini
 [396] ClientCube::correctBottomEdges() [128] void std::allocator_traits<std::allocator<std::_List_node<int> > >::construct<int, int const&>(std::allocator<std::_List_node<int> >&, int*, int const&) [448] __libc_csu_init
 [397] ClientCube::positionBottomEdges() [176] std::_List_const_iterator<edge>::_List_const_iterator(std::_List_iterator<edge> const&) [449] _dl_relocate_static_pie
 [398] ClientCube::correctBottomCorners() [159] std::_List_const_iterator<corner>::_List_const_iterator(std::_List_iterator<corner> const&) [450] _fini
 [399] ClientCube::numEdgesInCorrectPos() [301] std::_List_const_iterator<middle>::_List_const_iterator(std::_List_iterator<middle> const&) [451] _init
 [400] ClientCube::positionBottomCorners() [228] int* std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<int>(int const*, int const*, int*) [452] _start
 [401] ClientCube::last[abi:cxx11]() [198] std::__cxx11::_List_base<edge, std::allocator<edge> >::_List_impl::_List_impl() [44] atexit
 [402] ClientCube::print()   [203] std::__cxx11::_List_base<edge, std::allocator<edge> >::_List_impl::~_List_impl() [45] data_start
 [403] ClientCube::rotate(int, int) [177] std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_dec_size(unsigned long) [46] deregister_tm_clones
 [404] ClientCube::getEdge(int&, int&, int&, int&) [149] std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_get_node() [47] etext
 [405] ClientCube::getCorner(int&, int&, int&, int&, int&) [150] std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_inc_size(unsigned long) [48] frame_dummy
 [406] ClientCube::getCorner(int, int*) [156] std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_put_node(std::_List_node<edge>*) [1] main
 [407] ClientCube::inputCube() [194] std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_set_size(unsigned long) [49] register_tm_clones
 [408] ClientCube::randomize() [100] std::__cxx11::_List_base<edge, std::allocator<edge> >::_M_get_Node_allocator()
